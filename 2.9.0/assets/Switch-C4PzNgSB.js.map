{"version":3,"file":"Switch-C4PzNgSB.js","sources":["../../../src/components/forms/Switch/Switch.enums.ts","../../../src/components/forms/Switch/Switch.tsx"],"sourcesContent":["export const SwitchSizes = {\n  md: 'md',\n  sm: 'sm',\n} as const;\n","import { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { __, pipe, subtract } from 'ramda';\nimport cls from 'classnames';\n\nimport { getFormStyle, getRadii, getToken, pxToRem } from '../../../utils';\nimport { Sizes, SwitchProps, SwitchThumbProps } from './Switch.types';\nimport { SwitchSizes } from './Switch.enums';\nimport { CLX_COMPONENT } from '../../../theme/constants';\n\n// Minimum width for\nconst SwitchMdWithThumb = 96;\nconst SwitchMdWithoutThumb = 56;\nconst SwitchSmWithThumb = 64;\nconst SwitchSmWithoutThumb = 40;\n\nconst SwitchThumbWrapperMedium = css<{ label: string; maxWidth: number }>`\n  ${({ label }) =>\n    css`\n      min-width: ${pxToRem(label ? SwitchMdWithThumb : SwitchMdWithoutThumb)};\n    `}\n  ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n      width: ${pxToRem(maxWidth)};\n    `};\n`;\n\nconst SwitchThumbWrapperSmall = css<{ label: string; maxWidth: number }>`\n  ${({ label }) =>\n    css`\n      min-width: ${pxToRem(label ? SwitchSmWithThumb : SwitchSmWithoutThumb)};\n    `}\n  ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n      width: ${pxToRem(maxWidth)};\n    `};\n`;\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n// Paddings\nconst SwitchPaddingNotCheckedMedium = css`\n  padding-left: ${pxToRem(37)};\n  padding-right: ${pxToRem(10)};\n`;\n\nconst SwitchPaddingNotCheckedSmall = css`\n  padding-left: ${pxToRem(26)};\n  padding-right: ${pxToRem(5)};\n`;\n\nconst SwitchPaddingCheckedMedium = css`\n  padding-right: ${pxToRem(37)};\n  padding-left: ${pxToRem(10)};\n`;\n\nconst SwitchPaddingCheckedSmall = css`\n  padding-right: ${pxToRem(26)};\n  padding-left: ${pxToRem(5)};\n`;\n\nconst switchThumbWrapperSizes = {\n  [SwitchSizes.md]: SwitchThumbWrapperMedium,\n  [SwitchSizes.sm]: SwitchThumbWrapperSmall,\n};\n\nconst switchNotCheckedThumbPaddings = {\n  [SwitchSizes.md]: SwitchPaddingNotCheckedMedium,\n  [SwitchSizes.sm]: SwitchPaddingNotCheckedSmall,\n};\n\nconst switchCheckedThumbPaddings = {\n  [SwitchSizes.md]: SwitchPaddingCheckedMedium,\n  [SwitchSizes.sm]: SwitchPaddingCheckedSmall,\n};\n\nconst switchSizes = {\n  [SwitchSizes.md]: 'size-action-size',\n  [SwitchSizes.sm]: 'size-action-size-sm',\n};\n\nconst getSwitchThumbAfterElementSize = ({ $size, theme }) =>\n  pipe(\n    getToken(switchSizes[$size]),\n    subtract(__, 1.5 * theme.space.xs),\n    pxToRem,\n  )({ theme });\n\nconst getSwitchHeight = ({ $size, theme }) =>\n  pipe(getToken(switchSizes[$size]), pxToRem)({ theme });\n\nconst BaseThumb = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  margin: 0;\n  border-radius: ${getRadii('round')};\n  cursor: pointer;\n`;\n\nconst Thumb = styled(BaseThumb)<SwitchThumbProps>`\n  height: ${getSwitchHeight};\n  background: ${getFormStyle('switchBgColor')};\n  ${({ $size }) => switchThumbWrapperSizes[$size]};\n  ${({ isDisabled }) =>\n    css`\n      border: 1px solid\n        ${getFormStyle(isDisabled ? 'disabledBorderColor' : 'borderColor')};\n    `};\n`;\n\nconst ThumbContent = styled.div<Omit<SwitchThumbProps, 'maxWidth'>>`\n  cursor: pointer;\n  ${({ $size }) => switchNotCheckedThumbPaddings[$size]};\n  &::after {\n    content: '';\n    position: absolute;\n    top: ${pxToRem(2)};\n    left: ${pxToRem(2)};\n    width: ${getSwitchThumbAfterElementSize};\n    height: ${getSwitchThumbAfterElementSize};\n    ${({ isDisabled }) =>\n      css`\n        background: ${getFormStyle(\n          isDisabled ? 'disabledColor' : 'switchKnobBgColor',\n        )};\n      `};\n    border-radius: ${getRadii('circle')};\n    transition: 0.3s;\n  }\n  &:active::after {\n    background-color: ${getFormStyle('hoverIndicatorColor')};\n  }\n  transition: 0.3s;\n`;\n\nconst Input = styled.input<{\n  $size?: Sizes;\n}>`\n  height: 0;\n  width: 0;\n  display: none;\n  &:checked:disabled + ${/* sc-selector */ Thumb} {\n    color: ${getFormStyle('activeColor')};\n    background: ${getFormStyle('disabledColor')};\n    border-color: ${getFormStyle('disabledColor')};\n  }\n\n  &:hover + ${Thumb} {\n    background-color: ${getFormStyle('activeBgColor')};\n  }\n  &:active + ${Thumb} {\n    background-color: ${getFormStyle('activeBgColor')};\n  }\n\n  &:checked + ${Thumb} {\n    ${ThumbContent} {\n      ${({ $size }) => switchCheckedThumbPaddings[$size]};\n    }\n  }\n\n  &:checked + ${Thumb} {\n    color: ${getFormStyle('activeColor')};\n    background: ${getFormStyle('activeBorderColor')};\n    border-color: ${getFormStyle('activeBorderColor')};\n  }\n  &:checked + ${Thumb} {\n    ${/* sc-selector */ ThumbContent}::after {\n      background: ${getFormStyle('activeColor')};\n      left: calc(100% - ${pxToRem(2)});\n      transform: translateX(-100%);\n    }\n  }\n  &:checked:disabled + ${Thumb} {\n    ${/* sc-selector */ ThumbContent}::after {\n      background: ${getFormStyle('switchBgColor')};\n    }\n  }\n  &:checked:hover + ${Thumb} {\n    background-color: ${getFormStyle('hoverBgColor')};\n  }\n  &:checked:active + ${Thumb} {\n    background-color: ${getFormStyle('pressedBgColor')};\n  }\n`;\n\nconst Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  (\n    {\n      switchId,\n      isDisabled = false,\n      size = SwitchSizes.md,\n      className,\n      ...props\n    },\n    ref,\n  ) => (\n    <SwitchWrapper className={cls(CLX_COMPONENT, className)}>\n      <Input\n        ref={ref}\n        $size={size}\n        disabled={isDisabled}\n        id={switchId}\n        type=\"checkbox\"\n        {...props}\n      />\n      <Thumb $size={size} htmlFor={switchId} isDisabled={isDisabled}>\n        <ThumbContent $size={size} isDisabled={isDisabled} />\n      </Thumb>\n    </SwitchWrapper>\n  ),\n);\n\nexport default Switch;\n"],"names":["cov_21erzkgtrh","actualCoverage","SwitchSizes","md","sm","cov_1k633l33ws","path","hash","global","gcv","coverageData","coverage","SwitchMdWithThumb","s","SwitchMdWithoutThumb","SwitchSmWithThumb","SwitchSmWithoutThumb","SwitchThumbWrapperMedium","css","label","f","pxToRem","b","maxWidth","SwitchThumbWrapperSmall","SwitchPaddingCheckedMedium","SwitchPaddingNotCheckedMedium","SwitchPaddingNotCheckedSmall","SwitchPaddingCheckedSmall","switchThumbWrapperSizes","switchNotCheckedThumbPaddings","switchCheckedThumbPaddings","switchSizes","getSwitchThumbAfterElementSize","$size","theme","pipe","getToken","subtract","__","space","xs","Thumb","ThumbContent","styled","BaseThumb","withConfig","displayName","componentId","getSwitchHeight","getFormStyle","div","isDisabled","getRadii"],"mappings":"yqCAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAME,MAAAA,GAAAA,IAAAA,EAAc,CAAA,IAAA,CACzBC,GAAI,KACJC,GAAI,IACN,GC8BgB,SAAAC,GAAA,CAAA,IAAAC,EAAA,uFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,uFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA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"}
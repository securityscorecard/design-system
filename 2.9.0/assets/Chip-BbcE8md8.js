import{j as c}from"./jsx-runtime-Cw0GR0a5.js";import{r as u}from"./index-CTjT7uj6.js";import"./index-UyBh8dRE.js";import{g as m,C as p}from"./utils-DJYzM6Bc.js";import{I as d}from"./Inline.enums-B2crYYgS.js";function e(){var n="/home/runner/work/design-system/design-system/src/components/Chip/Chip.tsx",o="c9111c112396abb22e29ec15e1e3a5af8d624b20",l=window,a="__coverage__",i={path:"/home/runner/work/design-system/design-system/src/components/Chip/Chip.tsx",statementMap:{0:{start:{line:12,column:21},end:{line:15,column:20}},1:{start:{line:12,column:35},end:{line:15,column:4}},2:{start:{line:16,column:2},end:{line:19,column:88}},3:{start:{line:21,column:0},end:{line:21,column:26}},4:{start:{line:23,column:0},end:{line:29,column:50}},5:{start:{line:25,column:4},end:{line:25,column:30}},6:{start:{line:27,column:4},end:{line:27,column:1069}}},fnMap:{0:{name:"Chip",decl:{start:{line:6,column:9},end:{line:6,column:13}},loc:{start:{line:11,column:3},end:{line:20,column:1}},line:11},1:{name:"(anonymous_1)",decl:{start:{line:12,column:29},end:{line:12,column:30}},loc:{start:{line:12,column:35},end:{line:15,column:4}},line:12}},branchMap:{0:{loc:{start:{line:8,column:2},end:{line:8,column:13}},type:"default-arg",locations:[{start:{line:8,column:9},end:{line:8,column:13}}],line:8},1:{loc:{start:{line:9,column:2},end:{line:9,column:16}},type:"default-arg",locations:[{start:{line:9,column:10},end:{line:9,column:16}}],line:9}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},f:{0:0,1:0},b:{0:[0],1:[0]},inputSourceMap:{version:3,file:null,sources:["/home/runner/work/design-system/design-system/src/components/Chip/Chip.tsx"],names:["children","size","color","style","chipStyles","Chip"],mappings:"AAoBM;AApBN;AAEA;AAEA;AACA;AAEA;AAAc;AACZA;AACO;AACC;AAEmC;AAC3C;AAC4B;AAAEC;AAAMC;AAIpC;AAC8B;AAAWC;AAAUC;AAMrD;AAEAC;AAEA;"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c9111c112396abb22e29ec15e1e3a5af8d624b20"},t=l[a]||(l[a]={});(!t[n]||t[n].hash!==o)&&(t[n]=i);var s=t[n];return e=function(){return s},s}e();function r({children:n,size:o=(e().b[0][0]++,"sm"),color:l=(e().b[1][0]++,"gray"),...a}){e().f[0]++;const i=(e().s[0]++,u.useMemo(()=>(e().f[1]++,e().s[1]++,m({size:o,color:l})),[o,l]));return e().s[2]++,c.jsx(p,{...a,style:{...a.style,...i},children:c.jsx(d,{align:"center",gap:"1x",children:n})})}e().s[3]++;r.displayName="Chip";e().s[4]++;try{e().s[5]++,r.displayName="Chip",e().s[6]++,r.__docgenInfo={description:"",displayName:"Chip",props:{children:{defaultValue:null,description:"Chip content can be composed from `ChipLabel` and `ChipIcon` components to achieve\ndesired visual style. Those components can be used in variable order",name:"children",required:!1,type:{name:"ReactNode & (ReactI18NextChildren | Iterable<ReactI18NextChildren>)"}},size:{defaultValue:{value:"sm"},description:"Chip size variant",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'}]}},color:{defaultValue:{value:"gray"},description:"Chip color variant",name:"color",required:!1,type:{name:"enum",value:[{value:'"gray"'},{value:'"blue"'},{value:'"turquoise"'},{value:'"teal"'},{value:'"green"'},{value:'"yellow"'},{value:'"orange"'},{value:'"red"'},{value:'"pink"'},{value:'"purple"'},{value:'"brown"'}]}}}}}catch{}export{r as C};
//# sourceMappingURL=Chip-BbcE8md8.js.map

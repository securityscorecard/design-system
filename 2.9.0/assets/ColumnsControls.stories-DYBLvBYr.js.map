{"version":3,"file":"ColumnsControls.stories-DYBLvBYr.js","sources":["../../../src/components/Datatable/components/ColumnsControls/ColumnsControls.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport ColumnsControls from './ColumnsControls';\nimport { simpleColumns } from '../../../_internal/BaseTable/mocks/columns';\nimport { useColumnsControls } from '../../hooks/useColumnsControls';\nimport { ColumnsControlsProps } from './ColumnsControls.types';\n\nexport default {\n  title:\n    'components/Datatable/internalComponents/ControlsModule/ColumnsControls',\n  component: ColumnsControls,\n  parameters: {\n    viewMode: 'story',\n    docs: { disable: true },\n    previewTabs: { 'storybook/docs/panel': { hidden: true } },\n  },\n} as Meta;\n\nexport const Default: StoryFn<ColumnsControlsProps> = ({ isOpen, ...args }) => {\n  const [isDefaultOpen, setIsDefaultOpen] = useState(isOpen);\n  useColumnsControls(\n    action('onColumnOrderChange'),\n    action('onColumnVisibilityChange'),\n    simpleColumns,\n  );\n\n  return (\n    <ColumnsControls isOpen={isDefaultOpen} {...args}>\n      <button type=\"button\" onClick={() => setIsDefaultOpen((state) => !state)}>\n        Open Columns\n      </button>\n    </ColumnsControls>\n  );\n};\nDefault.args = {\n  isOpen: true,\n  onApply: action('ColumnsOnApply'),\n  onClose: action('ColumnsOnClose'),\n  onOpen: action('ColumnsOnOpen'),\n  onReset: action('ColumnsOnReset'),\n};\nDefault.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const WithCustomOrder: StoryFn<ColumnsControlsProps> = ({\n  isOpen,\n  ...args\n}) => {\n  const [isDefaultOpen, setIsDefaultOpen] = useState(isOpen);\n  useColumnsControls(\n    action('onColumnOrderChange'),\n    action('onColumnVisibilityChange'),\n    simpleColumns,\n    ['country', 'source', 'findingsCount'],\n  );\n\n  return (\n    <ColumnsControls isOpen={isDefaultOpen} {...args}>\n      <button type=\"button\" onClick={() => setIsDefaultOpen((state) => !state)}>\n        Open Columns\n      </button>\n    </ColumnsControls>\n  );\n};\n\nWithCustomOrder.args = Default.args;\n"],"names":["component","ColumnsControls_stories","parameters","viewMode","docs","ColumnsControls","disable","previewTabs","hidden","Default","isOpen","args","isDefaultOpen","setIsDefaultOpen","useState","useColumnsControls","action","simpleColumns","state","onApply","onClose","onOpen","onReset","screenshot","skip","WithCustomOrder"],"mappings":"+yGAYEA,MAA0BC,GAAA,CAC1BC,MACEC,yEACAC,UAAMC,EAAEC,WAAS,CAAKH,SAAC,QACvBI,KAAAA,CAAAA,QAAa,EAAA,EAAEA,YAAA,CAAA,uBAAwB,CAAAC,OAAA,EAAA,CAAA,CAAEA,CAAa,EACxDC,EAAAA,CAAA,CAAAC,OAAAA,EAAA,GAAAC,CAAA,IAAA,MACO,CAAAC,EAAAC,CAAA,EAAAC,WAAAJ,CAAA,EAEFK,OAAAA,EAAwDC,EAAA,qBAAA,EAAKL,EAAAA,0BAAAA,EAAWM,CAC7E,QASFZ,EAAmB,CAAA,OAAgBO,OACnC,eAAA,SAAA,CAAA,KAAA,SAAA,QAAA,IAAAC,EAAAK,GAAA,CAAAA,CAAA,EAAA,wBAEM,CAEL,CAAA,CAECR,EACAS,EAAAA,KAASH,CACTI,OAASJ,GACTK,QAAQL,EAAO,gBAAgB,EAC/BM,QAASN,EAAO,gBAAgB,EACjCK,OAAAL,EAAA,eAAA,EACMM,UAAW,gBAAG,CACnBC,EAAcC,EAAItB,WAAE,CAAKqB,WAAA,CAAAC,KAAA,EAAA,CAC3B,QAGQC,EAAAA,CAAA,CACNf,OAAAA,EACI,GAAAC,KACE,CACNI,KAAkB,CAAAH,GACT,EAAAE,WACPE,CAAO,EAOXA,OAAAA,EAAAA,EAAa,qBAAsB,EACnCA,EAAA,0BAAA,EACAC,EACI,CAAA,mBAAkB,eAAA,CAErB;;;;;;;;;;;;;;;;;;;;;;"}
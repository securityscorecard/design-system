{"version":3,"file":"Label-BRtNJM2P.js","sources":["../../../src/components/forms/Label/Label.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef, ReactNode } from 'react';\nimport styled from 'styled-components';\nimport cls from 'classnames';\n\nimport { CLX_COMPONENT } from '../../../theme/constants';\nimport ElementLabel from '../../ElementLabel/ElementLabel';\n\nconst LabelRoot = styled(ElementLabel)<{ $isInline: boolean }>`\n  display: block;\n  padding-inline: var(--sscds-space-1x);\n  padding-block-end: ${({ $isInline }) =>\n    $isInline ? undefined : 'var(--sscds-space-2x)'};\n  cursor: inherit;\n\n  > * {\n    margin: 0;\n  }\n`;\n\nconst Label = ({\n  children,\n  htmlFor,\n  className,\n  isInline = false,\n  ...props\n}: Omit<ComponentPropsWithoutRef<'label'>, 'color'> & {\n  children: ReactNode;\n  isInline?: boolean;\n}) => (\n  <LabelRoot\n    $isInline={isInline}\n    className={cls(CLX_COMPONENT, className)}\n    forwardedAs=\"label\"\n    htmlFor={htmlFor}\n    {...props}\n  >\n    {children}\n  </LabelRoot>\n);\n\nexport default Label;\n"],"names":["LabelRoot","cov_3wm935q5a","s","styled","ElementLabel","withConfig","displayName","componentId","$isInline","f","b"],"mappings":"qkEAOsC,MAAAA,GAAAC,EAAA,EAAAC,EAAA,CAAA,IAAAC,EAAAC,CAAA,EAAAC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,aAAA,CAAA,EAAA,CAAA,wEAAA,gCAAA,EAAA,CAAA,CAGFC,UAAAA,CAAA,KAAAP,EAAA,EAAAQ,EAAA,CAAA,IAAAR,EAAA,EAAAC,EAAA,CAAA,IAAAM,GAAAP,EAAA,EAAAS,EAAA,CAAA,EAAA,CAAA,IAAA,SAAAT,EAAA,EAAAS,EAAA,CAAA,EAAA,CAAA,IAAA,yBAAA,GAAAT,EAAA,EAAAC,EAAA,CAAA"}
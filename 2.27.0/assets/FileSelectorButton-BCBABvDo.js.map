{"version":3,"file":"FileSelectorButton-BCBABvDo.js","sources":["../../../src/components/FileSelectorButton/FileSelectorButton.tsx"],"sourcesContent":["import type { ComponentPropsWithoutRef } from 'react';\nimport { type DropzoneOptions, useDropzone } from 'react-dropzone';\nimport cls from 'classnames';\n\nimport Button from '../ButtonV2/Button';\nimport { CLX_COMPONENT } from '../../theme/constants';\n\nexport type FileSelectorButtonProps = Omit<\n  DropzoneOptions,\n  | 'disabled'\n  | 'preventDropOnDocument'\n  | 'noClick'\n  | 'noDrag'\n  | 'noKeyboard'\n  | 'noDragEventsBubbling'\n  | 'getFilesFromEvent'\n  | 'useFsAccessApi'\n  | 'minSize'\n  | 'maxSize'\n  | 'onDrop'\n  | 'onDropAccepted'\n  | 'onDropRejected'\n> & {\n  /** File selector button label */\n  label?: string;\n  /** Expands button to full width of the parrent component */\n  isExpanded?: boolean;\n  /** Disables the FileSelector */\n  isDisabled?: boolean;\n  /** Minimal file size in bytes */\n  minFileSize?: number;\n  /** Maximal file size in bytes */\n  maxFileSize?: number;\n  /** Callback fired on file drop or select through native dialog */\n  onFilesDrop?: DropzoneOptions['onDrop'];\n  /** Callback fired when selected files are accepted */\n  onFilesAccepted?: DropzoneOptions['onDropAccepted'];\n  /** Callback fired when selected files are rejected */\n  onFilesRejected?: DropzoneOptions['onDropRejected'];\n};\n\nfunction FileSelectorButton({\n  label = 'Upload',\n  isDisabled = false,\n  isExpanded = false,\n  multiple = false,\n  accept,\n  minFileSize,\n  maxFileSize,\n  maxFiles,\n  onFilesDrop,\n  onFilesAccepted,\n  onFilesRejected,\n  onFileDialogCancel,\n  onFileDialogOpen,\n  onDragEnter,\n  onDragOver,\n  onDragLeave,\n  validator,\n  className,\n  ...props\n}: FileSelectorButtonProps & ComponentPropsWithoutRef<'button'>) {\n  const { getRootProps, getInputProps } = useDropzone({\n    disabled: isDisabled,\n    noDrag: true,\n    multiple,\n    accept,\n    minSize: minFileSize,\n    maxSize: maxFileSize,\n    maxFiles,\n    onDrop: onFilesDrop,\n    onDropAccepted: onFilesAccepted,\n    onDropRejected: onFilesRejected,\n    onFileDialogCancel,\n    onFileDialogOpen,\n    onDragEnter,\n    onDragOver,\n    onDragLeave,\n    validator,\n  });\n\n  return (\n    <div className={cls(CLX_COMPONENT, className)}>\n      <input aria-label=\"upload file\" aria-hidden {...getInputProps()} />\n      <Button\n        {...getRootProps({\n          ...props,\n          iconStart: { name: 'upload' },\n          isDisabled,\n          variant: 'subtle',\n          isExpanded,\n        })}\n        role={undefined}\n      >\n        {label}\n      </Button>\n    </div>\n  );\n}\n\nFileSelectorButton.displayName = 'FileSelectorButton';\n\nexport default FileSelectorButton;\n"],"names":["cov_29wcfe4sis","path","hash","global","gcv","coverageData","coverage","actualCoverage","onFileDialogCancel","onFileDialogOpen","onDragEnter","onDragOver","onDragLeave","validator","maxFileSize","maxFiles","onFilesDrop","onFilesAccepted","props","isDisabled","isExpanded","className","f"],"mappings":"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"}
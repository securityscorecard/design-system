{"version":3,"file":"Breadcrumbs-CuWPbUsA.js","sources":["../../../src/components/Breadcrumbs/BreadcrumbItem.tsx","../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\n\nimport { BreadcrumbItemProps } from './Breadcrumbs.types';\nimport { Text } from '../Text';\nimport { Link } from '../Link';\nimport { Icon } from '../Icon';\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconLink = styled(Link)`\n  &:hover {\n    color: var(--sscds-color-icon-subtle);\n  }\n`;\n\nconst BreadcrumbItem = ({\n  children,\n  isSelected = false,\n  to = undefined,\n  href = undefined,\n  iconName,\n  iconType = 'ssc',\n  ...props\n}: BreadcrumbItemProps) => {\n  const hasIcon = isNotUndefined(iconName);\n\n  return (\n    <ListItem>\n      {isSelected ? (\n        <Text aria-current=\"page\" variant=\"subtle\">\n          {children}\n        </Text>\n      ) : hasIcon ? (\n        <IconLink\n          color=\"secondary\"\n          href={href}\n          to={to}\n          {...props}\n          aria-label={children}\n        >\n          <Icon name={iconName} size=\"sm\" type={iconType} />\n        </IconLink>\n      ) : (\n        <Link color=\"secondary\" href={href} to={to} {...props}>\n          {children}\n        </Link>\n      )}\n    </ListItem>\n  );\n};\n\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n\nexport default BreadcrumbItem;\n","import { slice } from 'ramda';\nimport styled from 'styled-components';\nimport { isNilOrEmpty, isNotNilOrEmpty } from 'ramda-adjunct';\nimport cls from 'classnames';\nimport {\n  Children,\n  type MouseEvent,\n  type ReactElement,\n  type ReactNode,\n  cloneElement,\n  isValidElement,\n} from 'react';\n\nimport type {\n  BreadcrumbItemProps,\n  BreadcrumbsProps,\n} from './Breadcrumbs.types';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Icon } from '../Icon';\nimport { DropdownMenu } from '../_internal/BaseDropdownMenu';\nimport { ActionKinds } from '../../types/action.types';\nimport { ColorTypes, SpaceSizes } from '../../theme';\nimport { Inline } from '../layout';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { IconLink } from './BreadcrumbItem';\n\nconst BreadcrumbsWrapper = styled.nav`\n  display: flex;\n`;\n\nconst InlineOrderedList = styled(Inline)`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\nconst SeparatorListItem = styled.li`\n  display: flex;\n`;\n\nconst itemsAfterCollapse = 3;\nconst itemsBeforeCollapse = 1;\n\n// Build list of breadcrumbs interspersing a separator\nconst insertSeparators = (items: ReactElement[]) => {\n  return items.reduce((prev, current, index) => {\n    if (index < items.length - 1) {\n      return [\n        ...prev,\n        current,\n        <SeparatorListItem aria-hidden=\"true\" style={{ display: 'flex' }}>\n          <Icon\n            // eslint-disable-next-line react/no-array-index-key\n            key={`separator-${index}`}\n            color={ColorTypes.neutral600}\n            name={SSCIconNames.angleRight}\n            size=\"sm\"\n            hasFixedSize\n          />\n        </SeparatorListItem>,\n      ];\n    }\n\n    return [...prev, current];\n  }, []);\n};\n\nconst renderDropdown = (actions: ActionKinds<MouseEvent[]>[]) => (\n  <li key=\"breadcrumbs-dropdown\">\n    <DropdownMenu\n      actions={actions}\n      paneWidth={270}\n      placement=\"bottom-start\"\n      aria-hidden\n    >\n      <IconLink aria-label=\"Open breadcrumbs menu\" color=\"secondary\">\n        <Icon name=\"ellipsis-h\" size=\"sm\" />\n      </IconLink>\n    </DropdownMenu>\n  </li>\n);\n\n// this renders the list of items only when the count of the actions is bigger than 2\nconst renderItemsBeforeAndAfter = (\n  allItems: ReactNode[],\n  allDropdownActions: ActionKinds<MouseEvent[]>[],\n) => {\n  const dropdown = renderDropdown(allDropdownActions);\n  return [\n    ...slice(0, itemsBeforeCollapse, allItems),\n    dropdown,\n    ...slice(allItems.length - itemsAfterCollapse, allItems.length, allItems),\n  ];\n};\n\nconst Breadcrumbs = ({ children, className, ...props }: BreadcrumbsProps) => {\n  const allItems = Children.map(children, (breadcrumbItem) => {\n    if (!isValidElement(breadcrumbItem)) {\n      return null;\n    }\n\n    return cloneElement(breadcrumbItem as ReactElement<BreadcrumbItemProps>, {\n      isSelected:\n        isNilOrEmpty(breadcrumbItem.props.to) &&\n        isNilOrEmpty(breadcrumbItem.props.href),\n      ...props,\n    });\n  });\n\n  const allDropdownActions = slice(\n    itemsBeforeCollapse,\n    -Math.abs(itemsAfterCollapse),\n  )(\n    Children.toArray(children).map((breadcrumbItem) => {\n      if (!isValidElement(breadcrumbItem)) {\n        return null;\n      }\n      return {\n        label: breadcrumbItem.props.children,\n        name: breadcrumbItem.props.children,\n        ...(isNotNilOrEmpty(breadcrumbItem.props.to) && {\n          to: breadcrumbItem.props.to,\n        }),\n        ...(isNotNilOrEmpty(breadcrumbItem.props.href) && {\n          href: breadcrumbItem.props.href,\n        }),\n      };\n    }),\n  );\n\n  return (\n    <BreadcrumbsWrapper\n      aria-label=\"Breadcrumb\"\n      className={cls(CLX_COMPONENT, className)}\n    >\n      <InlineOrderedList\n        align=\"center\"\n        as=\"ol\"\n        gap={SpaceSizes.xs}\n        justify=\"center\"\n      >\n        {insertSeparators(\n          allDropdownActions.length < 2\n            ? allItems\n            : renderItemsBeforeAndAfter(allItems, allDropdownActions),\n        )}\n      </InlineOrderedList>\n    </BreadcrumbsWrapper>\n  );\n};\n\nexport default Breadcrumbs;\n"],"names":["iconName","ListItem","cov_1jwd6ytd22","s","styled","li","withConfig","displayName","componentId","IconLink","Link","isSelected","b","to","href","iconType","BreadcrumbItem","cov_1iqcgoy7zu","path","hash","global","gcv","coverageData","coverage","actualCoverage","BreadcrumbsWrapper","nav","InlineOrderedList","Inline","SeparatorListItem","itemsAfterCollapse","itemsBeforeCollapse","insertSeparators","items","f","reduce","prev","current","index","length","jsx","style","display","children","Icon","color","ColorTypes","neutral600","className","hasFixedSize","renderDropdown","actions","DropdownMenu","paneWidth","placement","name","size","renderItemsBeforeAndAfter","allItems","allDropdownActions"],"mappings":"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AA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,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"}
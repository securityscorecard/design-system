{"version":3,"file":"Text.stories-CJBzetQK.js","sources":["../../../src/components/Text/Text.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\n\nimport { Stack } from '../layout';\nimport Text, { Code, Strong } from './Text';\nimport { TextSizes, TextVariants } from './Text.enums';\nimport { generateControl } from '../../utils/tests/storybook';\nimport Paragraph from '../Paragraph/Paragraph';\nimport { Heading } from '../Heading';\nimport { Link } from '../Link';\nimport Display from '../Display/Display';\nimport ElementLabel from '../ElementLabel/ElementLabel';\n\nconst meta = {\n  title: 'typography/Text',\n  component: Text,\n  argTypes: {\n    children: {\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'ReactNode' },\n      },\n    },\n    size: {\n      ...generateControl('select', TextSizes),\n      description: 'Size of the text',\n      table: {\n        defaultValue: { summary: 'md' },\n        type: {\n          summary: Object.values(TextSizes)\n            .map((v) => `'${v}'`)\n            .join('|'),\n        },\n      },\n    },\n    variant: {\n      ...generateControl('select', TextVariants),\n      description: 'Color variant of the text',\n      table: {\n        defaultValue: { summary: 'default' },\n        type: {\n          summary: Object.values(TextVariants)\n            .map((v) => `'${v}'`)\n            .join('|'),\n        },\n      },\n    },\n  },\n  args: {\n    children: 'Lorem ipsum dolor sit amet',\n  },\n} satisfies Meta<typeof Text>;\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Playground: Story = {\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const LargeText: Story = {\n  args: {\n    size: 'lg',\n  },\n};\n\nexport const MediumText: Story = {\n  args: {\n    size: 'md',\n  },\n};\n\nexport const SmallText: Story = {\n  args: {\n    size: 'sm',\n  },\n};\nexport const TextHeading1: Story = {\n  args: {\n    size: 'h1',\n  },\n};\nexport const TextHeading2: Story = {\n  args: {\n    size: 'h2',\n  },\n};\nexport const TextHeading3: Story = {\n  args: {\n    size: 'h3',\n  },\n};\nexport const TextHeading4: Story = {\n  args: {\n    size: 'h4',\n  },\n};\nexport const TextHeading5: Story = {\n  args: {\n    size: 'h5',\n  },\n};\n\nexport const DefaultText: Story = {\n  args: {\n    variant: 'default',\n  },\n};\n\nexport const SubtleText: Story = {\n  args: {\n    variant: 'subtle',\n  },\n};\n\nexport const MonospaceText: Story = {\n  args: {\n    variant: 'monospace',\n  },\n};\n\nexport const DangerText: Story = {\n  args: {\n    variant: 'danger',\n  },\n};\nexport const BoldText: Story = {\n  args: {\n    isBold: true,\n  },\n};\n\nexport const ShorthandComponents: Story = {\n  render: () => (\n    <>\n      <Code>This is shorthand Code component</Code>\n      <br />\n      <br />\n      <Strong>This is shorthand Strong component</Strong>\n    </>\n  ),\n};\n\nexport const DarkMode: Story = {\n  render: () => {\n    return (\n      <Stack gap=\"sm\" justify=\"flex-start\">\n        <Stack gap=\"sm\">\n          <Heading size=\"h1\">Heading 1</Heading>\n          <Heading size=\"h1\" variant=\"secondary\">\n            Heading 1\n          </Heading>\n          <Heading size=\"h2\">Heading 2</Heading>\n          <Heading size=\"h2\" variant=\"secondary\">\n            Heading 2\n          </Heading>\n          <Heading size=\"h3\">Heading 3</Heading>\n          <Heading size=\"h3\" variant=\"secondary\">\n            Heading 3\n          </Heading>\n          <Heading size=\"h4\">Heading 4</Heading>\n          <Heading size=\"h4\" variant=\"secondary\">\n            Heading 4\n          </Heading>\n          <Heading size=\"h5\">Heading 5</Heading>\n          <Heading size=\"h5\" variant=\"secondary\">\n            Heading 5\n          </Heading>\n          <Paragraph>\n            Morbi auctor consectetur ex ut pellentesque. Vestibulum vitae\n            pretium odio, non dignissim dui. Pellentesque congue purus purus,\n            ultricies ullamcorper leo finibus quis.\n          </Paragraph>\n          <Paragraph variant=\"secondary\">\n            Morbi auctor consectetur ex ut pellentesque. Vestibulum vitae\n            pretium odio, non dignissim dui. Pellentesque congue purus purus,\n            ultricies ullamcorper leo finibus quis.\n          </Paragraph>\n          <Text>Morbi auctor consectetur ex ut pellentesque.</Text>\n          <Text variant=\"secondary\">\n            Morbi auctor consectetur ex ut pellentesque.\n          </Text>\n          <Text variant=\"monospace\">\n            Morbi auctor consectetur ex ut pellentesque.\n          </Text>\n          <Text variant=\"danger\">\n            Morbi auctor consectetur ex ut pellentesque.\n          </Text>\n          <Display>100 %</Display>\n          <Display color=\"subtle\">100 %</Display>\n          <Display color=\"success\">100 %</Display>\n          <Display color=\"warning\">100 %</Display>\n          <Display color=\"danger\">100 %</Display>\n          <ElementLabel>Full name</ElementLabel>\n          <ElementLabel color=\"subtle\">Full name</ElementLabel>\n          <ElementLabel aria-disabled=\"true\" color=\"disabled\">\n            Full name\n          </ElementLabel>\n          <ElementLabel color=\"danger\">Full name</ElementLabel>\n          <ElementLabel\n            color=\"inverse\"\n            style={{\n              background: 'var(--sscds-color-neutral-12)',\n            }}\n          >\n            Full name\n          </ElementLabel>\n          <ElementLabel\n            color=\"white\"\n            style={{ background: 'var(--sscds-color-black)' }}\n          >\n            Full name\n          </ElementLabel>\n          <ElementLabel color=\"link\">Full name</ElementLabel>\n          <Link href=\"#\">Go to anchor</Link>\n          <Link color=\"secondary\" href=\"#\">\n            Go to anchor\n          </Link>\n        </Stack>\n      </Stack>\n    );\n  },\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["component","Text","argTypes","children","control","type","table","summary","size","generateControl","TextSizes","description","defaultValue","values","v","join","variant","TextVariants","args","Playground","parameters","screenshot","skip","LargeText","MediumText","SmallText","TextHeading1","TextHeading2","TextHeading3","TextHeading4","TextHeading5","DefaultText","SubtleText","MonospaceText","DangerText","BoldText","isBold","ShorthandComponents","render","jsxs","Fragment","jsx","Code","Strong","Stack","Heading","Paragraph","Display","background","ElementLabel","themeOverride"],"mappings":"g5CAcEA,MAAAA,GAAWC,CACXC,MAAAA,kBACEC,UAAUF,EACRG,SAAAA,CAAWC,SAAM,CAAOD,QAAC,CAAAC,KAAA,MAAA,EACzBC,MAAO,CACLD,KAAM,CAAAE,QAAA,WAAA,CAAEA,CAAqB,EAC/BC,KAAA,CACD,GAAAC,EAAA,SAAAC,CAAA,EACDF,YAAM,mBACJF,MAAkB,CAClBK,aAA+B,CAAAJ,QAAA,IAAA,EAC/BD,KAAO,CACLM,QAAAA,OAAcC,OAAAH,CAAA,EAAEH,IAASO,GAAA,IAAAA,CAAA,GAAA,EAAMC,KAAA,GAAA,CAC/BV,CACEE,CAGF,EACFS,QAAA,CACD,GAAAP,EAAA,SAAAQ,CAAA,EACDD,YAAS,4BACPV,MAAkB,CAClBK,aAAwC,CAAAJ,QAAA,SAAA,EACxCD,KAAO,CACLM,QAAAA,OAAcC,OAAAI,CAAA,EAAEV,IAASO,GAAA,IAAAA,CAAA,GAAA,EAAWC,KAAA,GAAA,CACpCV,CACEE,CAGF,CACF,EACFW,KAAA,CACDf,SAAA,4BACDe,CACEf,EAOSgB,EAAoB,CAC/BC,WAAY,CACVC,WAAY,CAAAC,KAAA,EAAA,CAAEA,CAAW,EAE5BC,EAAA,CAEDL,KAAaK,CACXL,KAAM,IACJV,CACF,EAGWgB,EAAoB,CAC/BN,KAAM,CACJV,KAAM,IACR,CACF,EAGQiB,EAAA,CACJjB,KAAI,CACNA,KAAA,IACD,CACD,EACQkB,EAAA,CACJlB,KAAI,CACNA,KAAA,IACD,CACD,EACQmB,EAAA,CACJnB,KAAI,CACNA,KAAA,IACD,CACD,EACQoB,EAAA,CACJpB,KAAI,CACNA,KAAA,IACD,CACD,EACQqB,EAAA,CACJrB,KAAI,CACNA,KAAA,IACD,CACD,EACQsB,EAAA,CACJtB,KAAI,CACNA,KAAA,IACD,CAED,EAEauB,EAAA,CACXb,KAAA,CACDF,QAAA,SAED,CACEE,EAEAc,EAAA,CACDd,KAAA,CAEDF,QAAaiB,QACXf,CACEF,EAEHiB,EAAA,CAEDf,KAAagB,CACXhB,QAAM,WACJF,CACF,EAEWmB,EAAkB,CAC7BjB,KAAM,CACJkB,QAAQ,QACV,CACF,EAEaC,EAAAA,CACXC,KAAM,CAERF,OAAY,EACZ,CACA,EAEIC,EAAA,CAEHC,OAAAA,IAGOC,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAC,EAAAA,IAAAC,IAAQ,SAAA,kCAAA,CAAA,QAEV,KAAA,EAAA,QACN,KAAS,EAAA,EACCD,EAAAA,IAAAE,aAAqC,oCAAA,CAAA,CAAA,EACrC,CAEV,IAEoC,CACpCL,OAAAA,IAEUG,EAAA,IAAAG,YAAS,QAAmB,aAC5B,SAAAL,EAAA,KAAAK,OAAS,KACnB,SAAA,CAAAH,EAAA,IAAAI,EAAA,CAAA,KAAA,KAAA,SAAA,YAAA,UACmB,CAAA,KAAA,KAAA,QAAA,YAAA,SAET,YAAA,EACVJ,EAAA,IAAAI,EAAA,CAAA,KAAA,KAAA,SAAA,YAAA,UACmB,CAAA,KAAA,KAAA,QAAA,YAAA,SAET,YAAA,EACVJ,EAAA,IAAAI,EAAA,CAAA,KAAA,KAAA,SAAA,YAAA,UACmB,CAAA,KAAA,KAAA,QAAA,YAAA,SAEnB,YAAA,EACAJ,EAAA,IAAAI,EAAA,CAAA,KAAA,KAAA,SAAA,YAAA,QACAA,EAAA,CAAA,KAAA,KAAA,QAAA,YAAA,SAEU,YAAA,EACVJ,EAAA,IAAAI,EAAA,CAAA,KAAA,KAAA,SAAA,YAAA,QACAA,EAAA,CAAA,KAAA,KAAA,QAAA,YAAA,SAEU,YAAA,EACAJ,EAAAA,IAACK,GAAK,SAIN,yKAAA,CAAA,EACVL,EAAA,IAAAK,EAAA,CAAA,QAAA,YAAA,SAIU,0KAAA,EACAL,EAAAA,IAACxC,GAAA,SAAsB,8CAAA,CAAA,EACtBwC,EAAA,IAAAxC,EAAA,SAAa,YAAe,SAE7B,+CAAA,EACCwC,EAAA,IAAAxC,EAAA,SAAa,YAAe,SAE7B,+CAAA,EACCwC,EAAA,IAAAxC,EAAA,SAAa,SAAA,SAEd,+CAAA,EACAwC,EAAAA,IAACM,YAAa,OAAA,CAAA,EACbN,EAAA,IAAAM,EAAA,OACC,SAAe,SAAA,QAAA,EAEbC,EAAAA,IAAAA,EAAAA,CAAAA,MAAY,UAAA,SAAA,QAAA,EACZP,EAAA,IAAAM,EAAA,CAAA,MAAA,UAAA,SAAA,QAAA,EAEdN,EAAA,IAAAM,EAAA,CAAA,MAAA,SAAA,SAAA,QAAA,EACUN,EAAAA,OAAc,SAAA,WAAA,CAAA,EACbA,EAAA,IAAAQ,EAAA,CACC,MAAM,SACD,SAAE,YAAA,QAAED,EAAY,CAAA,gBAAA,OAAA,MAAA,WAAA,SAEjC,YAAA,WACwB,MAAA,SAAA,SAAA,YAAA,EACbP,EAAAA,IAAAQ,EAAA,OACK,gBACA,CAChBD,WAAA,+BAAA,EACgB,SAIb,YAAA,EACD5B,EAAAA,IAAAA,EAAAA,CACU,MAAA,QACN8B,MAAa,CAAEF,WAAA,0BAAA,EAAA,SAGpB,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
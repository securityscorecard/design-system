{"version":3,"file":"StatusPill-Cc8mXGDd.js","sources":["../../src/components/StatusDot/index.ts","../../src/components/StatusPill/StatusPill.tsx"],"sourcesContent":["export { default as StatusDot } from './StatusDot';\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { StatusDot } from '../StatusDot/index';\nimport { StatusDotColors } from '../StatusDot/StatusDot';\nimport { StatusPillProps } from './StatusPill.types';\nimport PillLabel from '../Pill/PillLabel';\nimport { SpaceSizes } from '../../theme';\nimport { Inline, Padbox } from '../layout';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { getColor, getRadii, pxToRem } from '../../utils';\n\nconst StyledPillWrapper = Styled(Padbox)`\n  display: inline-block;\n  height: ${pxToRem(24)};\n  min-width: 0;\n  border-radius: ${getRadii('round')};\n  border: 1px solid ${getColor('neutral.300')};\n  background-color: ${getColor('neutral.0')};\n  padding-right: ${pxToRem(6)};\n  padding-top: ${pxToRem(3)};\n`;\n\nconst StatusPill = ({ color = 'inactive', label }: StatusPillProps) => (\n  <StyledPillWrapper\n    paddingSize={SpaceSizes.xs}\n    paddingType={PaddingTypes.squish}\n  >\n    <Inline align=\"center\" gap=\"sm\">\n      <StatusDot color={color} />\n      <PillLabel>{label}</PillLabel>\n    </Inline>\n  </StyledPillWrapper>\n);\n\nStatusPill.propTypes = {\n  label: PropTypes.string.isRequired,\n  color: PropTypes.oneOf(Object.keys(StatusDotColors)),\n};\nexport default StatusPill;\n"],"names":["cov_qg3o8wqjl","actualCoverage","cov_2rnryrj2nj","path","hash","global","gcv","coverageData","coverage","StyledPillWrapper","s","Styled","Padbox","withConfig","displayName","componentId","pxToRem","getRadii","getColor","StatusPill","color","b","label"],"mappings":"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"}
{"version":3,"file":"index-PS5U9aCu.js","sources":["../../src/components/_internal/BaseButton/BaseButton.enums.ts","../../src/components/_internal/BaseButton/BaseStyledButton.tsx","../../src/components/_internal/BaseButton/BaseButton.tsx"],"sourcesContent":["export const BaseButtonVariants = {\n  solid: 'solid',\n  outline: 'outline',\n  text: 'text',\n  ghost: 'ghost',\n} as const;\n\nexport const BaseButtonColors = {\n  primary: 'primary',\n  secondary: 'secondary',\n  success: 'success',\n  danger: 'danger',\n} as const;\n","import styled, { css } from 'styled-components';\nimport { includes, pipe } from 'ramda';\n\nimport {\n  createMarginSpacing,\n  getSpace,\n  getToken,\n  pxToRem,\n} from '../../../utils';\nimport { BaseStyledButtonProps } from './BaseButton.types';\nimport { BaseButtonVariants } from './BaseButton.enums';\nimport { Padbox } from '../../layout';\n\n/*\n * BUTTON VARIANTS\n */\n\nconst ButtonSolid = css<BaseStyledButtonProps>`\n  text-decoration: none;\n  background-color: var(--sscds-color-background-action-base-default);\n  color: var(--sscds-color-text-inverse);\n\n  &:hover,\n  &.hover {\n    color: var(--sscds-color-text-inverse);\n    background-color: var(--sscds-color-background-action-base-hover);\n  }\n\n  ${({ $color }) =>\n    $color === 'danger' &&\n    css`\n      background-color: var(--sscds-color-background-action-danger-default);\n\n      &:hover,\n      &.hover {\n        background-color: var(--sscds-color-background-action-danger-hover);\n      }\n    `};\n\n  &:disabled,\n  &.disabled {\n    background-color: var(--sscds-color-background-action-base-disabled);\n    color: var(--sscds-color-text-disabled);\n  }\n`;\n\nconst ButtonOutline = css<BaseStyledButtonProps>`\n  background-color: var(--sscds-color-background-action-subtle-default);\n  border: 1px solid var(--sscds-color-border-action-subtle);\n  color: var(--sscds-color-text-default);\n\n  &:hover,\n  &.hover {\n    background-color: var(--sscds-color-background-action-subtle-hover);\n    color: var(--sscds-color-text-default);\n    border-color: var(--sscds-color-border-action-subtle);\n  }\n\n  &:disabled,\n  &.disabled {\n    color: var(--sscds-color-text-disabled);\n    border-color: var(--sscds-color-text-action-disabled);\n    background-color: var(--sscds-color-background-action-subtle-default);\n  }\n`;\n\nconst ButtonText = css<BaseStyledButtonProps>`\n  background-color: var(--sscds-color-background-action-ghost-default);\n  border-color: transparent;\n  padding-left: 0;\n  padding-right: 0;\n  color: var(--sscds-color-text-action);\n\n  &:hover,\n  &.hover {\n    color: var(--sscds-color-text-action);\n    background: var(--sscds-color-background-action-ghost-hover);\n  }\n\n  ${({ $color }) =>\n    $color === 'secondary'\n      ? css`\n          color: var(--sscds-color-text-default);\n\n          &:hover,\n          &.hover {\n            color: var(--sscds-color-text-default);\n          }\n        `\n      : $color === 'danger' &&\n        css`\n          color: var(--sscds-color-text-danger);\n\n          &:hover,\n          &.hover {\n            color: var(--sscds-color-text-danger);\n            background-color: var(\n              --sscds-color-background-action-danger-ghost-hover\n            );\n          }\n        `};\n\n  &:disabled,\n  &.disabled {\n    color: var(--sscds-color-text-disabled);\n    background-color: var(--sscds-color-background-action-ghost-default);\n  }\n`;\n\nconst ButtonGhost = css<BaseStyledButtonProps>`\n  ${ButtonText}\n  padding-left: ${getSpace('sm')};\n  padding-right: ${getSpace('sm')};\n`;\n\nconst buttonVariants = {\n  [BaseButtonVariants.solid]: ButtonSolid,\n  [BaseButtonVariants.outline]: ButtonOutline,\n  [BaseButtonVariants.text]: ButtonText,\n  [BaseButtonVariants.ghost]: ButtonGhost,\n};\n\nconst BaseStyledButton = styled(Padbox).withConfig({\n  shouldForwardProp: (property) =>\n    !includes(property, ['theme', 'paddingType', 'paddingSize']),\n})<BaseStyledButtonProps>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--sscds-radii-button);\n  font-family: var(--sscds-font-family-body);\n  font-weight: var(--sscds-font-weight-elementlabel-default);\n  cursor: pointer;\n  text-align: center;\n  white-space: nowrap;\n  transition: var(--sscds-action-transition),\n    transform 50ms var(--sscds-transition-fn);\n\n  ${({ $margin }) => createMarginSpacing($margin)};\n  ${({ $isExpanded }) => $isExpanded && 'width: 100%;'};\n  ${({ disabled }) => disabled && 'cursor: not-allowed;'};\n  ${({ $isLoading }) => $isLoading && 'cursor: progress;'};\n\n  height: ${pipe(getToken('size-action-size'), pxToRem)};\n  line-height: 1;\n  font-size: var(--sscds-font-size-elementlabel-sm);\n  ${({ $hasOnlyIcon }) =>\n    $hasOnlyIcon &&\n    css`\n      width: ${pipe(getToken('size-action-size'), pxToRem)};\n    `};\n\n  ${({ $variant }) => buttonVariants[$variant]};\n\n  &,\n  &:hover,\n  &:focus-visible,\n  &:active {\n    text-decoration: none;\n  }\n\n  &:active,\n  &&&.active {\n    transform: scale(0.98);\n  }\n\n  @media (prefers-reduced-motion) {\n    &:active,\n    &&&.active {\n      transform: scale(1);\n    }\n  }\n  &:disabled,\n  &.disabled {\n    opacity: 0.75;\n  }\n`;\n\nexport default BaseStyledButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  isNotNull,\n  isNotUndefined,\n  isNull,\n  isUndefined,\n  noop,\n} from 'ramda-adjunct';\nimport { useTheme } from 'styled-components';\nimport cls from 'classnames';\n\nimport { IconTypes, SSCIconNames } from '../../../theme/icons/icons.enums';\nimport { SpaceSizes } from '../../../theme';\nimport { requireRouterLink } from '../../../utils/require-router-link';\nimport { SpacingSizeValuePropType } from '../../../types/spacing.types';\nimport { PaddingTypes } from '../../layout/Padbox/Padbox.enums';\nimport { Spinner } from '../../Spinner';\nimport { Icon } from '../../Icon';\nimport { SSCIcons, Types } from '../../Icon/Icon.types';\nimport { Inline } from '../../layout';\nimport BaseStyledButton from './BaseStyledButton';\nimport { BaseButtonColors, BaseButtonVariants } from './BaseButton.enums';\nimport { BaseButtonProps } from './BaseButton.types';\nimport { CLX_COMPONENT } from '../../../theme/constants';\nimport { useLogger } from '../../../hooks/useLogger';\n\nconst BaseButton = ({\n  children,\n  variant = BaseButtonVariants.solid,\n  color = BaseButtonColors.primary,\n  iconStart,\n  iconEnd,\n  iconName,\n  iconType = IconTypes.ssc,\n  as = null,\n  href = null,\n  to = null,\n  margin = 'none',\n  onClick = noop,\n  isDisabled = false,\n  isLoading = false,\n  isExpanded = false,\n  loadingText = 'Loading',\n  className,\n  ...props\n}: BaseButtonProps & React.ComponentProps<typeof BaseStyledButton>) => {\n  let RouterLink = null;\n  const theme = useTheme();\n  const { warn } = useLogger('Button');\n  if (isNull(as) && isNotNull(to)) {\n    RouterLink = requireRouterLink();\n  }\n\n  if (isDisabled && href) {\n    warn(\n      '\"isDisabled\" prop in <Button> component will be ignored if the \"href\" prop is defined',\n    );\n  }\n\n  const domTag =\n    as ??\n    (isNotNull(href)\n      ? 'a' // render 'a' tag if 'href' is present\n      : isNotNull(to)\n      ? RouterLink // render 'Link' if 'to' is present\n      : 'button'); // use default\n\n  if (isNull(RouterLink) && isNull(domTag)) {\n    return null;\n  }\n\n  const hasStartIcon = isNotUndefined(iconName) || isNotUndefined(iconStart);\n  const hasIcon = hasStartIcon || isNotUndefined(iconEnd);\n  const hasOnlyIcon = hasStartIcon && isUndefined(children);\n  const content = isLoading ? (\n    <>\n      <Spinner\n        borderWidth={2}\n        height={theme.tokens['font-action-size']}\n        verticalMargin={0}\n        width={theme.tokens['font-action-size']}\n        dark\n      />\n      {!hasOnlyIcon && <span>{loadingText}</span>}\n    </>\n  ) : hasIcon ? (\n    <>\n      {hasStartIcon && (\n        <Icon\n          name={iconStart?.name ?? iconName}\n          type={iconStart?.type ?? iconType}\n        />\n      )}\n      {isNotUndefined(children) && <span>{children}</span>}\n      {isNotUndefined(iconEnd) && !hasOnlyIcon && (\n        <Icon name={iconEnd?.name} type={iconEnd?.type ?? 'ssc'} />\n      )}\n    </>\n  ) : (\n    children\n  );\n\n  return (\n    <BaseStyledButton\n      $color={color}\n      $hasOnlyIcon={hasOnlyIcon}\n      $isExpanded={isExpanded}\n      $isLoading={isLoading}\n      $margin={margin}\n      $variant={variant}\n      as={domTag}\n      className={cls(CLX_COMPONENT, className)}\n      disabled={isDisabled || isLoading}\n      href={href}\n      paddingSize={SpaceSizes.md}\n      paddingType={PaddingTypes.squish}\n      to={to}\n      onClick={onClick}\n      {...props}\n      aria-label={isLoading && hasOnlyIcon ? 'Loading' : props?.['aria-label']}\n    >\n      <Inline align=\"center\" gap={SpaceSizes.sm}>\n        {content}\n      </Inline>\n    </BaseStyledButton>\n  );\n};\n\nBaseButton.propTypes = {\n  variant: PropTypes.oneOf(Object.values(BaseButtonVariants)),\n  color: PropTypes.oneOf(Object.values(BaseButtonColors)),\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isExpanded: PropTypes.bool,\n  margin: SpacingSizeValuePropType,\n  href: PropTypes.string,\n  to: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n    }),\n  ]),\n  className: PropTypes.string,\n  iconName: PropTypes.oneOfType([\n    PropTypes.oneOf<SSCIcons>(Object.values(SSCIconNames)),\n    PropTypes.string,\n  ]),\n  iconType: PropTypes.oneOfType([\n    PropTypes.oneOf<Types>(Object.values(IconTypes)),\n    PropTypes.string,\n  ]),\n  loadingText: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default BaseButton;\n"],"names":["cov_1th2d231ad","actualCoverage","BaseButtonVariants","solid","outline","text","ghost","BaseButtonColors","s","secondary","success","danger","ButtonText","$isExpanded","disabled","BaseStyledButton","cov_18hr2qg5c6","BaseButton","margin","onClick","noop","isDisabled","primary","isLoading","isExpanded","loadingText","className","as","b","props","href","to","warn","RouterLink","f","domTag","isNull","isNotNull","requireRouterLink","hasOnlyIcon","isUndefined","content","children","isNotUndefined","bool","PropTypes","string","oneOfType","hash","jsx","Spinner","oneOf","func"],"mappings":"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"}
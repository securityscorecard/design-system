import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{S as m}from"./index-t-vajJ9r.js";import{g as n}from"./storybook-7zA5Mv0p.js";import{G as c}from"./index-CoMEwqFC.js";import{T as d}from"./index-C_SwQgDv.js";import{I as a}from"./Icon-CHqwD8rK.js";import{p as l}from"./index-DzoB_gWM.js";import{s as f}from"./sortBy-C2nsc0Cf.js";import{h as g}from"./head-DH2hpBU8.js";import{t as x}from"./toPairs-DhIBw5Ep.js";import{I}from"./Inline-DPdVYO7t.js";import"./index-CTjT7uj6.js";import"./zipObj-BKKHQJ_I.js";import"./index-BRV0Se7Z.js";import"./index-BUX0wYnk.js";import"./Padbox-DIe3-S_j.js";import"./index-C7IrpltL.js";import"./index-DZoBl2Wq.js";import"./flex.types-BrkCVx66.js";import"./prop-BgpcU4fO.js";import"./Cluster-DaqHgnAc.js";import"./useLogger-BNYGJgyi.js";import"./DSProvider-DOkUOQoq.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-C3ps-iVb.js";import"./colors-2yNNI7_i.js";const K={title:"Iconography/List",component:a,argTypes:{name:{...n("select",m)}},tags:["autodocs","!dev"]},h=l(x,f(g))(m),o=()=>r.jsx(c,{cols:4,gap:"md",children:h.map(([t,p])=>r.jsxs(I,{align:"center",gap:"md",children:[r.jsx(a,{name:p,hasFixedWidth:!0}),r.jsx(d,{children:t})]},t))});o.__docgenInfo={description:"",methods:[],displayName:"List"};var s,i,e;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`() => <Grid cols={4} gap="md">
    {sortedIconsList.map(([key, value]) => <Inline key={key} align="center" gap="md">
        <Icon name={value} hasFixedWidth />
        <Text>{key}</Text>
      </Inline>)}
  </Grid>`,...(e=(i=o.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const M=["List"];export{o as List,M as __namedExportsOrder,K as default};
//# sourceMappingURL=iconsList.stories-DWDc6gjs.js.map

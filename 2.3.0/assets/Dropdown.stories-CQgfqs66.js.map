{"version":3,"file":"Dropdown.stories-CQgfqs66.js","sources":["../../../src/components/Dropdown/Dropdown.stories.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport { Inline, Stack } from '../layout';\nimport { Button } from '../Button';\nimport Dropdown from './Dropdown';\nimport { DropdownProps } from './Dropdown.types';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { generateControl } from '../../utils/tests/storybook';\nimport { CreatableSelect } from '../forms/Select';\nimport { Paragraph } from '../Paragraph';\nimport { Link } from '../Link';\n\nexport default {\n  title: 'components/Dropdown/Dropdown',\n  component: Dropdown,\n  parameters: {\n    docs: {\n      description: {\n        component: `\n\\`\\`\\`js\nimport { Dropdown } from '@securityscorecard/design-system';\n\\`\\`\\`\n      `,\n      },\n    },\n    controls: { sort: 'requiredFirst' },\n  },\n  argTypes: {\n    trigger: { control: { disable: true } },\n    onClose: { table: { defaultValue: { summary: 'noop()' } } },\n    onOpen: { table: { defaultValue: { summary: 'noop()' } } },\n    innerPaddingType: { ...generateControl('select', PaddingTypes) },\n  },\n} as Meta;\n\nfunction Content() {\n  return (\n    <Stack gap=\"md\">\n      <Paragraph size=\"md\">\n        Fusce elementum justo ac augue faucibus mattis. Aenean non feugiat\n        metus, in pretium dui.\n      </Paragraph>\n      <Inline gap=\"sm\">\n        <Link>Action</Link>\n        <Link>Action</Link>\n      </Inline>\n    </Stack>\n  );\n}\n\nfunction ShortContent() {\n  return (\n    <Stack gap=\"md\">\n      <Paragraph size=\"md\">Short dropdown content</Paragraph>\n    </Stack>\n  );\n}\n\nconst DropdownTemplate: StoryFn<DropdownProps> = (args) => (\n  <div style={{ height: 140 }}>\n    <Dropdown {...args}>\n      <Content />\n    </Dropdown>\n  </div>\n);\n\nexport const Playground = DropdownTemplate.bind({});\nPlayground.args = {\n  trigger: <Button variant=\"outline\">Trigger</Button>,\n  onClose: action('onClose'),\n  onOpen: action('onOpen'),\n};\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const OnHoverEvent = DropdownTemplate.bind({});\nOnHoverEvent.args = {\n  ...Playground.args,\n  triggerEvents: ['hover'],\n};\n\nexport const OnFocusEvent = DropdownTemplate.bind({});\nOnFocusEvent.args = {\n  ...Playground.args,\n  triggerEvents: ['focus'],\n};\n\nexport const Placements: StoryFn<DropdownProps> = (args) => (\n  <Stack gap=\"xl\">\n    <Inline gap=\"lg\" justify=\"space-between\">\n      <Dropdown\n        {...args}\n        placement=\"bottom-start\"\n        trigger={<Button>bottom-start</Button>}\n      >\n        <ShortContent />\n      </Dropdown>\n      <Dropdown {...args} placement=\"bottom\" trigger={<Button>bottom</Button>}>\n        <ShortContent />\n      </Dropdown>\n      <Dropdown\n        {...args}\n        placement=\"bottom-end\"\n        trigger={<Button>bottom-end</Button>}\n      >\n        <ShortContent />\n      </Dropdown>\n    </Inline>\n    <Inline gap=\"lg\" justify=\"space-between\">\n      <Stack gap=\"lg\">\n        <Dropdown\n          {...args}\n          placement=\"right-start\"\n          trigger={<Button>right-start</Button>}\n        >\n          <ShortContent />\n        </Dropdown>\n        <Dropdown {...args} placement=\"right\" trigger={<Button>right</Button>}>\n          <ShortContent />\n        </Dropdown>\n        <Dropdown\n          {...args}\n          placement=\"right-end\"\n          trigger={<Button>right-end</Button>}\n        >\n          <ShortContent />\n        </Dropdown>\n      </Stack>\n      <Stack gap=\"lg\">\n        <Dropdown\n          {...args}\n          placement=\"left-start\"\n          trigger={<Button>left-start</Button>}\n        >\n          <ShortContent />\n        </Dropdown>\n        <Dropdown {...args} placement=\"left\" trigger={<Button>left</Button>}>\n          <ShortContent />\n        </Dropdown>\n        <Dropdown\n          {...args}\n          placement=\"left-end\"\n          trigger={<Button>left-end</Button>}\n        >\n          <ShortContent />\n        </Dropdown>\n      </Stack>\n    </Inline>\n    <Inline gap=\"lg\" justify=\"space-between\">\n      <Dropdown\n        {...args}\n        placement=\"top-start\"\n        trigger={<Button>top-start</Button>}\n      >\n        <ShortContent />\n      </Dropdown>\n      <Dropdown {...args} placement=\"top\" trigger={<Button>top</Button>}>\n        <ShortContent />\n      </Dropdown>\n      <Dropdown\n        {...args}\n        placement=\"top-end\"\n        trigger={<Button>top-end</Button>}\n      >\n        <ShortContent />\n      </Dropdown>\n    </Inline>\n  </Stack>\n);\n\nPlacements.args = {\n  ...Playground.args,\n  hasPaneArrow: true,\n  defaultIsOpen: true,\n  maxPaneWidth: 'auto',\n};\nPlacements.parameters = {\n  docs: {\n    inlineStories: true,\n  },\n};\n\nexport const Elevated = DropdownTemplate.bind({});\nElevated.args = {\n  ...Playground.args,\n  isPaneElevated: true,\n  defaultIsOpen: true,\n};\n\nexport const WithArrow: StoryFn<DropdownProps> = (args) => (\n  <div style={{ height: 170 }}>\n    <Inline gap=\"lg\" justify=\"space-between\">\n      <Dropdown {...args} placement=\"bottom-start\">\n        <Content />\n      </Dropdown>\n      <Dropdown {...args} placement=\"bottom-end\" isPaneElevated>\n        <Content />\n      </Dropdown>\n    </Inline>\n  </div>\n);\nWithArrow.args = {\n  ...Playground.args,\n  hasPaneArrow: true,\n  defaultIsOpen: true,\n};\n\nexport const WithCustomMaxWidth = DropdownTemplate.bind({});\nWithCustomMaxWidth.args = {\n  ...Playground.args,\n  maxPaneWidth: 450,\n  defaultIsOpen: true,\n};\nexport const WithAutoMaxWidth = DropdownTemplate.bind({});\nWithAutoMaxWidth.args = {\n  ...Playground.args,\n  maxPaneWidth: 'auto',\n  defaultIsOpen: true,\n};\n\nexport const WithCustomInnerPadding = DropdownTemplate.bind({});\nWithCustomInnerPadding.args = {\n  ...Playground.args,\n  defaultIsOpen: true,\n  innerPaddingSize: 'xl',\n  innerPaddingType: 'squish',\n};\n\nconst options = [\n  { value: 'Kitty', label: 'Kitty' },\n  { value: 'Lilly', label: 'Lilly' },\n  { value: 'Lucy', label: 'Lucy' },\n  { value: 'Leo', label: 'Leo' },\n  { value: 'Jack', label: 'Jack' },\n];\n\nexport const UsingWithAnotherComponent: StoryFn<DropdownProps> = () => (\n  <Dropdown\n    innerPaddingSize=\"sm\"\n    trigger={\n      <Button iconStart={{ name: 'plus' }} variant=\"text\">\n        Add kitten\n      </Button>\n    }\n  >\n    <CreatableSelect\n      createNewLabel=\"Buy new kitten\"\n      options={options}\n      isMenuPositionRelative\n      isMulti\n      menuIsOpen\n    />\n  </Dropdown>\n);\nUsingWithAnotherComponent.parameters = {\n  screenshot: { skip: true },\n};\n"],"names":["component","Dropdown_stories","parameters","docs","Dropdown","description","controls","sort","argTypes","trigger","control","disable","table","defaultValue","summary","innerPaddingType","generateControl","PaddingTypes","onClose","jsxs","Stack","jsx","Paragraph","Link","ShortContent","Content","DropdownTemplate","args","height","bind","Playground","Button","action","screenshot","skip","triggerEvents","OnHoverEvent","Inline","hasPaneArrow","defaultIsOpen","maxPaneWidth","inlineStories","isPaneElevated","WithArrow","Placements","Elevated","innerPaddingSize","options","value","label","WithCustomMaxWidth","UsingWithAnotherComponent","name","WithCustomInnerPadding"],"mappings":"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"}
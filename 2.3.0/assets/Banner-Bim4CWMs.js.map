{"version":3,"file":"Banner-Bim4CWMs.js","sources":["../../../src/components/Banner/Banner.enums.ts","../../../src/components/Banner/Banner.tsx"],"sourcesContent":["export const BannerVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n} as const;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { isNonEmptyArray, noop } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { BannerProps } from './Banner.types';\nimport {\n  AbsoluteLinkActionKind,\n  ActionKindsPropType,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport * as CustomPropTypes from '../../types/customPropTypes';\nimport { BannerVariants } from './Banner.enums';\nimport { Button } from '../Button';\nimport { ButtonColors, ButtonVariants } from '../Button/Button.enums';\nimport { Inline, Padbox, Stack } from '../layout';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { StretchEnum } from '../layout/Inline/Inline.enums';\nimport { Text as BaseText } from '../Text';\nimport { TextSizes } from '../Text/Text.enums';\nimport { SpaceSizes } from '../../theme';\nimport { getColor, getRadii } from '../../utils';\nimport { CloseButton } from '../CloseButton';\nimport { BaseToastBanner } from '../_internal/BaseToastBanner';\nimport { baseToastBannerColorVariants } from '../_internal/BaseToastBanner/BaseToastBanner';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Icon } from '../Icon';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { useContainerQuery } from '../../hooks/useContainerQuery';\n\nconst iconPxSizesVariants = {\n  [BannerVariants.info]: 16,\n  [BannerVariants.warn]: 16,\n  [BannerVariants.error]: 16,\n  [BannerVariants.success]: 16,\n};\n\nconst bannerBorderColor = {\n  [BannerVariants.info]: 'info.400',\n  [BannerVariants.warn]: 'warning.400',\n  [BannerVariants.error]: 'error.400',\n  [BannerVariants.success]: 'success.400',\n};\n\nconst StyledPadbox = styled(Padbox)<{ $variant?: BannerProps['variant'] }>`\n  background-color: ${({ $variant }) =>\n    getColor(baseToastBannerColorVariants[$variant])};\n  border-radius: ${getRadii('double')};\n  border: 1px solid ${({ $variant }) => getColor(bannerBorderColor[$variant])};\n`;\n\nconst StyledButton = styled(Button)`\n  height: inherit;\n  padding: 0;\n  line-height: var(--sscds-font-lineheight-body-md);\n`;\n\nconst ContentWrapper = styled(Padbox)`\n  padding-left: 0rem;\n`;\n\nconst Text = styled(BaseText)<{ $variant?: BannerProps['variant'] }>`\n  max-width: 115ch;\n  color: ${getColor('neutral.1000')};\n`;\n\nconst CHANGE_LAYOUT_BREAKPOINT = 'change-banner-layout';\n\nconst BannerContent = ({ variant, children, actions }: BannerProps) => (\n  <>\n    <Text $variant={variant} as=\"div\" size={TextSizes.md}>\n      {children}\n    </Text>\n    {isNonEmptyArray(actions) && (\n      <Inline gap={SpaceSizes.mdPlus}>\n        {actions.map((action) => (\n          <StyledButton\n            key={action.name}\n            $variant={variant}\n            color={ButtonColors.secondary}\n            href={(action as AbsoluteLinkActionKind<[React.MouseEvent]>).href}\n            name={action.name}\n            to={(action as RelativeLinkActionKind<[React.MouseEvent]>).to}\n            variant={ButtonVariants.text}\n            onClick={action.onClick}\n          >\n            {action.label}\n          </StyledButton>\n        ))}\n      </Inline>\n    )}\n  </>\n);\n\nconst Banner = ({\n  children,\n  variant = BannerVariants.info,\n  actions,\n  isDismissable = true,\n  onClose = noop,\n  __hasPagination = false,\n  __onPrev,\n  __onNext,\n  __isFirst,\n  __isLast,\n  __current,\n  __total,\n  className,\n  changeLayoutBreakpoint = 960,\n  ...props\n}: BannerProps) => {\n  const changeLayoutQuery = useMemo(\n    () => ({\n      [CHANGE_LAYOUT_BREAKPOINT]: { minWidth: changeLayoutBreakpoint },\n    }),\n    [changeLayoutBreakpoint],\n  );\n  const [query, containerRef] = useContainerQuery(changeLayoutQuery);\n  const isInline = query[CHANGE_LAYOUT_BREAKPOINT];\n  return (\n    <StyledPadbox\n      ref={containerRef}\n      $variant={variant}\n      className={cls(CLX_COMPONENT, className)}\n      paddingSize={SpaceSizes.sm}\n      {...props}\n    >\n      <BaseToastBanner\n        iconAlign=\"flex-start\"\n        iconPxSizesVariants={iconPxSizesVariants}\n        iconSize={16}\n        paddingSize={SpaceSizes.md}\n        paddingType={PaddingTypes.square}\n        stretch={StretchEnum.end}\n        variant={variant}\n      >\n        <ContentWrapper paddingSize={SpaceSizes.md}>\n          <Inline align=\"flex-start\" gap={SpaceSizes.xl} stretch={1}>\n            {isInline ? (\n              <Inline\n                align=\"flex-start\"\n                gap={SpaceSizes.md}\n                justify=\"space-between\"\n              >\n                <BannerContent actions={actions} variant={variant}>\n                  {children}\n                </BannerContent>\n              </Inline>\n            ) : (\n              <Stack align=\"center\" gap={SpaceSizes.md}>\n                <BannerContent actions={actions} variant={variant}>\n                  {children}\n                </BannerContent>\n              </Stack>\n            )}\n            {__hasPagination && (\n              <Inline gap={SpaceSizes.sm}>\n                <StyledButton\n                  aria-label=\"Show previous banner\"\n                  isDisabled={__isFirst}\n                  variant=\"text\"\n                  onClick={__onPrev}\n                >\n                  <Icon name={SSCIconNames.angleLeft} />\n                </StyledButton>\n                <Text as=\"div\" size={TextSizes.md}>\n                  {__current} of {__total}\n                </Text>\n                <StyledButton\n                  aria-label=\"Show next banner\"\n                  isDisabled={__isLast}\n                  variant=\"text\"\n                  onClick={__onNext}\n                >\n                  <Icon name={SSCIconNames.angleRight} />\n                </StyledButton>\n              </Inline>\n            )}\n            {isDismissable && (\n              <CloseButton\n                aria-label=\"Close banner\"\n                marginCompensation={SpaceSizes.md}\n                onClose={onClose}\n              />\n            )}\n          </Inline>\n        </ContentWrapper>\n      </BaseToastBanner>\n    </StyledPadbox>\n  );\n};\n\nBanner.propTypes = {\n  variant: PropTypes.oneOf(Object.values(BannerVariants)),\n  actions: CustomPropTypes.tuple(ActionKindsPropType, ActionKindsPropType),\n  isDismissable: PropTypes.bool,\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n};\nBanner.displayName = 'Banner';\n\nexport default Banner;\n"],"names":["cov_fqjbavy1o","actualCoverage","BannerVariants","info","warn","error","success","cov_2aow7x83jh","path","hash","global","gcv","coverageData","coverage","iconPxSizesVariants","s","bannerBorderColor","StyledPadbox","styled","Padbox","withConfig","displayName","componentId","$variant","f","getColor","baseToastBannerColorVariants","getRadii","StyledButton","Button","ContentWrapper","Text","BaseText","CHANGE_LAYOUT_BREAKPOINT","jsx","variant","as","size","TextSizes","md","children","b","isNonEmptyArray","actions","Inline","gap","SpaceSizes","mdPlus","map","action","color","ButtonColors","secondary","href","name","to","ButtonVariants","text","onClick","label","__current","__total","onClose","noop","__hasPagination","__onPrev","__onNext","__isFirst","Banner","className","bool","string","changeLayoutQuery","useMemo"],"mappings":"42DAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAME,MAAAA,GAAAA,EAAAA,EAAAA,OAAiB,CAC5BC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,SACX,GCoBA,SAAAC,GAAA,CAAA,IAAAC,EAAA,iFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,iFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,G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"}
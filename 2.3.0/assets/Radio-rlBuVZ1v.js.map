{"version":3,"file":"Radio-rlBuVZ1v.js","sources":["../../../src/components/forms/Radio/Radio.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { getColor, getFormStyle, getRadii, pxToRem } from '../../../utils';\nimport { Label } from '../Label';\nimport { TogglingInputProps } from '../types/forms.types';\nimport { RadioProps } from './Radio.types';\nimport { CLX_COMPONENT } from '../../../theme/constants';\n\nconst RadioContainer = styled.div`\n  position: relative;\n`;\n\nconst RadioLabel = styled(Label)<\n  React.HTMLProps<HTMLLabelElement> & { hasLabel: boolean }\n>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n\n  ${({ theme, hasLabel }) => {\n    const toggleSize = getFormStyle('toggleSize')({ theme });\n    const leftPadding = hasLabel ? toggleSize + theme.space.sm : toggleSize;\n\n    return css`\n      min-height: ${pxToRem(toggleSize)};\n      line-height: ${pxToRem(toggleSize)};\n      padding-left: ${pxToRem(leftPadding)};\n\n      &::before,\n      &::after {\n        height: ${pxToRem(20)};\n        width: ${pxToRem(20)};\n      }\n    `;\n  }}\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    display: inline-block;\n    top: 0;\n    left: 0;\n    border-radius: ${getRadii('circle')};\n  }\n\n  &::before {\n    border: ${getFormStyle('borderWidth')} solid ${getFormStyle('borderColor')};\n    background-color: ${getColor('neutral.0')};\n  }\n`;\n\nconst RadioInput = styled.input<TogglingInputProps>`\n  opacity: 0;\n  position: absolute;\n\n  &:checked + ${/* sc-selector */ RadioLabel}::after {\n    border: 6px solid ${getFormStyle('activeBorderColor')};\n  }\n\n  &:disabled + ${/* sc-selector */ RadioLabel} {\n    color: ${getFormStyle('disabledColor')};\n  }\n\n  &:disabled + ${/* sc-selector */ RadioLabel}::before {\n    border-color: ${getFormStyle('disabledBorderColor')};\n    background: ${getFormStyle('disabledBgColor')};\n  }\n\n  &:disabled:checked + ${/* sc-selector */ RadioLabel}::after {\n    color: ${getFormStyle('disabledActiveColor')};\n  }\n\n  &:focus + ${/* sc-selector */ RadioLabel}::before {\n    border: 2px solid ${getFormStyle('activeBorderColor')};\n  }\n\n  ${({ isInvalid }) =>\n    isInvalid &&\n    css`\n      & + ${RadioLabel}::before {\n        border: ${getFormStyle('statefulBorderWidth')} solid\n          ${getFormStyle('invalidBorderColor')};\n      }\n      &:checked + ${RadioLabel}::after {\n        border-color: ${getFormStyle('invalidBorderColor')};\n      }\n    `}\n`;\n\nconst Radio = ({\n  name,\n  radioId,\n  label,\n  isDisabled = false,\n  isInvalid = false,\n  className,\n  ...props\n}: RadioProps) => {\n  const hasLabel = isNotUndefined(label);\n\n  return (\n    <RadioContainer>\n      <RadioInput\n        className={cls(CLX_COMPONENT, className)}\n        disabled={isDisabled}\n        id={radioId}\n        isInvalid={isInvalid}\n        name={name}\n        type=\"radio\"\n        {...props}\n      />\n      <RadioLabel hasLabel={hasLabel} htmlFor={radioId}>\n        {label}\n      </RadioLabel>\n    </RadioContainer>\n  );\n};\n\nRadio.propTypes = {\n  radioId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default Radio;\n"],"names":["cov_186eva3hng","path","hash","global","gcv","coverageData","coverage","actualCoverage","RadioContainer","s","styled","div","withConfig","displayName","componentId","RadioLabel","Label","theme","hasLabel","f","toggleSize","getFormStyle","leftPadding","b","space","sm","css","pxToRem","getRadii","getColor","RadioInput","input","isRequired","bool"],"mappings":"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"}
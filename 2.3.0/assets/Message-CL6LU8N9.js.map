{"version":3,"file":"Message-CL6LU8N9.js","sources":["../../../src/components/forms/Message/Message.enums.ts","../../../src/components/forms/Message/Message.tsx"],"sourcesContent":["import { TextVariants } from '../../Text/Text.enums';\n\nexport const MessageVariants = {\n  note: TextVariants.secondary,\n  error: TextVariants.danger,\n} as const;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { SpaceSizes } from '../../../theme';\nimport { getSpace } from '../../../utils';\nimport { Paragraph } from '../../Paragraph';\nimport { TextSizes } from '../../Text/Text.enums';\nimport { MessageVariants } from './Message.enums';\nimport { MessageProps } from './Message.types';\nimport { CLX_COMPONENT } from '../../../theme/constants';\n\nconst MessageContainer = styled.div`\n  padding-top: ${getSpace(SpaceSizes.sm)};\n  padding-bottom: ${getSpace(SpaceSizes.sm)};\n\n  > * {\n    margin: 0;\n  }\n`;\n\nconst Message = ({\n  children,\n  variant = MessageVariants.note,\n}: MessageProps) => (\n  <MessageContainer className={CLX_COMPONENT}>\n    <Paragraph size={TextSizes.md} variant={variant}>\n      {children}\n    </Paragraph>\n  </MessageContainer>\n);\n\nMessage.propTypes = {\n  variant: PropTypes.oneOf(Object.values(MessageVariants)),\n};\n\nexport default Message;\n\nexport const Note = ({ children }: Pick<MessageProps, 'children'>) => (\n  <Message variant={MessageVariants.note}>{children}</Message>\n);\nexport const Error = ({ children }: Pick<MessageProps, 'children'>) => (\n  <Message variant={MessageVariants.error}>{children}</Message>\n);\n"],"names":["secondary","error","danger","TextVariants","cov_3x7km4loa","path","hash","global","gcv","coverageData","coverage","actualCoverage","MessageContainer","s","styled","div","withConfig","displayName","componentId","getSpace","SpaceSizes","sm","Message","children","variant","b","MessageVariants","note","f","jsx","className","CLX_COMPONENT","Paragraph","size","TextSizes","md"],"mappings":"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"}
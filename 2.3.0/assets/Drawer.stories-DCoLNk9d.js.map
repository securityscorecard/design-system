{"version":3,"file":"Drawer.stories-DCoLNk9d.js","sources":["../../src/components/Drawer/Drawer.stories.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport styled from 'styled-components';\n\nimport Drawer from './Drawer';\nimport { DrawerProps } from './Drawer.types';\nimport { DrawerSizes } from './Drawer.enums';\nimport { SemanticModal } from '../SemanticModal';\nimport { H2 } from '../Heading';\nimport { Paragraph } from '../Paragraph';\nimport { Text } from '../Text';\nimport { Link } from '../Link';\nimport { Inline, Padbox, Stack } from '../layout';\nimport { Button, ButtonEnums } from '../Button';\nimport { Icon } from '../Icon';\nimport { generateControl } from '../../utils/tests/storybook';\nimport { Modal, SpaceSizes } from '../../index';\nimport { Tooltip } from '../Tooltip';\n\nexport default {\n  title: 'components/Drawer',\n  component: Drawer,\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      source: { type: 'code' },\n    },\n  },\n  argTypes: {\n    size: {\n      ...generateControl('select', DrawerSizes),\n    },\n    footer: {\n      control: { disable: true },\n    },\n    adornment: {\n      control: { disable: true },\n    },\n  },\n} as Meta;\n\nfunction Footer() {\n  return (\n    <Inline gap={SpaceSizes.md} justify=\"flex-end\">\n      <Button variant=\"outline\">Cancel</Button>\n      <Button>Confirm</Button>\n    </Inline>\n  );\n}\n\nfunction Adornment() {\n  return <Icon color=\"neutral.900\" name=\"long-arrow-left\" type=\"ssc\" />;\n}\n\nfunction Content() {\n  return (\n    <Stack>\n      <H2>This is a placeholder</H2>\n      <Paragraph style={{ marginBottom: 0 }}>\n        You can replace this with a local component. You can also just override\n        the text, but <Tooltip popup=\"I'm tooltip\">keep in mind</Tooltip> that\n        you might lose content that way in case we happend to change the\n        underlying component. Lorem ipsum dolor sit amet, consectetur adipiscing\n        elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n        ut aliquip ex ea commodo consequat.\n      </Paragraph>\n    </Stack>\n  );\n}\nexport const Playground: StoryFn<DrawerProps> = (args) => {\n  const [isShown, setIsShown] = useState(false);\n\n  return (\n    <Padbox paddingSize={SpaceSizes.xxl}>\n      <Inline justify=\"center\">\n        <Button onClick={() => setIsShown(!isShown)}>Open drawer</Button>\n        {isShown && (\n          <Drawer\n            {...args}\n            footer={<Footer />}\n            title=\"Title\"\n            onClose={() => setIsShown(false)}\n          >\n            <Content />\n          </Drawer>\n        )}\n      </Inline>\n    </Padbox>\n  );\n};\n\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const WithTitleAndAdornment: StoryFn = () => (\n  <Drawer\n    adornment={<Adornment />}\n    footer={<Footer />}\n    size=\"lg\"\n    title=\"Large size drawer with title and adornment\"\n    onClose={action('close-modal')}\n  >\n    <Content />\n  </Drawer>\n);\n\nexport const WithOverflowingTitle: StoryFn = () => (\n  <Drawer\n    footer={<Footer />}\n    size=\"md\"\n    title=\"This is a title that has no end, therefore it goes on and on until it fills all the space of its container and wants to go even further.\"\n    onClose={action('close-modal')}\n  >\n    <Content />\n  </Drawer>\n);\n\nexport const WithoutBackdrop: StoryFn = () => {\n  const [displaySomething, setDisplaySomething] = useState(false);\n  const [displayDrawer, setDisplayDrawer] = useState(false);\n  const [displaySemanticModal, setDisplaySemanticModal] = useState(false);\n  return (\n    <Padbox>\n      <Stack align=\"center\" gap={SpaceSizes.md} justify=\"center\">\n        <Paragraph>\n          Talent she for lively eat led sister. Entrance strongly packages she\n          out rendered get quitting denoting led. Dwelling confined improved it\n          he no doubtful raptures. Several carried through an of up attempt\n          gravity. Situation to be at offending elsewhere distrusts if.\n          Particular use for considered projection cultivated. Worth of do doubt\n          shall it their. Extensive existence up me contained he pronounce do.\n          Excellence inquietude assistance precaution any impression man\n          sufficient.\n        </Paragraph>\n        <Button onClick={() => setDisplayDrawer(!displayDrawer)}>\n          Toggle drawer button\n        </Button>\n        <Button onClick={() => setDisplaySomething(!displaySomething)}>\n          Random button\n        </Button>\n        {!displaySomething || <Icon color=\"success.500\" name=\"check-circle\" />}\n        {Array.from(Array(3).keys()).map(() => (\n          <Paragraph>\n            Was justice improve age article between. No projection as up\n            preference reasonably delightful celebrated. Preserved and abilities\n            assurance tolerably breakfast use saw. And painted letters forming\n            far village elderly compact. Her rest west each spot his and you\n            knew. Estate gay wooded depart six far her. Of we be have it lose\n            gate bred. Do separate removing or expenses in. Had covered but\n            evident chapter matters anxious.\n          </Paragraph>\n        ))}\n      </Stack>\n      {displayDrawer && (\n        <Drawer\n          footer={<Footer />}\n          hasBackdrop={false}\n          size=\"md\"\n          title=\"Small size drawer without backdrop\"\n          onClose={() => setDisplayDrawer(false)}\n        >\n          {/* <Content /> */}\n          <Button\n            onClick={() => setDisplaySemanticModal(!displaySemanticModal)}\n          >\n            Jump out modal now!\n          </Button>\n          {!displaySemanticModal || (\n            <SemanticModal\n              actions={[\n                {\n                  label: 'Cancel',\n                  name: 'Cancel',\n                  onClick: () => setDisplaySemanticModal(false),\n                },\n                {\n                  label: 'Destroy',\n                  name: 'Destroy',\n                  onClick: () => setDisplaySemanticModal(false),\n                },\n              ]}\n              message=\"Something bad is about to happen\"\n              primaryButtonColor={ButtonEnums.ButtonColors.danger}\n              title=\"Attention!\"\n              variant=\"error\"\n              onClose={() => setDisplaySemanticModal(false)}\n            />\n          )}\n        </Drawer>\n      )}\n    </Padbox>\n  );\n};\n\nexport const WithSemanticModal: StoryFn = () => {\n  const [displaySemanticModal, setDisplaySemanticModal] = useState(false);\n\n  const close = (): void => {\n    setDisplaySemanticModal(false);\n  };\n\n  return (\n    <Drawer\n      footer={<Footer />}\n      title=\"With semantic modal\"\n      onClose={action('close-modal')}\n    >\n      <>\n        <Button onClick={() => setDisplaySemanticModal(!displaySemanticModal)}>\n          Jump out modal now!\n        </Button>\n        {!displaySemanticModal || (\n          <SemanticModal\n            actions={[\n              {\n                label: 'Cancel',\n                name: 'Cancel',\n                onClick: close,\n              },\n              {\n                label: 'Destroy',\n                name: 'Destroy',\n                onClick: close,\n              },\n            ]}\n            message=\"Something bad is about to happen\"\n            primaryButtonColor={ButtonEnums.ButtonColors.danger}\n            title=\"Attention!\"\n            variant=\"error\"\n            onClose={() => setDisplaySemanticModal(false)}\n          />\n        )}\n      </>\n    </Drawer>\n  );\n};\n\nconst alphabet = Array.from(Array(26))\n  .map((_, i) => i + 65)\n  .map((x) => String.fromCharCode(x));\n\nconst Subheader = styled(Padbox)`\n  position: sticky;\n  top: calc(var(--sscds-space-dialog-content-padding) * -1);\n  margin-top: calc(var(--sscds-space-dialog-content-padding) * -1) !important;\n  margin-left: calc(var(--sscds-space-dialog-content-padding) * -1);\n  margin-right: calc(var(--sscds-space-dialog-content-padding) * -1);\n\n  background: white;\n  box-shadow: 0px 4px 4px 2px rgba(0, 0, 0, 0.1);\n`;\n\nexport const WithSubheader: StoryFn = () => (\n  <Drawer\n    footer={<Footer />}\n    size=\"lg\"\n    title=\"Product categories\"\n    onClose={action('close-modal')}\n  >\n    <Stack gap=\"lg\">\n      <Subheader paddingSize={SpaceSizes.mdPlus} paddingType=\"squish\">\n        <Stack gap=\"lg\">\n          <Inline gap=\"lg\" justify=\"space-between\">\n            <Text isBold>Company name</Text>\n            <Text>1821 entries</Text>\n          </Inline>\n          <Inline gap=\"sm\">\n            {alphabet.map((char) => (\n              <Link href=\"#\">{char}</Link>\n            ))}\n          </Inline>\n        </Stack>\n      </Subheader>\n      <Stack gap=\"md\">\n        {Array.from(Array(10)).map(() => (\n          <Paragraph>\n            Talent she for lively eat led sister. Entrance strongly packages she\n            out rendered get quitting denoting led. Dwelling confined improved\n            it he no doubtful raptures. Several carried through an of up attempt\n            gravity. Situation to be at offending elsewhere distrusts if.\n            Particular use for considered projection cultivated. Worth of do\n            doubt shall it their. Extensive existence up me contained he\n            pronounce do. Excellence inquietude assistance precaution any\n            impression man sufficient.\n          </Paragraph>\n        ))}\n      </Stack>\n    </Stack>\n  </Drawer>\n);\n\nexport const ModalNested: StoryFn = () => {\n  const [drawerVisible, setDrawerVisibility] = useState(false);\n  const [modalVisible, setModalVisibility] = useState(false);\n  const [counter, setCounter] = useState(0);\n  return (\n    <div>\n      <Button onClick={() => setDrawerVisibility(true)}>Open drawer</Button>\n      {Array.from(Array(10)).map(() => (\n        <Paragraph>\n          Talent she for lively eat led sister. Entrance strongly packages she\n          out rendered get quitting denoting led. Dwelling confined improved it\n          he no doubtful raptures. Several carried through an of up attempt\n          gravity. Situation to be at offending elsewhere distrusts if.\n          Particular use for considered projection cultivated. Worth of do doubt\n          shall it their. Extensive existence up me contained he pronounce do.\n          Excellence inquietude assistance precaution any impression man\n          sufficient.\n        </Paragraph>\n      ))}\n      {modalVisible ? (\n        <Modal\n          onClose={() => {\n            setModalVisibility(false);\n            setCounter(counter + 1);\n          }}\n        >\n          <Paragraph>\n            Talent she for lively eat led sister. Entrance strongly packages she\n            out rendered get quitting denoting led. Dwelling confined improved\n            it he no doubtful raptures. Several carried through an of up attempt\n            gravity. Situation to be at offending elsewhere distrusts if.\n            Particular use for considered projection cultivated. Worth of do\n            doubt shall it their. Extensive existence up me contained he\n            pronounce do. Excellence inquietude assistance precaution any\n            impression man sufficient.\n          </Paragraph>\n        </Modal>\n      ) : null}\n      {drawerVisible ? (\n        <Drawer onClose={() => setDrawerVisibility(false)}>\n          <Button onClick={() => setModalVisibility(true)}>Open Modal</Button>\n        </Drawer>\n      ) : null}\n    </div>\n  );\n};\n\nModalNested.parameters = {\n  screenshot: { skip: true },\n};\n\nconst codeExample = `\nconst Subheader = styled(Padbox)\\`\n  /* make subheader stick bellow the header */\n  position: sticky;\n  top: calc($\\{getSpace(SpaceSizes.lg)} / -2);\n\n  /* compensate drawer content padding */\n  margin-top: calc(\\${getSpace(SpaceSizes.lg)} / -2) !important;\n  margin-left: calc($\\{getSpace(SpaceSizes.lg)} * -1);\n  margin-right: calc($\\{getSpace(SpaceSizes.lg)} * -1);\n\n  /* visual styles */\n  background: white;\n  box-shadow: 0px 4px 4px 2px rgba(0, 0, 0, 0.1);\n\\`;\n\nexport const WithSubheader: StoryFn = () => (\n  <Drawer>\n    <Stack gap={SpaceSizes.lg}>\n      <Subheader paddingSize={SpaceSizes.lg} paddingType=\"squish\">\n        /* content of Subheader */\n      </Subheader>\n      /* Drawer content */\n    </Stack>\n  </Drawer>\n);\n`;\n\nWithSubheader.parameters = {\n  screenshot: { skip: true },\n  docs: {\n    source: {\n      code: codeExample,\n    },\n  },\n};\n"],"names":["component","Drawer_stories","parameters","docs","Drawer","inlineStories","iframeHeight","source","type","argTypes","size","generateControl","DrawerSizes","footer","control","disable","adornment","Footer","Meta","SpaceSizes","md","jsx","Button","Adornment","Icon","Content","Stack","marginBottom","jsxs","Paragraph","Tooltip","args","isShown","setIsShown","xxl","Padbox","Inline","screenshot","setDisplayDrawer","WithTitleAndAdornment","action","WithOverflowingTitle","WithoutBackdrop","displaySomething","setDisplaySomething","useState","displayDrawer","displaySemanticModal","setDisplaySemanticModal","name","onClick","close","Array","keys","map","label","WithSubheader","SemanticModal","ButtonEnums","danger","setDrawerVisibility","modalVisible","setModalVisibility","Fragment","setCounter","alphabet","from","_","i","String","fromCharCode","x","Subheader","styled","withConfig","displayName","componentId","mdPlus","Text","codeExample","char","Link"],"mappings":"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"}
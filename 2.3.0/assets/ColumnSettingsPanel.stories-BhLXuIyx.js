import{j as n}from"./jsx-runtime-Cw0GR0a5.js";import{r as S}from"./index-CTjT7uj6.js";import{D as a}from"./Datatable-CRiRCi20.js";import{T as t}from"./Template-CpnJcoj5.js";import"./useLogger-BNYGJgyi.js";import"./index-DzoB_gWM.js";import"./DSProvider-DOkUOQoq.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-C3ps-iVb.js";import"./colors-2yNNI7_i.js";import"./IconButton-C0z_ySy5.js";import"./components-imVrW6nL.js";import"./index-CQl3OQTU.js";import"./Icon-CHqwD8rK.js";import"./index-t-vajJ9r.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./index-klhtVnMw.js";import"./Spinner-Bmxd_xeK.js";import"./prop-BgpcU4fO.js";import"./menuElements-ByXMhNOt.js";import"./tslib.es6-BLYux4pC.js";import"./index-CoMEwqFC.js";import"./index-BUX0wYnk.js";import"./Padbox-DIe3-S_j.js";import"./index-DZoBl2Wq.js";import"./flex.types-BrkCVx66.js";import"./Inline-DPdVYO7t.js";import"./Cluster-DaqHgnAc.js";import"./index-C_SwQgDv.js";import"./pluck-XHiJ2W8k.js";import"./useLocalStorageState-Bvq8NDNj.js";import"./useContainerQuery-DfiLLmFV.js";import"./Button-BMWvW0nZ.js";import"./index-mAAZmqGJ.js";import"./spacing.types-C9Yu1wmA.js";import"./Skeleton-BSMwopXk.js";import"./index-Drrfuvzh.js";import"./Tooltip-BT_E9yk_.js";import"./FloatingContext-CyxsIqHp.js";import"./index-BtwkxZ3S.js";import"./CloseButton-B7KX2rrC.js";import"./index-beAa1auE.js";import"./checkCircleSolid-D_DFWg_A.js";import"./sortable.esm-Bgh6Enlk.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-DHgpcg3j.js";import"./PillRemoveButton-CsvadIXl.js";import"./Pill-CA-mw_E3.js";import"./PillLabel-DZn6lXVM.js";import"./gt-2XdA2AlM.js";const ct={title:"components/DatatableV2/ColumnSettingsPanel",component:a,parameters:{screenshot:{skip:!0}}},d=t.bind({});d.args=t.args;const c=t.bind({});c.args={...t.args,enableHiding:!1,enableColumnPinning:!1};const m=t.bind({});m.args={...t.args,enableHiding:!1,initialState:{showColumnSettings:!0}};m.parameters={screenshot:{skip:!1}};const l=t.bind({});l.args={...t.args,enableColumnPinning:!1,initialState:{showColumnSettings:!0}};l.parameters={screenshot:{skip:!1}};const p=t.bind({});p.args={...t.args,initialState:{showColumnSettings:!0}};p.parameters={screenshot:{skip:!1}};const e=g=>{const[i,u]=S.useState(!0);return n.jsxs(n.Fragment,{children:[n.jsx(a,{state:{showColumnSettings:i},onShowColumnSettings:u,...g}),n.jsxs("div",{children:[n.jsx("strong",{children:"Debug:"}),n.jsx("pre",{children:JSON.stringify(i,null,2)})]})]})};e.args=t.args;e.__docgenInfo={description:"",methods:[],displayName:"ColumnSettingsPanelManagedState"};var o,s,r;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`args => {
  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);
  return <>
      <Datatable state={{
      showColumnSettings
    }} onShowColumnSettings={setShowColumnSettings} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>
      </div>
    </>;
}`,...(r=(s=e.parameters)==null?void 0:s.docs)==null?void 0:r.source}}};const Ct=["ColumnSettingsPanelEnabled","DisabledColumnSettingsPanel","DisabledColumnHidingInSettingsPanel","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState"];export{d as ColumnSettingsPanelEnabled,e as ColumnSettingsPanelManagedState,m as DisabledColumnHidingInSettingsPanel,l as DisabledColumnPinningInSettingsPanel,c as DisabledColumnSettingsPanel,p as InitialColumnSettingsPanel,Ct as __namedExportsOrder,ct as default};
//# sourceMappingURL=ColumnSettingsPanel.stories-BhLXuIyx.js.map

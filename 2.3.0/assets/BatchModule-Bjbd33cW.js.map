{"version":3,"file":"BatchModule-Bjbd33cW.js","sources":["../../../src/components/Datatable/BatchModule/BatchActions/index.ts","../../../src/components/Datatable/BatchModule/ElementCounter/index.ts","../../../src/components/Datatable/BatchModule/BatchModule.tsx"],"sourcesContent":["export { default as BatchActions } from './BatchActions';\n","export { default as ElementCounter } from './ElementCounter';\n","import React, { useEffect, useState } from 'react';\nimport { all, isEmpty } from 'ramda';\nimport { isNonEmptyArray } from 'ramda-adjunct';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { getSpace } from '../../../utils';\nimport { SSCIconNames } from '../../../theme/icons/icons.enums';\nimport { Inline } from '../../layout';\nimport { ColumnsControls } from '../components/ColumnsControls';\nimport { ControlButton } from '../components/ControlButton';\nimport { BatchActions } from './BatchActions';\nimport { ElementCounter } from './ElementCounter';\nimport { BatchModuleProps } from './BatchModule.types';\nimport { DatatableStore } from '../Datatable.store';\n\nconst BatchModuleWrapper = styled.div`\n  padding: ${getSpace('md')};\n`;\n\nconst BatchModule = ({\n  actions,\n  hasSelection,\n  hasOnlyPerPageSelection,\n  dataSize,\n  columns: {\n    isButtonDisplayed,\n    defaultIsColumnsControlsOpen = false,\n    defaultIsColumnsControlsApplied = false,\n  },\n}: BatchModuleProps) => {\n  const [isColumnsActive, setIsColumnsActive] = useState(\n    defaultIsColumnsControlsOpen,\n  );\n  const [, setIsColumnsApplied] = useState(defaultIsColumnsControlsApplied);\n  useEffect(() => {\n    const unsubscribe = DatatableStore.subscribe(\n      (s) => ({ columnOrder: s.columnOrder, hiddenColumns: s.hiddenColumns }),\n      ({ columnOrder, hiddenColumns }) => {\n        if (all(isEmpty, [columnOrder, hiddenColumns])) {\n          setIsColumnsApplied(false);\n        }\n      },\n    );\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <BatchModuleWrapper>\n      <Inline align=\"center\" justify=\"space-between\">\n        <Inline align=\"center\" gap=\"md\">\n          {isButtonDisplayed && (\n            <ColumnsControls\n              isOpen={isColumnsActive}\n              onApply={(shouldApply) => {\n                setIsColumnsApplied(shouldApply);\n                setIsColumnsActive((prev) => !prev);\n              }}\n              onClose={() => {\n                setIsColumnsActive((prev) => !prev);\n              }}\n              onOpen={() => {\n                setIsColumnsActive((prev) => !prev);\n              }}\n            >\n              <ControlButton\n                iconName={SSCIconNames.columns3}\n                label=\"Toggle columns\"\n                onClick={() => {\n                  setIsColumnsActive((prev) => !prev);\n                }}\n              />\n            </ColumnsControls>\n          )}\n          <ElementCounter\n            dataSize={dataSize}\n            hasOnlyPerPageSelection={hasOnlyPerPageSelection}\n            hasSelection={hasSelection}\n          />\n        </Inline>\n        {isNonEmptyArray(actions) && <BatchActions actions={actions} />}\n      </Inline>\n    </BatchModuleWrapper>\n  );\n};\n\nBatchModule.propTypes = {\n  ...BatchActions.propTypes,\n  ...ElementCounter.propTypes,\n  columns: PropTypes.exact({\n    isButtonDisplayed: PropTypes.bool,\n    defaultIsColumnsControlsOpen: PropTypes.bool,\n    defaultIsColumnsControlsApplied: PropTypes.bool,\n  }),\n};\n\nexport default BatchModule;\n"],"names":["cov_20s1oehqrp","actualCoverage","cov_kwgustqo8","cov_166w0s9jcc","path","hash","global","gcv","coverageData","coverage","BatchModuleWrapper","s","styled","div","withConfig","displayName","componentId","getSpace","actions","hasSelection","hasOnlyPerPageSelection","dataSize","columns","isButtonDisplayed","defaultIsColumnsControlsOpen","b","defaultIsColumnsControlsApplied","f","useEffect","columnOrder","hiddenColumns","unsubscribe","DatatableStore","subscribe","all","isEmpty","setIsColumnsApplied","jsxs","Inline","align","gap","children","setIsColumnsActive","prev","onClose","onOpen","BatchModule","bool"],"mappings":"03CAAA,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,gwBCAA,OAAAE,EAAA,UAAA,CAAA,OAAAD,CAAA,EAAAA,CAAA,CAAAC,EAAA,ECgBqC,SAAAC,GAAA,CAAA,IAAAC,EAAA,qGAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,qGAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,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"}
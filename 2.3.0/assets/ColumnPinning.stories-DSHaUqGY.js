import{j as i}from"./jsx-runtime-Cw0GR0a5.js";import{r as g}from"./index-CTjT7uj6.js";import{D as s}from"./Datatable-DCxSHHFj.js";import{T as n,c as u}from"./Template-DA-S9vQR.js";import"./useLogger-_RKsn3HX.js";import"./index-C1FT5pTy.js";import"./DSProvider-O0hTpwSp.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-BL8xHceO.js";import"./colors-BJBAFLAc.js";import"./IconButton-C1FilO1y.js";import"./components-Tmbw27rw.js";import"./index-Cvv1KPJl.js";import"./Icon-Ctrq9sYp.js";import"./index-uyLpYamY.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./index-C95nPCzM.js";import"./Spinner-BvaTOgAJ.js";import"./prop-B-t2KTqT.js";import"./menuElements-B_rPB4a6.js";import"./tslib.es6-BLYux4pC.js";import"./index-B-CeicLq.js";import"./index--b1-fK-k.js";import"./Padbox-DLePQqEe.js";import"./index-DPJ-F9hp.js";import"./flex.types-BrkCVx66.js";import"./Inline-CVToOADQ.js";import"./Cluster-DZ_NL6w4.js";import"./index-DXjoAeTX.js";import"./isFunction-C9e5dGMJ.js";import"./useLocalStorageState-Dk2imEhS.js";import"./useContainerQuery-DqIcbuCK.js";import"./Button-B2HZICot.js";import"./index-CnFAm5FJ.js";import"./spacing.types-C9Yu1wmA.js";import"./Skeleton-D1HxNzJO.js";import"./index-D5bPmNji.js";import"./Tooltip-BQzvuGg4.js";import"./FloatingContext-Bsi7uTe6.js";import"./index-CQ4_Qafr.js";import"./CloseButton-BeO2B7D9.js";import"./index-Cp1GzN7Y.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-Bgh6Enlk.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-CpVj0NfY.js";import"./PillRemoveButton-YKsUPAtp.js";import"./Pill-BKaSw2i-.js";import"./PillLabel-n9U0O5_Y.js";import"./gt-DOG6XcTq.js";const Cn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}}},c=n.bind({});c.args=n.args;const d=n.bind({});d.args={...n.args,enableColumnPinning:!1};const P=n.bind({});P.args={...n.args,columns:[...u,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const bn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{c as ColumnPinningEnabled,t as ColumnPinningManagedState,d as DisabledColumnPinning,P as DisabledColumnPinningForColumn,a as InitialColumnPinning,bn as __namedExportsOrder,Cn as default};
//# sourceMappingURL=ColumnPinning.stories-DSHaUqGY.js.map

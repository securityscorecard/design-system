{"version":3,"file":"index-DZoBl2Wq.js","sources":["../../src/components/layout/Stack/Stack.tsx","../../src/components/layout/Stack/index.ts"],"sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { prop } from 'ramda';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport { Property } from 'csstype';\nimport cls from 'classnames';\n\nimport { SpaceSizes } from '../../../theme/space.enums';\nimport { SpaceSize } from '../../../theme/space.types';\nimport { getSpace } from '../../../utils';\nimport { AlignItemsPropType } from '../../../types/flex.types';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nexport interface StackProps {\n  /**\n   * Whitespace between each child of the Stack\n   */\n  gap?: SpaceSize;\n  /**\n   * Horizontal alignment of elements inside Stack\n   */\n  justify?: Property.AlignItems;\n  /**\n   * Vertical alignment of elements inside Stack\n   */\n  align?: Property.JustifyContent;\n  /**\n   * Index of element after which the Stack is splitted. Leave 'undefined' for no splitting.\n   */\n  splitAt?: number;\n  /**\n   * Should apply gap recursively (on nested levels)\n   */\n  isRecursive?: boolean;\n  className?: string;\n}\n\nconst Stack = styled.div.attrs((props) => ({\n  ...props,\n  className: cls(CLX_LAYOUT, props?.className),\n}))<StackProps>`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: ${prop('justify')};\n  justify-content: ${prop('align')};\n\n  /* FIXME: Until we remove 'margin' property from other components we need to\n    increase specificity of those nesting , since it can be overriden by inner\n    elements with the same specificity. This can lead to inconsistent output\n    of visual test if styled-components puts CSS in different order into Head. */\n  ${({ isRecursive }) => (isRecursive ? '&&' : '&& >')} * {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  ${({ isRecursive }) => (isRecursive ? '&&' : '&& >')} * + * {\n    margin-top: ${({ gap, theme }) => getSpace(gap, { theme })};\n  }\n\n  ${({ splitAt }) =>\n    isNotUndefined(splitAt) &&\n    `\n    :only-child {\n      height: 100%;\n    }\n\n    > :nth-child(${splitAt}) {\n      margin-bottom: auto;\n    }\n  `}\n`;\n\nStack.propTypes = {\n  gap: PropTypes.oneOf(Object.values(SpaceSizes)),\n  justify: AlignItemsPropType,\n  splitAt: PropTypes.number,\n  isRecursive: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nStack.defaultProps = {\n  gap: SpaceSizes.none,\n  justify: 'stretch',\n  isRecursive: false,\n};\n\nexport default Stack;\n","export { default as Stack } from './Stack';\n"],"names":["cov_b7sociihq","path","hash","global","gcv","coverageData","coverage","actualCoverage","AlignItemsPropType","splitAt","isRecursive","bool","className","prop","cov_24mlfievqg"],"mappings":"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"}
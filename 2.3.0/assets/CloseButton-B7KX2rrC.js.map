{"version":3,"file":"CloseButton-B7KX2rrC.js","sources":["../../src/components/CloseButton/CloseButton.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport cls from 'classnames';\n\nimport { SpaceSizes } from '../../theme';\nimport { getNegativeSpace } from '../../utils';\nimport { AlignmentWrapperProps, CloseButtonProps } from './CloseButton.types';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport IconButton from '../ButtonV2/IconButton';\n\nconst AlignmentWrapper = styled.div<AlignmentWrapperProps>`\n  && {\n    margin: ${({ $marginCompensation, theme }) =>\n      getNegativeSpace($marginCompensation, { theme })};\n    margin-left: 0;\n    padding: var(--sscds-space-2x);\n  }\n`;\n\nconst CloseButton = forwardRef<HTMLButtonElement, CloseButtonProps>(\n  (\n    {\n      onClose,\n      ariaLabel = 'Close',\n      marginCompensation = SpaceSizes.sm,\n      isInverted = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => (\n    <AlignmentWrapper\n      $marginCompensation={marginCompensation}\n      className={cls(CLX_COMPONENT, className, {\n        dark: isInverted,\n      })}\n    >\n      <IconButton\n        ref={ref}\n        iconName=\"times\"\n        label={ariaLabel}\n        size=\"sm\"\n        variant=\"ghost\"\n        onClick={onClose}\n        {...props}\n      />\n    </AlignmentWrapper>\n  ),\n);\n\nCloseButton.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  marginCompensation: PropTypes.oneOf(Object.values(SpaceSizes)),\n  ariaLabel: PropTypes.string,\n  isInverted: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default CloseButton;\n"],"names":["theme","AlignmentWrapper","cov_1dutquoiy1","s","styled","div","withConfig","displayName","componentId","$marginCompensation","CloseButton","forwardRef","marginCompensation","className","props","ref","sm","isInverted","onClose","bool","string","dark"],"mappings":"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"}
{"version":3,"file":"Toast-jpioKPjB.js","sources":["../../src/components/Toast/Toast.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport { getColor, getRadii, pxToRem } from '../../utils';\nimport { Paragraph } from '../Paragraph';\nimport { TextSizes } from '../Text/Text.enums';\nimport { ToastProps } from './Toast.types';\nimport { SpaceSizes } from '../../theme/space.enums';\nimport { Inline } from '../layout';\nimport { StretchEnum } from '../layout/Inline/Inline.enums';\nimport { Padbox } from '../layout/Padbox';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { ToastVariants } from './Toast.enums';\nimport { CloseButton } from '../CloseButton';\nimport { BaseToastBanner } from '../_internal/BaseToastBanner';\nimport { CLX_COMPONENT } from '../../theme/constants';\n\nconst ToastFromTop = keyframes`\n  from {\n    top: ${pxToRem(-100)};\n    opacity: 0;\n  }\n  to {\n    top: ${pxToRem(70)};\n    opacity: 1;\n  }\n`;\n\nexport const ToastArea = styled.div`\n  position: fixed;\n  z-index: 9999;\n  top: ${pxToRem(70)};\n  right: ${pxToRem(20)};\n`;\n\nconst ToastContainer = styled.div<{ $width?: ToastProps['width'] }>`\n  width: ${({ $width }) => pxToRem($width)};\n  max-height: ${pxToRem(240)};\n  background-color: ${getColor('neutral.0')};\n  color: ${getColor('neutral.900')};\n  text-align: left;\n  box-shadow: 0px 2px 6px 0px var(--sscds-slateA-slateA6);\n  animation: ${ToastFromTop} 0.5s;\n  border: 1px solid ${getColor('neutral.300')};\n  border-radius: ${getRadii('default')};\n  overflow: hidden;\n`;\n\nconst ToastContent = styled(Paragraph)`\n  text-decoration: none;\n  text-align: left;\n\n  &&& button {\n    margin-bottom: -10px;\n  }\n`;\n\nconst iconPxSizesVariants = {\n  [ToastVariants.info]: 16,\n  [ToastVariants.warn]: 14,\n  [ToastVariants.error]: 16,\n  [ToastVariants.success]: 16,\n};\n\nconst stopPropagation = (event) => event?.stopPropagation();\n\nconst ToastAreaContainer = ({\n  children,\n  isStandalone,\n}: {\n  isStandalone: boolean;\n  children: ReactNode;\n}) => {\n  // eslint-disable-next-line\n  return isStandalone ? <ToastArea>{children}</ToastArea> : <>{children}</>;\n};\n\nconst Toast = ({\n  onClose,\n  children,\n  width = 400,\n  variant,\n  isStandalone = true,\n}: ToastProps) => {\n  return (\n    <ToastAreaContainer isStandalone={isStandalone}>\n      <ToastContainer\n        $width={width}\n        className={CLX_COMPONENT}\n        onClick={stopPropagation}\n      >\n        <BaseToastBanner\n          iconAlign=\"center\"\n          iconPxSizesVariants={iconPxSizesVariants}\n          iconSize={16}\n          paddingSize={SpaceSizes.sm}\n          paddingType={PaddingTypes.squish}\n          stretch={StretchEnum.end}\n          variant={variant}\n        >\n          <Inline justify=\"space-between\">\n            <Padbox paddingSize={SpaceSizes.md}>\n              <ToastContent as=\"div\" margin=\"none\" size={TextSizes.md}>\n                {children}\n              </ToastContent>\n            </Padbox>\n            <CloseButton\n              aria-label=\"Close\"\n              marginCompensation={SpaceSizes.none}\n              onClose={onClose}\n            />\n          </Inline>\n        </BaseToastBanner>\n      </ToastContainer>\n    </ToastAreaContainer>\n  );\n};\n\nToast.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  width: PropTypes.number,\n  variant: PropTypes.oneOf(Object.values(ToastVariants)),\n  isStandalone: PropTypes.bool,\n};\n\nexport default Toast;\n"],"names":["cov_eexnxnlly","path","hash","global","gcv","coverageData","coverage","actualCoverage","ToastFromTop","s","keyframes","ToastContainer","styled","$width","ToastArea","div","withConfig","displayName","componentId","warn","error","stopPropagation","event","ToastAreaContainer","children","isStandalone","getColor","onClose","ToastContent","Paragraph","values","bool","ToastVariants","Toast"],"mappings":"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"}
{"version":3,"file":"isArray-BtRvizdc.js","sources":["../../../node_modules/ramda-adjunct/es/isArray.js"],"sourcesContent":["import { curryN, pipe, type, identical } from 'ramda';\nimport isFunction from './isFunction';\n\n/**\n * Checks if input value is `Array`.\n *\n * @func isArray\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.3.0|v0.3.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotArray|isNotArray}\n * @example\n *\n * RA.isArray([]); //=> true\n * RA.isArray(null); //=> false\n * RA.isArray({}); //=> false\n */\nvar isArray = curryN(1, isFunction(Array.isArray) ? Array.isArray : pipe(type, identical('Array')));\nexport default isArray;"],"names":["isArray","curryN","isFunction","pipe","type","identical","isArray$1"],"mappings":"0GAoBA,IAAIA,EAAUC,EAAO,EAAGC,EAAW,MAAM,OAAO,EAAI,MAAM,QAAUC,EAAKC,EAAMC,EAAU,OAAO,CAAC,CAAC,EAClG,MAAAC,EAAeN","x_google_ignoreList":[0]}
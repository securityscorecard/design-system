import{j as e}from"./jsx-runtime-Cw0GR0a5.js";import{r as ae}from"./index-CTjT7uj6.js";import{a as i}from"./chunk-454WOBUV-DWuJqIWT.js";import{M as s}from"./MultiValueInput-DuIURiGH.js";import"./index-DK3-1gLa.js";import"./index-CoMEwqFC.js";import"./index-DRBCZw3W.js";import"./index-DpN_RxTF.js";import"./index-5Whqhzhi.js";import{S as te}from"./index-C_SwQgDv.js";import{L as oe}from"./Label-CkBakwI3.js";import{a as b}from"./Heading-B6YquQMs.js";import{B as se}from"./Banner-CGZUSVLP.js";import{n as ie}from"./noop-zq4Ga5XN.js";import{B as M}from"./Button-fZBZNXZ8.js";import{S as re}from"./index-DZoBl2Wq.js";import{I as ne}from"./Inline-DPdVYO7t.js";import"./v4-D8aEg3BZ.js";import"./index-DzoB_gWM.js";import"./index-BRV0Se7Z.js";import"./index-DB0nX0iQ.js";import"./index-C7IrpltL.js";import"./index-beAa1auE.js";import"./index-t-vajJ9r.js";import"./DSProvider-DOkUOQoq.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-C3ps-iVb.js";import"./colors-2yNNI7_i.js";import"./checkCircleSolid-D_DFWg_A.js";import"./index-CQl3OQTU.js";import"./Icon-CHqwD8rK.js";import"./useLogger-BNYGJgyi.js";import"./index-DHgpcg3j.js";import"./PillRemoveButton-CsvadIXl.js";import"./Padbox-DIe3-S_j.js";import"./Pill-CA-mw_E3.js";import"./PillLabel-DZn6lXVM.js";import"./gt-2XdA2AlM.js";import"./isNonEmptyArray-BntwbUJK.js";import"./isNotEmpty-CKvpBaLM.js";import"./isArray-CE6Q3D6e.js";import"./isFunction-BiBuFaUE.js";import"./pluck-XHiJ2W8k.js";import"./prop-BgpcU4fO.js";import"./both-CO8nd6Bu.js";import"./isEmptyArray-C0dbsOLq.js";import"./isNonEmptyString-CIMRQYAB.js";import"./isNotNull-DFX8Jk9A.js";import"./isNull-Ddx7qw_y.js";import"./trim-Czue50g_.js";import"./take-N6yRxtAa.js";import"./index-BUX0wYnk.js";import"./Cluster-DaqHgnAc.js";import"./flex.types-BrkCVx66.js";import"./Button.enums-nGQnPjuG.js";import"./index-PS5U9aCu.js";import"./require-router-link-DIC5Nlq-.js";import"./react-router-dom-CJ3P1gOI.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./spacing.types-C9Yu1wmA.js";import"./index-klhtVnMw.js";import"./Spinner-Bmxd_xeK.js";import"./action.types-CSW_hKjS.js";import"./customPropTypes-DoGtBDTA.js";import"./index-BtwkxZ3S.js";import"./CloseButton-B7KX2rrC.js";import"./IconButton-C0z_ySy5.js";import"./components-imVrW6nL.js";import"./index-DCt6j5in.js";import"./isNotNilOrEmpty-C6qSabrU.js";import"./isNilOrEmpty-Cdj5d-0t.js";import"./isNil-B57hcqoE.js";import"./useContainerQuery-DfiLLmFV.js";const ka={component:s,title:"components/forms/MultiValueInput"},n=a=>e.jsx(s,{...a,"aria-label":"MultiValueInput"}),r=n.bind({});r.args={onValueAdd:i("OnValueAdd"),onValueRemove:i("OnValueRemove"),onValuesChange:i("OnValuesChange"),onInputChange:i("OnInputChange"),valuesDelimiter:",",onPaste:a=>(a.clipboardData||window.clipboardData).getData("text").split(";").filter(t=>t!=="3").join(";")};const c=n.bind({});c.args={...r.args,value:["john@example.com","jane@example.com"]};const d=n.bind({});d.args={...r.args,placeholder:"Share with..."};const g=n.bind({});g.args={...r.args,isFocused:!0,className:"focus-within"};const h=n.bind({});h.args={...r.args,isInvalid:!0};const I=n.bind({});I.args={...r.args,isDisabled:!0};const l=n.bind({});l.args={...r.args,isClearable:!1,value:["john@example.com","jane@example.com"]};l.title="Non-clearable";const V=a=>{const[v,t]=ae.useState(!0);return e.jsxs(e.Fragment,{children:[e.jsx(oe,{htmlFor:"number",children:"Numbers only"}),e.jsx(s,{...a,inputId:"emails",inputValue:"abc",isInvalid:v,pattern:"[0-9]+",value:["12"],onInputChange:o=>{t(!!o.target.validity.patternMismatch)}})]})},u=a=>e.jsxs(re,{gap:"md",children:[e.jsx(b,{size:"h3",children:"Default truncation N=16"}),e.jsx(s,{...a}),e.jsx(b,{size:"h3",children:"Custom truncation N=25"}),e.jsx(s,{...a,maxPillLabelLength:25}),e.jsx(b,{size:"h3",children:"Custom truncation N=5"}),e.jsx(s,{...a,maxPillLabelLength:5})]});u.args={...r.args,value:["123456789012345678901234567890","12345678901234567890","1234567890"]};const p=a=>e.jsx("div",{style:{width:"200px"},children:e.jsx(s,{...a})});p.args={...r.args,value:["12345678901234567890","1234567890"]};const m=a=>{const[v,t]=ae.useState([]);return e.jsxs(re,{gap:"sm",children:[e.jsxs(se,{variant:"warn",onClose:ie,children:["Handling duplicated values is ",e.jsx(te,{children:"up to the consumer"})," for the controlled input."]}),e.jsx(s,{...a,value:v,onValueAdd:(o,x)=>{t(x),i("valueAdd")(x)},onValueRemove:o=>{t(o),i("valueRemove")(o)},onValuesChange:o=>{t(o),i("valuesChange")(o)}}),e.jsxs(ne,{gap:"md",children:[e.jsx(M,{onClick:()=>t(["controlledValue1","controlledValue2"]),children:"Add values"}),e.jsx(M,{onClick:()=>t([]),children:"Reset values"})]})]})};m.parameters={screenshot:{skip:!0}};V.__docgenInfo={description:"",methods:[],displayName:"Validation"};u.__docgenInfo={description:"",methods:[],displayName:"PillTruncation"};p.__docgenInfo={description:"",methods:[],displayName:"PillWrapping"};m.__docgenInfo={description:"",methods:[],displayName:"ControlledInput"};var j,f,C;r.parameters={...r.parameters,docs:{...(j=r.parameters)==null?void 0:j.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(C=(f=r.parameters)==null?void 0:f.docs)==null?void 0:C.source}}};var S,N,P;c.parameters={...c.parameters,docs:{...(S=c.parameters)==null?void 0:S.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(P=(N=c.parameters)==null?void 0:N.docs)==null?void 0:P.source}}};var _,y,L;d.parameters={...d.parameters,docs:{...(_=d.parameters)==null?void 0:_.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(L=(y=d.parameters)==null?void 0:y.docs)==null?void 0:L.source}}};var k,B,D;g.parameters={...g.parameters,docs:{...(k=g.parameters)==null?void 0:k.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(D=(B=g.parameters)==null?void 0:B.docs)==null?void 0:D.source}}};var H,R,w;h.parameters={...h.parameters,docs:{...(H=h.parameters)==null?void 0:H.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(w=(R=h.parameters)==null?void 0:R.docs)==null?void 0:w.source}}};var A,F,z;I.parameters={...I.parameters,docs:{...(A=I.parameters)==null?void 0:A.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(z=(F=I.parameters)==null?void 0:F.docs)==null?void 0:z.source}}};var O,W,T;l.parameters={...l.parameters,docs:{...(O=l.parameters)==null?void 0:O.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(T=(W=l.parameters)==null?void 0:W.docs)==null?void 0:T.source}}};var E,q,G;V.parameters={...V.parameters,docs:{...(E=V.parameters)==null?void 0:E.docs,source:{originalSource:`args => {
  const [isInvalid, setIsInvalid] = useState(true);
  return <>
      <Label htmlFor="number">Numbers only</Label>
      <MultiValueInput {...args} inputId="emails" inputValue="abc" isInvalid={isInvalid} pattern="[0-9]+" value={['12']} onInputChange={e => {
      setIsInvalid(!!e.target.validity.patternMismatch);
    }} />
    </>;
}`,...(G=(q=V.parameters)==null?void 0:q.docs)==null?void 0:G.source}}};var J,K,Q;u.parameters={...u.parameters,docs:{...(J=u.parameters)==null?void 0:J.docs,source:{originalSource:`args => <Stack gap="md">
    <Heading size="h3">Default truncation N=16</Heading>
    <MultiValueInput {...args} />
    <Heading size="h3">Custom truncation N=25</Heading>
    <MultiValueInput {...args} maxPillLabelLength={25} />
    <Heading size="h3">Custom truncation N=5</Heading>
    <MultiValueInput {...args} maxPillLabelLength={5} />
  </Stack>`,...(Q=(K=u.parameters)==null?void 0:K.docs)==null?void 0:Q.source}}};var U,X,Y;p.parameters={...p.parameters,docs:{...(U=p.parameters)==null?void 0:U.docs,source:{originalSource:`args => <div style={{
  width: '200px'
}}>
    <MultiValueInput {...args} />
  </div>`,...(Y=(X=p.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var Z,$,ee;m.parameters={...m.parameters,docs:{...(Z=m.parameters)==null?void 0:Z.docs,source:{originalSource:`args => {
  const [values, setValues] = useState<string[] | undefined>([]);
  return <Stack gap="sm">
      <Banner variant="warn" onClose={noop}>
        Handling duplicated values is <Strong>up to the consumer</Strong> for
        the controlled input.
      </Banner>
      <MultiValueInput {...args} value={values} onValueAdd={(_, v) => {
      setValues(v);
      action('valueAdd')(v);
    }} onValueRemove={v => {
      setValues(v);
      action('valueRemove')(v);
    }} onValuesChange={v => {
      setValues(v);
      action('valuesChange')(v);
    }} />
      <Inline gap="md">
        <Button onClick={() => setValues(['controlledValue1', 'controlledValue2'])}>
          Add values
        </Button>
        <Button onClick={() => setValues([])}>Reset values</Button>
      </Inline>
    </Stack>;
}`,...(ee=($=m.parameters)==null?void 0:$.docs)==null?void 0:ee.source}}};const Ba=["Playground","Filled","WithPlaceholder","Focus","Invalid","Disabled","NonClearable","Validation","PillTruncation","PillWrapping","ControlledInput"];export{m as ControlledInput,I as Disabled,c as Filled,g as Focus,h as Invalid,l as NonClearable,u as PillTruncation,p as PillWrapping,r as Playground,V as Validation,d as WithPlaceholder,Ba as __namedExportsOrder,ka as default};
//# sourceMappingURL=MultiValueInput.stories-BMhobEzK.js.map

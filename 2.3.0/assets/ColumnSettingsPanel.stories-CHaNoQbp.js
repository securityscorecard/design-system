import{j as n}from"./jsx-runtime-Cw0GR0a5.js";import{r as S}from"./index-CTjT7uj6.js";import{D as a}from"./Datatable-DCxSHHFj.js";import{T as t}from"./Template-DA-S9vQR.js";import"./useLogger-_RKsn3HX.js";import"./index-C1FT5pTy.js";import"./DSProvider-O0hTpwSp.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-BL8xHceO.js";import"./colors-BJBAFLAc.js";import"./IconButton-C1FilO1y.js";import"./components-Tmbw27rw.js";import"./index-Cvv1KPJl.js";import"./Icon-Ctrq9sYp.js";import"./index-uyLpYamY.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./index-C95nPCzM.js";import"./Spinner-BvaTOgAJ.js";import"./prop-B-t2KTqT.js";import"./menuElements-B_rPB4a6.js";import"./tslib.es6-BLYux4pC.js";import"./index-B-CeicLq.js";import"./index--b1-fK-k.js";import"./Padbox-DLePQqEe.js";import"./index-DPJ-F9hp.js";import"./flex.types-BrkCVx66.js";import"./Inline-CVToOADQ.js";import"./Cluster-DZ_NL6w4.js";import"./index-DXjoAeTX.js";import"./isFunction-C9e5dGMJ.js";import"./useLocalStorageState-Dk2imEhS.js";import"./useContainerQuery-DqIcbuCK.js";import"./Button-B2HZICot.js";import"./index-CnFAm5FJ.js";import"./spacing.types-C9Yu1wmA.js";import"./Skeleton-D1HxNzJO.js";import"./index-D5bPmNji.js";import"./Tooltip-BQzvuGg4.js";import"./FloatingContext-Bsi7uTe6.js";import"./index-CQ4_Qafr.js";import"./CloseButton-BeO2B7D9.js";import"./index-Cp1GzN7Y.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-Bgh6Enlk.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-CpVj0NfY.js";import"./PillRemoveButton-YKsUPAtp.js";import"./Pill-BKaSw2i-.js";import"./PillLabel-n9U0O5_Y.js";import"./gt-DOG6XcTq.js";const Ct={title:"components/DatatableV2/ColumnSettingsPanel",component:a,parameters:{screenshot:{skip:!0}}},d=t.bind({});d.args=t.args;const C=t.bind({});C.args={...t.args,enableHiding:!1,enableColumnPinning:!1};const m=t.bind({});m.args={...t.args,enableHiding:!1,initialState:{showColumnSettings:!0}};m.parameters={screenshot:{skip:!1}};const l=t.bind({});l.args={...t.args,enableColumnPinning:!1,initialState:{showColumnSettings:!0}};l.parameters={screenshot:{skip:!1}};const p=t.bind({});p.args={...t.args,initialState:{showColumnSettings:!0}};p.parameters={screenshot:{skip:!1}};const e=g=>{const[i,u]=S.useState(!0);return n.jsxs(n.Fragment,{children:[n.jsx(a,{state:{showColumnSettings:i},onShowColumnSettings:u,...g}),n.jsxs("div",{children:[n.jsx("strong",{children:"Debug:"}),n.jsx("pre",{children:JSON.stringify(i,null,2)})]})]})};e.args=t.args;var o,r,s;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`args => {
  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);
  return <>
      <Datatable state={{
      showColumnSettings
    }} onShowColumnSettings={setShowColumnSettings} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>
      </div>
    </>;
}`,...(s=(r=e.parameters)==null?void 0:r.docs)==null?void 0:s.source}}};const ct=["ColumnSettingsPanelEnabled","DisabledColumnSettingsPanel","DisabledColumnHidingInSettingsPanel","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState"];export{d as ColumnSettingsPanelEnabled,e as ColumnSettingsPanelManagedState,m as DisabledColumnHidingInSettingsPanel,l as DisabledColumnPinningInSettingsPanel,C as DisabledColumnSettingsPanel,p as InitialColumnSettingsPanel,ct as __namedExportsOrder,Ct as default};
//# sourceMappingURL=ColumnSettingsPanel.stories-CHaNoQbp.js.map

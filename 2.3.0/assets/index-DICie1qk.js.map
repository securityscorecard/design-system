{"version":3,"file":"index-DICie1qk.js","sources":["../../../src/components/_internal/BaseToastBanner/BaseToastBanner.enums.ts","../../../src/components/_internal/BaseToastBanner/BaseToastBanner.tsx"],"sourcesContent":["export const BaseToastBannerVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n  loading: 'loading',\n} as const;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { isNotNilOrEmpty } from 'ramda-adjunct';\n\nimport { BaseToastBannerVariants } from './BaseToastBanner.enums';\nimport { IconTypes, SSCIconNames } from '../../../theme/icons/icons.enums';\nimport { getColor, pxToRem } from '../../../utils';\nimport { ColorTypes } from '../../../theme/colors.enums';\nimport { Padbox } from '../../layout/Padbox';\nimport { Inline } from '../../layout/Inline';\nimport { Icon } from '../../Icon';\nimport {\n  BaseToastBannerProps,\n  BaseToastBannerWrapperProps,\n} from './BaseToastBanner.types';\nimport { Spinner } from '../../Spinner';\n\nexport const baseToastBannerColorVariants = {\n  [BaseToastBannerVariants.info]: ColorTypes.info50,\n  [BaseToastBannerVariants.warn]: ColorTypes.warning50,\n  [BaseToastBannerVariants.error]: ColorTypes.error50,\n  [BaseToastBannerVariants.success]: ColorTypes.success50,\n  [BaseToastBannerVariants.loading]: ColorTypes.neutral200,\n};\n\nconst iconVariants = {\n  [BaseToastBannerVariants.info]: SSCIconNames.infoCircle,\n  [BaseToastBannerVariants.warn]: SSCIconNames.errorCircle,\n  [BaseToastBannerVariants.error]: SSCIconNames.exclTriangleSolid,\n  [BaseToastBannerVariants.success]: SSCIconNames.check,\n  [BaseToastBannerVariants.loading]: null,\n};\n\nconst iconColorVariants = {\n  [BaseToastBannerVariants.info]: ColorTypes.info500,\n  [BaseToastBannerVariants.warn]: ColorTypes.warning500,\n  [BaseToastBannerVariants.error]: ColorTypes.error500,\n  [BaseToastBannerVariants.success]: ColorTypes.success500,\n};\n\nconst IconPadbox = styled(Padbox)<{\n  $variant?: BaseToastBannerProps['variant'];\n  $iconAlign: string;\n}>`\n  background-color: ${({ $variant }) =>\n    getColor(baseToastBannerColorVariants[$variant])};\n  display: flex;\n  align-items: ${({ $iconAlign }) => $iconAlign || 'center'};\n`;\n\nconst IconWrapper = styled.div<{\n  $iconSize: number;\n}>`\n  display: flex;\n  align-items: center;\n  width: ${({ $iconSize }) => pxToRem($iconSize)};\n  height: ${({ $iconSize }) => pxToRem($iconSize)};\n`;\n\nconst StyledIcon = styled(Icon)<{\n  $variant?: BaseToastBannerWrapperProps['variant'];\n  $iconPxSizesVariants: BaseToastBannerWrapperProps['iconPxSizesVariants'];\n}>`\n  color: ${({ $variant }) => getColor(iconColorVariants[$variant])};\n  font-size: ${({ $variant, $iconPxSizesVariants }) =>\n    pxToRem($iconPxSizesVariants[$variant])};\n`;\n\nconst BaseToastBanner = ({\n  children,\n  variant,\n  paddingSize,\n  paddingType,\n  stretch,\n  iconSize,\n  iconPxSizesVariants,\n  iconAlign = 'center',\n}: BaseToastBannerWrapperProps) => (\n  <Inline stretch={stretch}>\n    {isNotNilOrEmpty(variant) && (\n      <IconPadbox\n        $iconAlign={iconAlign}\n        $variant={variant}\n        paddingSize={paddingSize}\n        paddingType={paddingType}\n      >\n        <IconWrapper $iconSize={iconSize}>\n          {variant === 'loading' ? (\n            <Spinner borderWidth={2} height={16} width={16} dark />\n          ) : (\n            <StyledIcon\n              $iconPxSizesVariants={iconPxSizesVariants}\n              $variant={variant}\n              name={iconVariants[variant]}\n              type={IconTypes.ssc}\n            />\n          )}\n        </IconWrapper>\n      </IconPadbox>\n    )}\n    {children}\n  </Inline>\n);\n\nexport default BaseToastBanner;\n"],"names":["BaseToastBannerVariants","info","warn","error","success","loading","infoCircle","baseToastBannerColorVariants","cov_q119tcrps","s","ColorTypes","info50","warning50","error50","errorCircle","check","iconVariants","SSCIconNames","info500","warning500","error500","iconColorVariants","success500","IconPadbox","styled","Padbox","withConfig","displayName","componentId","$variant","f","getColor","$iconAlign","b","IconWrapper","div","$iconSize","pxToRem","variant","iconSize","iconPxSizesVariants","children"],"mappings":"87CAAaA,MAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAA0B,CACrCC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,QAAS,SACX,GCoB+CC,SAAAA,GAAAA,CAAAA,IAAAA,EAAAA,6GAAAA,EAAAA,2CAAAA,EAAAA,OAAAA,EAAAA,eAAAA,EAAAA,CAAAA,KAAAA,6GAAAA,aAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,IAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,EAA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"}
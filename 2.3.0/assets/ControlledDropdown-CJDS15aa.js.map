{"version":3,"file":"ControlledDropdown-CJDS15aa.js","sources":["../../../src/components/Dropdown/Dropdown.enums.ts","../../../src/hooks/usePopup.ts","../../../src/hooks/usePortal.ts","../../../src/components/Dropdown/DropdownPane.tsx","../../../src/hooks/useFocusTrap.ts","../../../src/components/Dropdown/ControlledDropdown.tsx"],"sourcesContent":["export const DropdownTriggerEvents = {\n  click: 'click',\n  hover: 'hover',\n  focus: 'focus',\n} as const;\n\nexport const DropdownPlacements = {\n  auto: 'auto',\n  autoStart: 'auto-start',\n  autoEnd: 'auto-end',\n  top: 'top',\n  bottom: 'bottom',\n  right: 'right',\n  left: 'left',\n  topStart: 'top-start',\n  topEnd: 'top-end',\n  bottomStart: 'bottom-start',\n  bottomEnd: 'bottom-end',\n  rightStart: 'right-start',\n  rightEnd: 'right-end',\n  leftStart: 'left-start',\n  leftEnd: 'left-end',\n} as const;\n","import { isNotUndefined } from 'ramda-adjunct';\nimport { PopperProps, usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\nimport { Options as ArrowOptions } from '@popperjs/core/lib/modifiers/arrow';\nimport { useTheme } from 'styled-components';\n\ntype UsePopup<\n  Trigger extends PopperProps<null>['referenceElement'] = HTMLElement,\n  Pane extends HTMLElement | null = HTMLElement,\n  Arrow extends ArrowOptions['element'] = undefined,\n> = (config: {\n  triggerEl: Trigger;\n  paneEl: Pane;\n  arrowEl?: Arrow;\n  placement?: Placement;\n}) => ReturnType<typeof usePopper>;\n\nexport const usePopup: UsePopup = ({\n  triggerEl,\n  paneEl,\n  arrowEl,\n  placement = 'bottom-start',\n}) => {\n  const { space } = useTheme();\n  const arrowMod = isNotUndefined(arrowEl)\n    ? [{ name: 'arrow', options: { element: arrowEl } }]\n    : [];\n  return usePopper(triggerEl, paneEl, {\n    placement,\n    modifiers: [\n      ...arrowMod,\n      {\n        name: 'offset',\n        options: {\n          offset: [0, space.sm],\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          padding: space.sm,\n        },\n      },\n    ],\n  });\n};\n","import { FC, ReactNode, useContext } from 'react';\nimport { noop } from 'ramda-adjunct';\nimport useCoolPortal, { OnHide, OnShow, RCPF } from 'react-cool-portal';\n\nimport { DSContext } from '../theme/DSProvider/DSProvider';\n\ntype UsePortal = (config?: {\n  onShow?: OnShow;\n  onHide?: OnHide;\n  hasInternalShowHide?: boolean;\n  defaultIsPortalVisible?: boolean;\n}) => {\n  togglePortal: RCPF;\n  showPortal: RCPF;\n  hidePortal: RCPF;\n  isPortalVisible: boolean;\n  Portal: FC<{ children: ReactNode }>;\n};\n\nexport const usePortal: UsePortal = ({\n  onShow = noop,\n  onHide = noop,\n  hasInternalShowHide = false,\n  defaultIsPortalVisible = false,\n} = {}) => {\n  const { portalsContainerId } = useContext(DSContext);\n  const { Portal, isShow, show, hide, toggle } = useCoolPortal({\n    containerId: portalsContainerId,\n    autoRemoveContainer: false,\n    defaultShow: defaultIsPortalVisible,\n    internalShowHide: hasInternalShowHide,\n    onShow,\n    onHide,\n  });\n\n  return {\n    togglePortal: toggle,\n    showPortal: show,\n    hidePortal: hide,\n    isPortalVisible: isShow,\n    Portal,\n  };\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { noop } from 'ramda-adjunct';\n\nimport { getColor, getDepth, getRadii, getSpace, pxToRem } from '../../utils';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { SpaceSizes } from '../../theme';\nimport { useOuterClick } from '../../hooks/useOuterCallback';\nimport { Padbox } from '../layout';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { DropdownPaneProps, DropdownPaneStyles } from './Dropdown.types';\nimport { useFloatingContext } from '../../contexts/FloatingContext';\n\nexport const Arrow = styled.div`\n  visibility: hidden;\n\n  &,\n  &::before {\n    position: absolute;\n    width: ${getSpace(SpaceSizes.sm)};\n    height: ${getSpace(SpaceSizes.sm)};\n    background: inherit;\n    z-index: 0;\n  }\n\n  &::before {\n    visibility: visible;\n    content: '';\n    background: ${getColor('neutral.0')};\n    border-left: 1px solid ${getColor('neutral.300')};\n    border-top: 1px solid ${getColor('neutral.300')};\n  }\n`;\n\nexport const StyledDropdownPane = styled.div<DropdownPaneStyles>`\n  position: absolute;\n  color: ${getColor('neutral.900')};\n  font-family: var(--sscds-font-family-body);\n  font-size: var(--sscds-font-size-body-md);\n  line-height: var(--sscds-font-lineheight-body-md);\n  border-radius: ${getRadii('default')};\n  border: 1px solid ${getColor('neutral.300')};\n  z-index: ${({ $isInFloatingElement, theme }) =>\n    $isInFloatingElement\n      ? getDepth('modal', { theme }) + 1\n      : getDepth('dropdown', { theme })};\n  ${({ $maxWidth }) => css`\n    width: ${$maxWidth === 'auto' ? 'auto' : '100%'};\n    max-width: ${$maxWidth === 'auto' ? 'auto' : pxToRem($maxWidth)};\n  `}\n\n  &[data-popper-placement^='top'] > ${/* sc-selector */ Arrow} {\n    bottom: ${({ theme }) =>\n      `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(225deg);\n    }\n  }\n  &[data-popper-placement^='bottom'] > ${/* sc-selector */ Arrow} {\n    top: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(45deg);\n    }\n  }\n  &[data-popper-placement^='left'] > ${/* sc-selector */ Arrow} {\n    right: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(135deg);\n    }\n  }\n  &[data-popper-placement^='right'] > ${/* sc-selector */ Arrow} {\n    left: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(315deg);\n    }\n  }\n\n  ${({ $isElevated }) =>\n    $isElevated &&\n    css`\n      border-color: transparent;\n      filter: drop-shadow(0px 0px 8px rgba(0, 0, 0, 0.25));\n\n      & > ${/* sc-selector */ Arrow}:before {\n        border-color: transparent;\n      }\n    `};\n`;\n\nconst PaneContent = styled(Padbox)`\n  border-radius: ${getRadii('default')};\n  position: relative;\n  z-index: 1;\n  background: ${getColor('neutral.0')};\n`;\n\nconst DropdownPane = forwardRef<HTMLDivElement, DropdownPaneProps>(\n  (\n    {\n      children,\n      onClickOut = noop,\n      isElevated,\n      hasArrow,\n      arrowRef,\n      arrowStyles,\n      contentPaddingSize,\n      contentPaddingType,\n      maxWidth,\n      ...props\n    },\n    ref,\n  ) => {\n    const dropdownPaneRef = useOuterClick<HTMLDivElement>(onClickOut);\n    const isInFloatingElement = useFloatingContext() ?? false;\n    return (\n      <StyledDropdownPane\n        ref={mergeRefs<HTMLDivElement>(dropdownPaneRef, ref)}\n        $isElevated={isElevated}\n        $isInFloatingElement={isInFloatingElement}\n        $maxWidth={maxWidth}\n        {...props}\n        data-testid=\"dropdown-pane\"\n      >\n        <PaneContent\n          paddingSize={contentPaddingSize}\n          paddingType={contentPaddingType}\n        >\n          {children}\n        </PaneContent>\n        {hasArrow && <Arrow ref={arrowRef} style={arrowStyles} />}\n      </StyledDropdownPane>\n    );\n  },\n);\n\nDropdownPane.propTypes = {\n  isElevated: PropTypes.bool.isRequired,\n  maxWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.oneOf<'auto'>(['auto']),\n  ]).isRequired,\n  hasArrow: PropTypes.bool.isRequired,\n  arrowRef: PropTypes.func.isRequired,\n  arrowStyles: PropTypes.shape({}),\n  contentPaddingSize: PropTypes.oneOf(Object.values(SpaceSizes)),\n  contentPaddingType: PropTypes.oneOf(Object.values(PaddingTypes)),\n  onClickOut: PropTypes.func,\n};\n\nexport default DropdownPane;\n","import { useEffect } from 'react';\n\nimport { InteractiveElement } from '../components/Dropdown/Dropdown.types';\n\nconst interactiveElSelector = `\n    a[href],\n    button,\n    input,\n    textarea,\n    select,\n    details\n`;\n\nexport const useFocusTrap = ({\n  el,\n  enabled,\n}: {\n  el: HTMLElement;\n  enabled: boolean;\n}) => {\n  useEffect(() => {\n    if (!el || !enabled) return;\n    const active = document.activeElement;\n    const handleKeydown = (e) => {\n      setTimeout(() => {\n        if (e.key === 'Tab' && !el.contains(document.activeElement)) {\n          e.preventDefault();\n          const focusableChild = el?.querySelector<InteractiveElement>(\n            interactiveElSelector,\n          );\n          focusableChild?.focus();\n        }\n      }, 0);\n    };\n    document.addEventListener('keydown', handleKeydown);\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n      (active as InteractiveElement)?.focus();\n    };\n  }, [el, enabled]);\n};\n","import React, { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SpaceSizes } from '../../theme';\nimport { usePopup } from '../../hooks/usePopup';\nimport { usePortal } from '../../hooks/usePortal';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { ControlledDropdownProps } from './Dropdown.types';\nimport DropdownPane from './DropdownPane';\nimport { DropdownPlacements } from './Dropdown.enums';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { useFocusTrap } from '../../hooks/useFocusTrap';\n\nconst ControlledDropdown = forwardRef<\n  HTMLDivElement,\n  ControlledDropdownProps & React.HTMLAttributes<HTMLDivElement>\n>(\n  (\n    {\n      children,\n      triggerEl,\n      isOpen,\n      placement = DropdownPlacements.bottomStart,\n      innerPaddingSize = SpaceSizes.md,\n      innerPaddingType = PaddingTypes.square,\n      maxPaneWidth = 270,\n      isPaneElevated = false,\n      hasPaneArrow = false,\n      focusTrap = true,\n      onClickOut,\n      style = {},\n      ...props\n    },\n    ref,\n  ) => {\n    const [paneEl, setPaneEl] = useState(null);\n    const [arrowEl, setArrowEl] = useState(null);\n    const { styles, attributes } = usePopup({\n      triggerEl,\n      paneEl,\n      arrowEl,\n      placement,\n    });\n\n    useFocusTrap({ el: paneEl, enabled: isOpen && focusTrap });\n    const { Portal } = usePortal();\n\n    return isOpen ? (\n      <Portal>\n        <DropdownPane\n          ref={mergeRefs(ref, setPaneEl)}\n          arrowRef={setArrowEl}\n          arrowStyles={styles.arrow}\n          contentPaddingSize={innerPaddingSize}\n          contentPaddingType={innerPaddingType}\n          hasArrow={hasPaneArrow}\n          isElevated={isPaneElevated}\n          maxWidth={maxPaneWidth}\n          style={{ ...styles.popper, ...style }}\n          onClickOut={onClickOut}\n          {...props}\n          {...attributes.popper}\n        >\n          {children}\n        </DropdownPane>\n      </Portal>\n    ) : null;\n  },\n);\n\nControlledDropdown.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  triggerEl:\n    typeof Element === 'undefined'\n      ? PropTypes.any\n      : PropTypes.instanceOf(HTMLElement),\n  placement: PropTypes.oneOf(Object.values(DropdownPlacements)),\n  innerPaddingSize: PropTypes.oneOf(Object.values(SpaceSizes)),\n  innerPaddingType: PropTypes.oneOf(Object.values(PaddingTypes)),\n  maxPaneWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.oneOf<'auto'>(['auto']),\n  ]),\n  isPaneElevated: PropTypes.bool,\n  hasPaneArrow: PropTypes.bool,\n  onClickOut: PropTypes.func,\n};\n\nexport default ControlledDropdown;\n"],"names":["bottomEnd","DropdownTriggerEvents","click","hover","focus","DropdownPlacements","cov_18d9yy5bso","s","autoStart","autoEnd","top","bottom","right","left","topStart","topEnd","bottomStart","rightStart","rightEnd","leftStart","leftEnd","cov_100grxi1l7","path","hash","global","gcv","coverageData","coverage","actualCoverage","triggerEl","usePopup","usePopper","placement","modifiers","b","options","offset","space","arrowMod","isNotUndefined","arrowEl","name","element","paneEl","cov_ice7s1srg","usePortal","onShow","portalsContainerId","noop","hasInternalShowHide","defaultIsPortalVisible","onHide","Portal","isShow","show","hide","toggle","useCoolPortal","containerId","togglePortal","showPortal","hidePortal","isPortalVisible","cov_ny1ninhix","Arrow","styled","div","withConfig","displayName","componentId","getSpace","SpaceSizes","sm","getColor","StyledDropdownPane","theme","$isInFloatingElement","f","getDepth","$maxWidth","css","pxToRem","$isElevated","hasArrow","contentPaddingType","PaneContent","Padbox","getRadii","isRequired","isElevated","arrowRef","arrowStyles","contentPaddingSize","focusableChild","interactiveElSelector","cov_2f2fih4rpl","useEffect","useFocusTrap","el","enabled","e","preventDefault","activeElement","handleKeydown","setTimeout","key","contains","document","addEventListener","querySelector","removeEventListener","cov_vgcvjm7zq","children","square","isOpen","innerPaddingSize","md","onClickOut","maxPaneWidth","isPaneElevated","hasPaneArrow","focusTrap","style","styles","ref","bool"],"mappings":"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KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,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AA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,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,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA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"}
{"version":3,"file":"renderers.stories-BqzyRa2N.js","sources":["../../../src/components/_internal/BaseTable/renderers/renderers.stories.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { Row } from 'react-table';\nimport { MemoryRouter } from 'react-router-dom';\nimport { equals, F as stubFalse } from 'ramda';\nimport { action } from '@storybook/addon-actions';\n\nimport { composeQuery } from '../mocks/columns';\nimport { BaseTableContainer, StyledBaseTable } from '../BaseTable.styles';\nimport CellRenderer from './CellRenderer';\nimport { CellRendererProps } from './renderers.types';\nimport { CellTypes } from './renderers.enums';\nimport { abbreviateNumber } from '../../../../utils';\n\nexport default {\n  title: 'components/Datatable/internalComponents/Table/renderers',\n  component: CellRenderer,\n  decorators: [\n    (storyFn) => (\n      <MemoryRouter>\n        <div style={{ width: '400px', margin: '0 auto' }}>\n          <BaseTableContainer tabIndex={0}>\n            <StyledBaseTable>\n              <tbody>\n                <tr>\n                  <td className=\"ds-table-cell\">{storyFn()}</td>\n                </tr>\n              </tbody>\n            </StyledBaseTable>\n          </BaseTableContainer>\n        </div>\n      </MemoryRouter>\n    ),\n  ],\n  parameters: {\n    viewMode: 'story',\n    docs: { disable: true },\n    previewTabs: { 'storybook/docs/panel': { hidden: true } },\n  },\n} as Meta;\n\ntype CellRendererData = {\n  column1: string;\n  column2: string[];\n};\n\nconst LinkComponent = ({\n  to,\n  children,\n  className,\n}: {\n  to: string;\n  className: string;\n  children: ReactNode;\n}) => (\n  <a className={className} href={to}>\n    {children}\n  </a>\n);\nLinkComponent.propTypes = {\n  to: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\ntype Story = StoryFn<CellRendererProps<CellRendererData>>;\n\n/**\n *  DEFAULT RENDERER\n */\nexport const Default: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDefault.args = {\n  value: 'value',\n  column: {\n    cellType: CellTypes.text,\n    nullCondition: stubFalse,\n  },\n  row: {\n    original: { column1: 'value', column2: ['value1', 'value2'] },\n  } as Row<CellRendererData>,\n};\n\nexport const WithNullValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nWithNullValue.args = {\n  ...Default.args,\n  value: 'unknown',\n  column: {\n    ...Default.args.column,\n    nullCondition: equals('unknown'),\n  },\n};\n\nexport const WithCustomNullValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nWithCustomNullValue.args = {\n  ...WithNullValue.args,\n  column: {\n    ...WithNullValue.args.column,\n    nullConditionValue: 'NaN',\n  },\n};\n\nexport const NullValueWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nNullValueWithTooltip.args = {\n  ...WithCustomNullValue.args,\n  column: {\n    ...WithCustomNullValue.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\n\n/**\n *  TEXT RENDERER\n */\nexport const TextWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nTextWithTooltip.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const TextWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nTextWithCustomFormatter.args = {\n  ...Default.args,\n  value: 123456789,\n  column: {\n    ...Default.args.column,\n    cellFormatter: abbreviateNumber,\n  },\n};\n\n/**\n *  MULTIVALUE RENDERER\n */\nexport const MultiValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValue.args = {\n  ...Default.args,\n  value: ['value1', 'value2', 'value3', 'value4', 'value5'],\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.multiValue,\n  },\n};\nexport const MultiValueWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithOnClick.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const MultiValueWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithAbsoluteLink.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const MultiValueWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithRelativeLink.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const MultiValueWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithTooltip.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Pill value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const MultiValueWithDisabledDisplayLimit: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithDisabledDisplayLimit.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    multiValueDisplayLimit: 0,\n  },\n};\nexport const MultiValueWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithCustomFormatter.args = {\n  ...MultiValue.args,\n  value: [1235678, 987654, 654213],\n  column: {\n    ...MultiValue.args.column,\n    cellFormatter: abbreviateNumber,\n  },\n};\n\n/**\n *  LINK RENDERER\n */\nexport const LinkWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithOnClick.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.link,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const LinkWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithAbsoluteLink.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const LinkWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithRelativeLink.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const LinkWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithTooltip.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const LinkWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithCustomFormatter.args = {\n  ...LinkWithOnClick.args,\n  value: 123456789,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellFormatter: abbreviateNumber,\n  },\n};\n\n/**\n *  DISCRETE LINK RENDERER\n */\nexport const DiscreteLinkWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithOnClick.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.discreteLink,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const DiscreteLinkWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithAbsoluteLink.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const DiscreteLinkWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithRelativeLink.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const DiscreteLinkWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithTooltip.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const DiscreteLinkWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithCustomFormatter.args = {\n  ...DiscreteLinkWithOnClick.args,\n  value: 123456789,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellFormatter: abbreviateNumber,\n  },\n};\n"],"names":["component","renderers_stories","decorators","CellRenderer","width","margin","MemoryRouter","jsx","BaseTableContainer","StyledBaseTable","storyFn","parameters","viewMode","disable","previewTabs","hidden","LinkComponent","to","children","className","PropTypes","string","value","Default","args","column","nullCondition","row","original","CellTypes","text","column1","stubFalse","column2","Row","CellRendererData","WithNullValue","equals","nullConditionValue","WithCustomNullValue","cellTooltipPopupComposer","NullValueWithTooltip","val","JSON","stringify","TextWithTooltip","Story","cellFormatter","abbreviateNumber","TextWithCustomFormatter","multiValue","MultiValue","MultiValueWithAbsoluteLink","cellHrefComposer","cellType","MultiValueWithOnClick","cellToComposer","cellLinkComponent","action","composeQuery","MultiValueWithDisabledDisplayLimit","multiValueDisplayLimit","MultiValueWithTooltip","LinkWithAbsoluteLink","LinkWithRelativeLink","LinkWithOnClick","link","DiscreteLinkWithOnClick","LinkWithTooltip","LinkWithCustomFormatter"],"mappings":"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"}
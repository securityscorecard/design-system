{"version":3,"file":"ControlledDropdown-CThOzJqs.js","sources":["../../src/components/Dropdown/Dropdown.enums.ts","../../src/hooks/usePopup.ts","../../src/hooks/usePortal.ts","../../src/components/Dropdown/DropdownPane.tsx","../../src/hooks/useFocusTrap.ts","../../src/components/Dropdown/ControlledDropdown.tsx"],"sourcesContent":["export const DropdownTriggerEvents = {\n  click: 'click',\n  hover: 'hover',\n  focus: 'focus',\n} as const;\n\nexport const DropdownPlacements = {\n  auto: 'auto',\n  autoStart: 'auto-start',\n  autoEnd: 'auto-end',\n  top: 'top',\n  bottom: 'bottom',\n  right: 'right',\n  left: 'left',\n  topStart: 'top-start',\n  topEnd: 'top-end',\n  bottomStart: 'bottom-start',\n  bottomEnd: 'bottom-end',\n  rightStart: 'right-start',\n  rightEnd: 'right-end',\n  leftStart: 'left-start',\n  leftEnd: 'left-end',\n} as const;\n","import { isNotUndefined } from 'ramda-adjunct';\nimport { PopperProps, usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\nimport { Options as ArrowOptions } from '@popperjs/core/lib/modifiers/arrow';\nimport { useTheme } from 'styled-components';\n\ntype UsePopup<\n  Trigger extends PopperProps<null>['referenceElement'] = HTMLElement,\n  Pane extends HTMLElement | null = HTMLElement,\n  Arrow extends ArrowOptions['element'] = undefined,\n> = (config: {\n  triggerEl: Trigger;\n  paneEl: Pane;\n  arrowEl?: Arrow;\n  placement?: Placement;\n}) => ReturnType<typeof usePopper>;\n\nexport const usePopup: UsePopup = ({\n  triggerEl,\n  paneEl,\n  arrowEl,\n  placement = 'bottom-start',\n}) => {\n  const { space } = useTheme();\n  const arrowMod = isNotUndefined(arrowEl)\n    ? [{ name: 'arrow', options: { element: arrowEl } }]\n    : [];\n  return usePopper(triggerEl, paneEl, {\n    placement,\n    modifiers: [\n      ...arrowMod,\n      {\n        name: 'offset',\n        options: {\n          offset: [0, space.sm],\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          padding: space.sm,\n        },\n      },\n    ],\n  });\n};\n","import { FC, ReactNode, useContext } from 'react';\nimport { noop } from 'ramda-adjunct';\nimport useCoolPortal, { OnHide, OnShow, RCPF } from 'react-cool-portal';\n\nimport { DSContext } from '../theme/DSProvider/DSProvider';\n\ntype UsePortal = (config?: {\n  onShow?: OnShow;\n  onHide?: OnHide;\n  hasInternalShowHide?: boolean;\n  defaultIsPortalVisible?: boolean;\n}) => {\n  togglePortal: RCPF;\n  showPortal: RCPF;\n  hidePortal: RCPF;\n  isPortalVisible: boolean;\n  Portal: FC<{ children: ReactNode }>;\n};\n\nexport const usePortal: UsePortal = ({\n  onShow = noop,\n  onHide = noop,\n  hasInternalShowHide = false,\n  defaultIsPortalVisible = false,\n} = {}) => {\n  const { portalsContainerId } = useContext(DSContext);\n  const { Portal, isShow, show, hide, toggle } = useCoolPortal({\n    containerId: portalsContainerId,\n    autoRemoveContainer: false,\n    defaultShow: defaultIsPortalVisible,\n    internalShowHide: hasInternalShowHide,\n    onShow,\n    onHide,\n  });\n\n  return {\n    togglePortal: toggle,\n    showPortal: show,\n    hidePortal: hide,\n    isPortalVisible: isShow,\n    Portal,\n  };\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { noop } from 'ramda-adjunct';\n\nimport { getColor, getDepth, getRadii, getSpace, pxToRem } from '../../utils';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { SpaceSizes } from '../../theme';\nimport { useOuterClick } from '../../hooks/useOuterCallback';\nimport { Padbox } from '../layout';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { DropdownPaneProps, DropdownPaneStyles } from './Dropdown.types';\nimport { useFloatingContext } from '../../contexts/FloatingContext';\n\nexport const Arrow = styled.div`\n  visibility: hidden;\n\n  &,\n  &::before {\n    position: absolute;\n    width: ${getSpace(SpaceSizes.sm)};\n    height: ${getSpace(SpaceSizes.sm)};\n    background: inherit;\n    z-index: 0;\n  }\n\n  &::before {\n    visibility: visible;\n    content: '';\n    background: ${getColor('neutral.0')};\n    border-left: 1px solid ${getColor('neutral.300')};\n    border-top: 1px solid ${getColor('neutral.300')};\n  }\n`;\n\nexport const StyledDropdownPane = styled.div<DropdownPaneStyles>`\n  position: absolute;\n  color: ${getColor('neutral.900')};\n  font-family: var(--sscds-font-family-body);\n  font-size: var(--sscds-font-size-body-md);\n  line-height: var(--sscds-font-lineheight-body-md);\n  border-radius: ${getRadii('default')};\n  border: 1px solid ${getColor('neutral.300')};\n  z-index: ${({ $isInFloatingElement, theme }) =>\n    $isInFloatingElement\n      ? getDepth('modal', { theme }) + 1\n      : getDepth('dropdown', { theme })};\n  ${({ $maxWidth }) => css`\n    width: ${$maxWidth === 'auto' ? 'auto' : '100%'};\n    max-width: ${$maxWidth === 'auto' ? 'auto' : pxToRem($maxWidth)};\n  `}\n\n  &[data-popper-placement^='top'] > ${/* sc-selector */ Arrow} {\n    bottom: ${({ theme }) =>\n      `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(225deg);\n    }\n  }\n  &[data-popper-placement^='bottom'] > ${/* sc-selector */ Arrow} {\n    top: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(45deg);\n    }\n  }\n  &[data-popper-placement^='left'] > ${/* sc-selector */ Arrow} {\n    right: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(135deg);\n    }\n  }\n  &[data-popper-placement^='right'] > ${/* sc-selector */ Arrow} {\n    left: ${({ theme }) => `calc(${getSpace(SpaceSizes.sm, { theme })} / -2)`};\n    &:before {\n      transform: rotate(315deg);\n    }\n  }\n\n  ${({ $isElevated }) =>\n    $isElevated &&\n    css`\n      border-color: transparent;\n      filter: drop-shadow(0px 0px 8px rgba(0, 0, 0, 0.25));\n\n      & > ${/* sc-selector */ Arrow}:before {\n        border-color: transparent;\n      }\n    `};\n`;\n\nconst PaneContent = styled(Padbox)`\n  border-radius: ${getRadii('default')};\n  position: relative;\n  z-index: 1;\n  background: ${getColor('neutral.0')};\n`;\n\nconst DropdownPane = forwardRef<HTMLDivElement, DropdownPaneProps>(\n  (\n    {\n      children,\n      onClickOut = noop,\n      isElevated,\n      hasArrow,\n      arrowRef,\n      arrowStyles,\n      contentPaddingSize,\n      contentPaddingType,\n      maxWidth,\n      ...props\n    },\n    ref,\n  ) => {\n    const dropdownPaneRef = useOuterClick<HTMLDivElement>(onClickOut);\n    const isInFloatingElement = useFloatingContext() ?? false;\n    return (\n      <StyledDropdownPane\n        ref={mergeRefs<HTMLDivElement>(dropdownPaneRef, ref)}\n        $isElevated={isElevated}\n        $isInFloatingElement={isInFloatingElement}\n        $maxWidth={maxWidth}\n        {...props}\n        data-testid=\"dropdown-pane\"\n      >\n        <PaneContent\n          paddingSize={contentPaddingSize}\n          paddingType={contentPaddingType}\n        >\n          {children}\n        </PaneContent>\n        {hasArrow && <Arrow ref={arrowRef} style={arrowStyles} />}\n      </StyledDropdownPane>\n    );\n  },\n);\n\nDropdownPane.propTypes = {\n  isElevated: PropTypes.bool.isRequired,\n  maxWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.oneOf<'auto'>(['auto']),\n  ]).isRequired,\n  hasArrow: PropTypes.bool.isRequired,\n  arrowRef: PropTypes.func.isRequired,\n  arrowStyles: PropTypes.shape({}),\n  contentPaddingSize: PropTypes.oneOf(Object.values(SpaceSizes)),\n  contentPaddingType: PropTypes.oneOf(Object.values(PaddingTypes)),\n  onClickOut: PropTypes.func,\n};\n\nexport default DropdownPane;\n","import { useEffect } from 'react';\n\nimport { InteractiveElement } from '../components/Dropdown/Dropdown.types';\n\nconst interactiveElSelector = `\n    a[href],\n    button,\n    input,\n    textarea,\n    select,\n    details\n`;\n\nexport const useFocusTrap = ({\n  el,\n  enabled,\n}: {\n  el: HTMLElement;\n  enabled: boolean;\n}) => {\n  useEffect(() => {\n    if (!el || !enabled) return;\n    const active = document.activeElement;\n    const handleKeydown = (e) => {\n      setTimeout(() => {\n        if (e.key === 'Tab' && !el.contains(document.activeElement)) {\n          e.preventDefault();\n          const focusableChild = el?.querySelector<InteractiveElement>(\n            interactiveElSelector,\n          );\n          focusableChild?.focus();\n        }\n      }, 0);\n    };\n    document.addEventListener('keydown', handleKeydown);\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n      (active as InteractiveElement)?.focus();\n    };\n  }, [el, enabled]);\n};\n","import React, { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SpaceSizes } from '../../theme';\nimport { usePopup } from '../../hooks/usePopup';\nimport { usePortal } from '../../hooks/usePortal';\nimport { PaddingTypes } from '../layout/Padbox/Padbox.enums';\nimport { ControlledDropdownProps } from './Dropdown.types';\nimport DropdownPane from './DropdownPane';\nimport { DropdownPlacements } from './Dropdown.enums';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { useFocusTrap } from '../../hooks/useFocusTrap';\n\nconst ControlledDropdown = forwardRef<\n  HTMLDivElement,\n  ControlledDropdownProps & React.HTMLAttributes<HTMLDivElement>\n>(\n  (\n    {\n      children,\n      triggerEl,\n      isOpen,\n      placement = DropdownPlacements.bottomStart,\n      innerPaddingSize = SpaceSizes.md,\n      innerPaddingType = PaddingTypes.square,\n      maxPaneWidth = 270,\n      isPaneElevated = false,\n      hasPaneArrow = false,\n      focusTrap = true,\n      onClickOut,\n      style = {},\n      ...props\n    },\n    ref,\n  ) => {\n    const [paneEl, setPaneEl] = useState(null);\n    const [arrowEl, setArrowEl] = useState(null);\n    const { styles, attributes } = usePopup({\n      triggerEl,\n      paneEl,\n      arrowEl,\n      placement,\n    });\n\n    useFocusTrap({ el: paneEl, enabled: isOpen && focusTrap });\n    const { Portal } = usePortal();\n\n    return isOpen ? (\n      <Portal>\n        <DropdownPane\n          ref={mergeRefs(ref, setPaneEl)}\n          arrowRef={setArrowEl}\n          arrowStyles={styles.arrow}\n          contentPaddingSize={innerPaddingSize}\n          contentPaddingType={innerPaddingType}\n          hasArrow={hasPaneArrow}\n          isElevated={isPaneElevated}\n          maxWidth={maxPaneWidth}\n          style={{ ...styles.popper, ...style }}\n          onClickOut={onClickOut}\n          {...props}\n          {...attributes.popper}\n        >\n          {children}\n        </DropdownPane>\n      </Portal>\n    ) : null;\n  },\n);\n\nControlledDropdown.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  triggerEl:\n    typeof Element === 'undefined'\n      ? PropTypes.any\n      : PropTypes.instanceOf(HTMLElement),\n  placement: PropTypes.oneOf(Object.values(DropdownPlacements)),\n  innerPaddingSize: PropTypes.oneOf(Object.values(SpaceSizes)),\n  innerPaddingType: PropTypes.oneOf(Object.values(PaddingTypes)),\n  maxPaneWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.oneOf<'auto'>(['auto']),\n  ]),\n  isPaneElevated: PropTypes.bool,\n  hasPaneArrow: PropTypes.bool,\n  onClickOut: PropTypes.func,\n};\n\nexport default ControlledDropdown;\n"],"names":["bottomEnd","DropdownTriggerEvents","click","hover","focus","DropdownPlacements","cov_1ryjm3bumd","s","autoStart","autoEnd","top","bottom","right","left","topStart","topEnd","bottomStart","rightStart","rightEnd","leftStart","leftEnd","cov_1llxmkfwfl","path","hash","global","gcv","coverageData","coverage","actualCoverage","triggerEl","usePopup","usePopper","placement","modifiers","b","options","offset","space","arrowMod","isNotUndefined","arrowEl","name","element","paneEl","cov_2a6n4n2w3","usePortal","onShow","portalsContainerId","noop","hasInternalShowHide","defaultIsPortalVisible","onHide","Portal","isShow","show","hide","toggle","useCoolPortal","containerId","togglePortal","showPortal","hidePortal","isPortalVisible","cov_697ugek0d","Arrow","styled","div","withConfig","displayName","componentId","getSpace","SpaceSizes","sm","getDepth","theme","getColor","StyledDropdownPane","getRadii","f","$isInFloatingElement","$maxWidth","pxToRem","css","isElevated","hasArrow","arrowRef","maxWidth","dropdownPaneRef","PaneContent","Padbox","PropTypes","DropdownPane","focusableChild","interactiveElSelector","cov_ysgqdk1mf","useEffect","useFocusTrap","el","enabled","e","preventDefault","activeElement","handleKeydown","setTimeout","key","contains","document","addEventListener","querySelector","removeEventListener","onClickOut","children","innerPaddingType","isOpen","md","props","maxPaneWidth","cov_2mvj2nbm11","isPaneElevated","hasPaneArrow","focusTrap","styles","attributes","setArrowEl","useState","popper","jsx","ControlledDropdown","ref","setPaneEl","bool","arrow","values","oneOf"],"mappings":"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KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,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AA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GA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,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,O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AA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAA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"}
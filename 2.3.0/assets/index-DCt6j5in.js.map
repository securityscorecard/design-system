{"version":3,"file":"index-DCt6j5in.js","sources":["../../src/components/_internal/BaseToastBanner/BaseToastBanner.enums.ts","../../src/components/_internal/BaseToastBanner/BaseToastBanner.tsx"],"sourcesContent":["export const BaseToastBannerVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n  loading: 'loading',\n} as const;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { isNotNilOrEmpty } from 'ramda-adjunct';\n\nimport { BaseToastBannerVariants } from './BaseToastBanner.enums';\nimport { IconTypes, SSCIconNames } from '../../../theme/icons/icons.enums';\nimport { getColor, pxToRem } from '../../../utils';\nimport { ColorTypes } from '../../../theme/colors.enums';\nimport { Padbox } from '../../layout/Padbox';\nimport { Inline } from '../../layout/Inline';\nimport { Icon } from '../../Icon';\nimport {\n  BaseToastBannerProps,\n  BaseToastBannerWrapperProps,\n} from './BaseToastBanner.types';\nimport { Spinner } from '../../Spinner';\n\nexport const baseToastBannerColorVariants = {\n  [BaseToastBannerVariants.info]: ColorTypes.info50,\n  [BaseToastBannerVariants.warn]: ColorTypes.warning50,\n  [BaseToastBannerVariants.error]: ColorTypes.error50,\n  [BaseToastBannerVariants.success]: ColorTypes.success50,\n  [BaseToastBannerVariants.loading]: ColorTypes.neutral200,\n};\n\nconst iconVariants = {\n  [BaseToastBannerVariants.info]: SSCIconNames.infoCircle,\n  [BaseToastBannerVariants.warn]: SSCIconNames.errorCircle,\n  [BaseToastBannerVariants.error]: SSCIconNames.exclTriangleSolid,\n  [BaseToastBannerVariants.success]: SSCIconNames.check,\n  [BaseToastBannerVariants.loading]: null,\n};\n\nconst iconColorVariants = {\n  [BaseToastBannerVariants.info]: ColorTypes.info500,\n  [BaseToastBannerVariants.warn]: ColorTypes.warning500,\n  [BaseToastBannerVariants.error]: ColorTypes.error500,\n  [BaseToastBannerVariants.success]: ColorTypes.success500,\n};\n\nconst IconPadbox = styled(Padbox)<{\n  $variant?: BaseToastBannerProps['variant'];\n  $iconAlign: string;\n}>`\n  background-color: ${({ $variant }) =>\n    getColor(baseToastBannerColorVariants[$variant])};\n  display: flex;\n  align-items: ${({ $iconAlign }) => $iconAlign || 'center'};\n`;\n\nconst IconWrapper = styled.div<{\n  $iconSize: number;\n}>`\n  display: flex;\n  align-items: center;\n  width: ${({ $iconSize }) => pxToRem($iconSize)};\n  height: ${({ $iconSize }) => pxToRem($iconSize)};\n`;\n\nconst StyledIcon = styled(Icon)<{\n  $variant?: BaseToastBannerWrapperProps['variant'];\n  $iconPxSizesVariants: BaseToastBannerWrapperProps['iconPxSizesVariants'];\n}>`\n  color: ${({ $variant }) => getColor(iconColorVariants[$variant])};\n  font-size: ${({ $variant, $iconPxSizesVariants }) =>\n    pxToRem($iconPxSizesVariants[$variant])};\n`;\n\nconst BaseToastBanner = ({\n  children,\n  variant,\n  paddingSize,\n  paddingType,\n  stretch,\n  iconSize,\n  iconPxSizesVariants,\n  iconAlign = 'center',\n}: BaseToastBannerWrapperProps) => (\n  <Inline stretch={stretch}>\n    {isNotNilOrEmpty(variant) && (\n      <IconPadbox\n        $iconAlign={iconAlign}\n        $variant={variant}\n        paddingSize={paddingSize}\n        paddingType={paddingType}\n      >\n        <IconWrapper $iconSize={iconSize}>\n          {variant === 'loading' ? (\n            <Spinner borderWidth={2} height={16} width={16} dark />\n          ) : (\n            <StyledIcon\n              $iconPxSizesVariants={iconPxSizesVariants}\n              $variant={variant}\n              name={iconVariants[variant]}\n              type={IconTypes.ssc}\n            />\n          )}\n        </IconWrapper>\n      </IconPadbox>\n    )}\n    {children}\n  </Inline>\n);\n\nexport default BaseToastBanner;\n"],"names":["BaseToastBannerVariants","info","warn","error","success","loading","baseToastBannerColorVariants","cov_1r9z8xvpmr","s","ColorTypes","info50","SSCIconNames","infoCircle","errorCircle","exclTriangleSolid","check","iconColorVariants","info500","warning500","error500","success500","$variant","$iconAlign","IconPadbox","styled","Padbox","withConfig","displayName","componentId","$iconSize","f","b","IconWrapper","div","$iconPxSizesVariants","pxToRem","paddingSize","iconPxSizesVariants","isNotNilOrEmpty","BaseToastBanner"],"mappings":"w7CAAaA,MAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAA0B,CACrCC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,QAAS,SACX,GCsBGL,SAAAA,GAAAA,CAAAA,IAAAA,EAAAA,2GAAAA,EAAAA,2CAAAA,EAAAA,OAAAA,EAAAA,eAAAA,EAAAA,CAAAA,KAAAA,2GAAAA,aAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CA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"}
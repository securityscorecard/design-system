{"version":3,"file":"index-CW5Yy7zc.js","sources":["../../src/components/_internal/BaseDateRangePicker/styles.ts","../../src/components/_internal/BaseDateRangePicker/BaseDateRangePicker.types.ts","../../src/components/_internal/BaseDateRangePicker/BaseDateRangePicker.tsx","../../src/components/_internal/BaseDateRangePicker/index.ts"],"sourcesContent":["import { css } from 'styled-components';\n\nimport { getColor } from '../../../utils';\n\nexport const dateRangePickerStyles = css`\n  .react-datepicker__day--in-selecting-range {\n    background-color: ${getColor('neutral.0')};\n    color: ${getColor('neutral.900')};\n  }\n  .react-datepicker__day--in-range {\n    background-color: ${getColor('primary.50')};\n    color: ${getColor('neutral.900')};\n    border-radius: 0;\n  }\n  .react-datepicker__day--selected,\n  .react-datepicker__day--range-start,\n  .react-datepicker__day--range-end,\n  .react-datepicker__day--selecting-range-start {\n    background-color: ${getColor('primary.500')};\n    font-weight: var(--sscds-font-weight-elementlabel-strong);\n    color: ${getColor('neutral.0')};\n  }\n  .react-datepicker__day--selected,\n  .react-datepicker__day--selecting-range-start {\n    border-radius: 4px;\n  }\n  .react-datepicker__day--range-start {\n    border-radius: 4px 0 0 4px;\n  }\n  .react-datepicker__day--range-end {\n    border-radius: 0 4px 4px 0;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nexport interface BaseDateRange {\n  startDate: Date | null;\n  endDate: Date | null;\n}\n\nexport interface BaseDateRangePlaceholderProps {\n  startDate: string;\n  endDate: string;\n}\n\nexport interface BaseDateRangePickerProps {\n  value: BaseDateRange;\n  onChange: (value: BaseDateRange) => void;\n  minDate: Date;\n  maxDate: Date;\n  placeholder?: BaseDateRangePlaceholderProps;\n}\n\nexport const BaseDateRangePlaceholderPropTypes = PropTypes.exact({\n  startDate: PropTypes.string,\n  endDate: PropTypes.string,\n});\n\nexport const BaseDateRangePickerPropTypes = PropTypes.exact({\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { any, prop } from 'ramda';\nimport { isNotNull } from 'ramda-adjunct';\n\nimport { dateRangePickerStyles } from './styles';\nimport {\n  BaseDateRangePickerPropTypes,\n  BaseDateRangePickerProps,\n  BaseDateRangePlaceholderPropTypes,\n} from './BaseDateRangePicker.types';\nimport { BaseSingleDatePicker } from '../BaseSingleDatePicker';\nimport { Inline } from '../../layout/Inline';\nimport { SpaceSizes } from '../../../theme/space.enums';\nimport { StretchEnum } from '../../layout/Inline/Inline.enums';\nimport { CLX_COMPONENT } from '../../../theme/constants';\n\nconst StyledDatePicker = styled.div`\n  ${dateRangePickerStyles}\n  width: 100%;\n`;\n\nconst isRangeDefined = any(isNotNull);\n\nconst BaseDateRangePicker = ({\n  value = { startDate: null, endDate: null },\n  onChange,\n  minDate,\n  maxDate,\n  placeholder,\n}: BaseDateRangePickerProps) => {\n  const { startDate, endDate } = value;\n  const startDatePlaceholder = prop('startDate', placeholder);\n  const endDatePlaceholder = prop('endDate', placeholder);\n\n  const handleStartDateChange = (newStartDate) => {\n    onChange(\n      isRangeDefined([newStartDate, endDate])\n        ? { startDate: newStartDate, endDate }\n        : undefined,\n    );\n  };\n\n  const handleEndDateChange = (newEndDate) => {\n    onChange(\n      isRangeDefined([startDate, newEndDate])\n        ? { startDate, endDate: newEndDate }\n        : undefined,\n    );\n  };\n\n  return (\n    <StyledDatePicker className={CLX_COMPONENT}>\n      <Inline gap={SpaceSizes.sm} stretch={StretchEnum.all}>\n        <BaseSingleDatePicker\n          endDate={endDate}\n          maxDate={maxDate}\n          minDate={minDate}\n          placeholder={startDatePlaceholder || 'Start date'}\n          startDate={startDate}\n          value={startDate}\n          onChange={handleStartDateChange}\n        />\n        <BaseSingleDatePicker\n          endDate={endDate}\n          maxDate={maxDate}\n          minDate={startDate || minDate}\n          placeholder={endDatePlaceholder || 'End date'}\n          startDate={startDate}\n          value={endDate}\n          onChange={handleEndDateChange}\n        />\n      </Inline>\n    </StyledDatePicker>\n  );\n};\n\nexport default BaseDateRangePicker;\n\nBaseDateRangePicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: BaseDateRangePickerPropTypes,\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  placeholder: BaseDateRangePlaceholderPropTypes,\n};\n","export { default as BaseDateRangePicker } from './BaseDateRangePicker';\nexport * from './BaseDateRangePicker.types';\n"],"names":["cov_1ykvzq15l1","actualCoverage","BaseDateRangePlaceholderPropTypes","PropTypes","exact","startDate","string","endDate","BaseDateRangePickerPropTypes","instanceOf","Date","cov_1w1ldfnoi6","path","hash","global","gcv","coverageData","coverage","StyledDatePicker","s","styled","div","withConfig","displayName","componentId","minDate","placeholder","value","b","onChange","startDatePlaceholder","f","endDatePlaceholder","prop","handleStartDateChange","newStartDate","isRangeDefined","handleEndDateChange","newEndDate","BaseDateRangePicker","stretch","StretchEnum","all","maxDate","cov_1zhpx363t6"],"mappings":"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"}
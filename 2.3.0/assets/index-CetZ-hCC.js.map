{"version":3,"file":"index-CetZ-hCC.js","sources":["../../src/components/Drawer/Drawer.enums.ts","../../src/components/Drawer/Drawer.tsx"],"sourcesContent":["export const DrawerSizes = {\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n} as const;\n","import { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport usePortal from 'react-cool-portal';\nimport styled, { css } from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { DrawerProps } from './Drawer.types';\nimport { DrawerSizes } from './Drawer.enums';\nimport { useLockBodyScroll } from '../../hooks/useLockBodyScroll';\nimport { useOuterClick } from '../../hooks/useOuterCallback';\nimport { Inline, Surface } from '../layout';\nimport { Overlay } from '../_internal/BaseOverlay';\nimport { pxToRem } from '../../utils';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { SpaceSizes } from '../../theme';\nimport { DSContext } from '../../theme/DSProvider/DSProvider';\nimport { CloseButton } from '../CloseButton';\nimport { StretchEnum } from '../layout/Inline/Inline.enums';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { FloatingProvider } from '../../contexts/FloatingContext';\nimport ElementLabel from '../ElementLabel/ElementLabel';\n\nconst widthVariants = {\n  [DrawerSizes.md]: 480,\n  [DrawerSizes.lg]: 720,\n  [DrawerSizes.xl]: 960,\n};\n\nconst Header = styled.div`\n  border-bottom: 1px solid var(--sscds-border-color);\n  padding-inline: var(--sscds-space-dialog-content-padding);\n  padding-block: calc(var(--sscds-space-dialog-content-padding) / 2);\n`;\n\nconst noBackdropStyle = css`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: var(--sscds-depth-modal);\n`;\n\nconst SurfaceContainer = styled.div<{\n  $maxWidth: number;\n  $hasBackdrop: boolean;\n}>`\n  height: calc(100% - var(--sscds-drawer-offset) * 2);\n  max-width: ${({ $maxWidth }) => pxToRem($maxWidth)};\n  margin: var(--sscds-drawer-offset);\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n\n  ${({ $hasBackdrop }) => !$hasBackdrop && noBackdropStyle};\n`;\n\nconst BaseDrawer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n`;\n\n/* stylelint-disable */\nconst Title = styled(ElementLabel)`\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n/* stylelint-enable */\n\nconst Content = styled.div`\n  overflow-y: auto;\n  flex-grow: 2;\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Footer = styled.div`\n  border-top: 1px solid var(--sscds-border-color);\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Adornment = styled.div`\n  max-width: ${pxToRem(36)};\n  max-height: ${pxToRem(36)};\n`;\n\nconst DrawerBox = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      size,\n      adornment,\n      children,\n      footer,\n      title,\n      onClose,\n      className,\n      hasBackdrop,\n      ...props\n    },\n    ref,\n  ) => {\n    const hasFooter = isNotUndefined(footer);\n    const hasAdornment = isNotUndefined(adornment);\n\n    return (\n      <SurfaceContainer\n        $hasBackdrop={hasBackdrop}\n        $maxWidth={widthVariants[size]}\n        role=\"dialog\"\n        style={{\n          '--sscds-drawer-offset': 'var(--sscds-space-6x)',\n        }}\n      >\n        <Surface\n          background=\"white\"\n          elevation={5}\n          radius=\"lg\"\n          style={{ display: 'flex', width: '100%' }}\n          hasBorder\n        >\n          <BaseDrawer\n            ref={ref}\n            aria-labelledby=\"ds-drawer-title\"\n            className={cls(CLX_COMPONENT, className)}\n            {...props}\n          >\n            <Header>\n              <Inline align=\"center\" stretch={StretchEnum.start}>\n                <Inline align=\"center\" gap={SpaceSizes.md}>\n                  {hasAdornment && <Adornment>{adornment}</Adornment>}\n                  <TitleWrapper>\n                    <Title id=\"ds-drawer-title\" size=\"md\">\n                      {title}\n                    </Title>\n                  </TitleWrapper>\n                </Inline>\n                <CloseButton\n                  marginCompensation={SpaceSizes.md}\n                  onClose={onClose}\n                />\n              </Inline>\n            </Header>\n            <Content>{children}</Content>\n            {hasFooter && <Footer>{footer}</Footer>}\n          </BaseDrawer>\n        </Surface>\n      </SurfaceContainer>\n    );\n  },\n);\n\nconst Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      title,\n      onClose,\n      footer,\n      size = DrawerSizes.md,\n      adornment,\n      hasBackdrop = true,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const { portalsContainerId } = useContext(DSContext);\n    const { Portal } = usePortal({\n      containerId: portalsContainerId,\n      internalShowHide: false,\n      autoRemoveContainer: false,\n      clickOutsideToHide: hasBackdrop,\n    });\n    const drawerRef = useOuterClick<HTMLDivElement>(onClose);\n\n    const drawerProps = {\n      size,\n      ref: hasBackdrop ? mergeRefs<HTMLDivElement>(drawerRef, ref) : ref,\n      adornment,\n      footer,\n      children,\n      title,\n      onClose,\n      hasBackdrop,\n      ...props,\n    };\n\n    useLockBodyScroll({ enabled: hasBackdrop });\n\n    return (\n      <FloatingProvider>\n        <Portal>\n          {hasBackdrop ? (\n            <Overlay data-testid=\"dialog-overlay\" placement=\"right\">\n              <DrawerBox {...drawerProps} />\n            </Overlay>\n          ) : (\n            <DrawerBox {...drawerProps} />\n          )}\n        </Portal>\n      </FloatingProvider>\n    );\n  },\n);\n\nexport default Drawer;\n\nDrawerBox.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  adornment: PropTypes.node,\n  footer: PropTypes.node,\n  size: PropTypes.oneOf(Object.values(DrawerSizes)),\n  props: PropTypes.objectOf(PropTypes.oneOf([PropTypes.string])),\n};\nDrawer.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  adornment: PropTypes.node,\n  footer: PropTypes.node,\n  size: PropTypes.oneOf(Object.values(DrawerSizes)),\n  hasBackdrop: PropTypes.bool,\n  className: PropTypes.string,\n};\n"],"names":["cov_6qwbsuiie","actualCoverage","DrawerSizes","md","lg","xl","CloseButton","Header","styled","div","cov_1qe28bjzag","s","withConfig","displayName","componentId","$maxWidth","SurfaceContainer","f","pxToRem","$hasBackdrop","b","noBackdropStyle","BaseDrawer","size","footer","hasBackdrop","hasAdornment","isNotUndefined","Footer","Adornment","forwardRef","DrawerBox","Drawer","title","onClose","adornment","className","children","props","ref","portalsContainerId","widthVariants","style","drawerRef","drawerProps","jsx","jsxs","Inline","align","stretch","StretchEnum","start","isRequired","node","oneOf","marginCompensation","SpaceSizes","PropTypes"],"mappings":"0+CAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,IAAME,MAAAA,GAAAA,EAAAA,EAAAA,EAAc,CAAA,IAAA,CACzBC,GAAI,KACJC,GAAI,KACJC,GAAI,IACN,GCaSC,SAAAA,GAAAA,CAAAA,IAAAA,EAAAA,+EAAAA,EAAAA,2CAAAA,EAAAA,OAAAA,EAAAA,eAAAA,EAAAA,CAAAA,KAAAA,+EAAAA,aAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,GAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,CAAAA,EAAAA,KAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,cAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,GAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,IAAAA,OAAAA,CAAAA,EAAAA,IAAAA,CAAAA,KAAAA,IAAAA,OAAAA,EAAAA,CAAAA,EAAAA,KAAAA,ceAAAA,CAAAA,QAAAA,EAAAA,KAAAA,KAAAA,QAAAA,CAAAA,8EAAAA,EAAAA,MAAAA,CAAAA,aAAAA,aAAAA,YAAAA,YAAAA,SAAAA,MAAAA,iBAAAA,MAAAA,cAAAA,oBAAAA,gBAAAA,SAAAA,UAAAA,UAAAA,UAAAA,YAAAA,aAAAA,YAAAA,cAAAA,cAAAA,gBAAAA,mBAAAA,eAAAA,gBAAAA,KAAAA,KAAAA,KAAAA,SAAAA,MAAAA,aAAAA,cAAAA,cAAAA,kBAAAA,mBAAAA,YAAAA,eAAAA,aAAAA,eAAAA,QAAAA,UAAAA,SAAAA,YAAAA,YAAAA,OAAAA,YAAAA,WAAAA,SAAAA,QAAAA,UAAAA,YAAAA,cAAAA,QAAAA,MAAAA,YAAAA,eAAAA,UAAAA,QAAAA,QAAAA,SAAAA,qBAAAA,SAAAA,cAAAA,mBAAAA,sBAAAA,qBAAAA,YAAAA,cAAAA,UAAAA,YAAAA,OAAAA,aAAAA,SAAAA,OAAAA,QAAAA,SAAAA,SAAAA,WAAAA,MAAAA,EAAAA,SAAAA,g1HAAAA,EAAAA,gBAAAA,2CAAAA,KAAAA,0CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,OAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,CAAAA,EAAAA,OAAAA,EAAAA,UAAAA,CAAAA,OAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAOW,MACLF,GAAAA,EAAAA,EAAAA,EAAK,CAAA,IAAA,CAClB,CAACF,EAAYG,EAAE,EAAG,IACpB,CAAAH,EAAAE,EAAA,EAAA,IAEMG,CAAAA,EAASC,EAAOC,EAAAA,GAAG,GAIxBF,GAAAG,EAAA,EAAAC,EAAA,CAAA,IAAAH,EAAAC,IAAAG,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAA,CASkC,EAKnB,CAAA,+KAAA,CAAA,GAAEC,GAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,EASW,CAAA,gEAAA,CAAA,GAI5BC,GAAAN,IAAAC,EAAA,CAAA,IAAAH,EAAAC,IAAAG,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAA,CAAA,EAAA,CAAA,gEAAA,iFAAA,GAAA,EAOaN,CAAAA,CAAAA,UAAAA,CAAmB,KAAAE,EAAA,EAAAO,EAAA,CAAA,IAAAP,EAAA,EAAAC,EAAA,CAAA,IAAAO,EAACH,CAAA,GAQR,CAAA,CAAAI,aAAAA,CAAA,KAAAT,EAAAO,EAAAA,EAAAP,CAAAA,IAAAA,EAAA,EAAAC,EAAAD,CAAAA,IAAAA,IAAAU,EAAAD,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,IAAAT,IAAAU,EAAAC,CAAAA,EAAAA,CAAAA,IAAAA,GAAA,GAMDC,GAAAZ,IAAAC,EAAAH,CAAAA,IAAAA,EAAAC,IAAAG,WAAAC,CAAAA,YAAAC,qBAAAA,YAKG,YAAA,CAAA,EAAA,CAAA,gDAAA,CAAA,GACbI,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,IAAAA,WAAAA,CAAAA,YAAAA,uBAAAA,YAOTK,YAAAA,CAAAA,EAAAA,CAAAA,kBAAAA,CAAAA,GAGAC,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,WAAAA,CAAAA,YAAAA,gBAAAA,YAAAA,YAAAA,CAIAC,EAMF,CAAA,gFAAA,CAAA,GAAMC,GAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,EAAeC,0DAeR,YAAA,CAAA,EAAA,CAAA,gFAAA,CAAA,GACPC,GAAAlB,EAAA,EAAAC,EAAA,EAAA,IAAAH,EAEAC,IAAAG,WAAAC,CAAAA,YAAAC,iBAAAA,YASyB,YAAA,CAAA,EAAA,CAAA,mGAAA,CAAA,GAMnBe,GAAAnB,EAAA,EAAAC,EAAA,EAAA,IAAAH,EAAAC,IAAAG,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAA,CACC,EAAAI,CAAAA,aAAAA,eAAAA,GAAAA,EAAAA,EAAA,EAAA,EAKLA,EAAA,EAAA,CAAA,kBAKNY,EAAA,WAGN,CAAEC,CAEIC,KAAAA,EAGAC,UAAAA,EACAC,SAAAA,EACAV,OAAAA,UAEAW,QAAAA,EACcC,UAAAA,EACdC,YAAAA,EACGC,GAAAA,CAGF,EACGC,IAAEC,CAAAA,EAAAA,EAAAA,EAAmB,CAAA,IAAA,eAAwBb,EAAAA,IAAAA,EAAAH,CAAA,GAC7CE,GAAAhB,IAAAC,EAAAgB,EAAAA,IAAAA,EAAAQ,CAAA,GAAAzB,OAAAA,IAAAC,QACS6B,EAAAA,IAAAA,EACKrB,CAAAA,aAAAM,EACGV,UAAA0B,EAAAlB,CAAA,EACDE,KAAAA,SACrBiB,MAAA,CACKC,wBAAiD,uBAEjDC,EAECnB,SAAAA,EAAAA,IAAAA,EACLU,CAAAA,WAAAA,QACAX,UAAAA,EACAa,OAAAA,KACAJ,MAAAA,CAAAA,QAAAA,OAAAA,MAAAA,MAAAA,EACAC,UAAAA,GAEGI,SAAAA,EAAAA,KAAAA,EACLC,CAAAA,IAAAA,EAEkB,kBAAA,kBAAWd,UAAAA,EAAAA,EAAAA,CAAAA,EAAa,GAAAa,EAgB9CD,SAAA,CAAAQ,EAAAA,IAAAtC,EAAA,CAAE8B,SAAAS,EAAAA,KAAAC,EAAA,CAAAC,MAAA,SAAAC,QAAAC,EAAAC,MAEanB,SAAAA,CAAAA,EAAAA,KAAAA,EAAAA,CAAAA,MAAAA,SAAAA,IAAAA,EAAAA,GAEOK,SAAA3B,EAAAA,EAAA,EAAAU,EAAAM,CAAAA,EAAAA,CAAAA,IAAAA,IAAAhB,IAAAU,EAAA,CAAA,EAAA,CAAA,IAAAyB,EAAAA,IAAAhB,EAAA,CAAAQ,SAAAF,CAAA,CAAA,aAEIiB,SAAAA,EAAAA,IAAAA,EAAAA,CAAAA,GAAAA,kBAAAA,KAAAA,KACAA,SAAAA,CAAAA,CACHC,CAAAA,CACHA,CACFC,CAAAA,CAAAA,UAElBC,CAAAA,mBAAAC,EAAArD,GACmB+B,QAAAA,CAAA,CAAA,CAAA,CAAA,WAINuB,EAAUJ,CAAAA,SAAAA,CAAAA,CAAAA,GACHA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GACFC,CAAAA,CAAAA,CAAAA"}
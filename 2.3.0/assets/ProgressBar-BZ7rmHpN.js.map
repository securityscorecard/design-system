{"version":3,"file":"ProgressBar-BZ7rmHpN.js","sources":["../../src/components/ProgressBar/ProgressBar.enums.ts","../../src/components/ProgressBar/ProgressBar.tsx"],"sourcesContent":["export const ProgressBarSizes = {\n  normal: 'normal',\n  thin: 'thin',\n} as const;\n\nexport const ProgressBarVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n} as const;\n","import React, { forwardRef } from 'react';\nimport { prop } from 'ramda';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport type {\n  ProgressBarProps,\n  ProgressBarVariant,\n  RootProgressProps,\n} from './ProgressBar.types';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { getColor, getRadii, pxToRem } from '../../utils';\nimport { ColorTypes } from '../../theme';\nimport { ProgressBarSizes, ProgressBarVariants } from './ProgressBar.enums';\n\nconst ProgressBarColors: Record<ProgressBarVariant, string> = {\n  info: ColorTypes.info500,\n  warn: ColorTypes.warning500,\n  error: ColorTypes.error500,\n  success: ColorTypes.success500,\n};\n\nconst RootProgress = styled.div<RootProgressProps>`\n  position: relative;\n  height: ${(props) =>\n    prop('$size')(props) === 'thin' ? pxToRem(6) : pxToRem(14)};\n  width: 100%;\n  background-color: ${getColor(ColorTypes.neutral300)};\n  border-radius: ${getRadii('half')};\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${prop('$progress')}%;\n    height: 100%;\n    background-color: ${(props) =>\n      getColor(ProgressBarColors[prop('$variant')(props)])};\n    border-radius: ${getRadii('half')};\n  }\n`;\n\nconst ProgressBar = forwardRef<HTMLDivElement, ProgressBarProps>(\n  (\n    {\n      value,\n      maxValue = 100,\n      size = ProgressBarSizes.normal,\n      variant = ProgressBarVariants.info,\n      ...props\n    },\n    ref,\n  ) => (\n    <RootProgress\n      {...props}\n      ref={ref}\n      $progress={(100 / maxValue) * value}\n      $size={size}\n      $variant={variant}\n      aria-valuemax={maxValue}\n      aria-valuemin={0}\n      aria-valuenow={value}\n      className={CLX_COMPONENT}\n      role=\"progressbar\"\n    />\n  ),\n);\n\nProgressBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  maxValue: PropTypes.number,\n  size: PropTypes.oneOf(Object.values(ProgressBarSizes)),\n  variant: PropTypes.oneOf(Object.values(ProgressBarVariants)),\n};\nexport default ProgressBar;\n"],"names":["cov_27pb3ur9d1","actualCoverage","ProgressBarSizes","normal","thin","ProgressBarVariants","s","warn","error","success","RootProgress","displayName","ColorTypes","info500","componentId","warning500","props","ProgressBar","ref","getColor","neutral300","number","isRequired"],"mappings":"2vCAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAA,MAAME,GAAAA,IAAAA,EAAAA,CAAAA,IAAmB,CAC9BC,OAAQ,SACRC,KAAM,MACR,GAGQC,GAAAL,EAAAM,EAAAA,EAAA,CAAA,IAAA,CACNC,KAAM,OACNC,KAAO,OACPC,MAAS,QACXA,QAAA,y8HCYA,MAAMC,GAAAA,EAAAA,EAAAA,EAAyB,CAAA,IAAA,CAAAC,KAAAC,EAAAC,QAAAC,KAAAF,EAAAG,WAElBC,MAAAA,EAAAA,SAmBPC,QAAAA,YAEF,iBAG0Bd,EAAAA,IAAAA,YAAAA,YAAAA,4BAAAA,YAErBa,aAAAA,CAAAA,EAAAA,CAAAA,4BAAAA,gCAAAA,kBAAAA,6DAAAA,kCAAAA,kBAAAA,IAAAA,EAAAA,IAELE,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,oCAGMF,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,YAEJ,EAAA,IAYkBG,EAAAP,EAAAQ,UAAA,EACLC,EAAOC,MAAAA"}
{"version":3,"file":"index-CXv1p1EY.js","sources":["../../../src/components/forms/Message/index.ts","../../../src/components/forms/MultiValueInput/index.ts","../../../src/components/forms/Password/index.ts","../../../src/components/forms/Radio/index.ts","../../../src/components/forms/Range/index.ts","../../../src/components/forms/Switch/index.ts","../../../src/components/forms/TextArea/index.ts","../../../src/components/forms/SearchBar/index.ts","../../../src/components/forms/InputGroup/InputGroup.tsx","../../../src/components/forms/InputGroup/index.ts"],"sourcesContent":["export * as MessageEnums from './Message.enums';\nexport { default as Message, Note, Error } from './Message';\nexport * from './Message.types';\n","export { default as MultiValueInput } from './MultiValueInput';\nexport * from './MultiValueInput.types';\n","export { default as Password } from './Password';\nexport * from './Password.types';\n","export { default as Radio } from './Radio';\nexport * from './Radio.types';\n","export { default as Range } from './Range';\nexport * from './Range.types';\n","export { default as Switch } from './Switch';\nexport * from './Switch.types';\n","export { default as TextArea } from './TextArea';\n","export { default as SearchBar } from './SearchBar';\nexport * from './SearchBar.types';\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { prop } from 'ramda';\nimport cls from 'classnames';\n\nimport { getFormStyle, getRadii } from '../../../utils';\nimport { Input } from '../Input';\nimport { Password } from '../Password';\nimport { Select } from '../Select';\nimport { Icon } from '../../Icon';\nimport { Inline, Padbox } from '../../layout';\nimport { InputGroupProps } from './InputGroup.types';\nimport { InlineProps } from '../../layout/Inline/Inline';\nimport { Button } from '../../Button';\nimport { SearchBar } from '../SearchBar';\nimport { CLX_COMPONENT } from '../../../theme/constants';\nimport { useLogger } from '../../../hooks/useLogger';\nimport ButtonV2 from '../../ButtonV2/Button';\nimport IconButton from '../../ButtonV2/IconButton';\n\nconst InputGroupContainer = styled(Inline)<InputGroupProps>`\n  border: ${getFormStyle('borderWidth')} solid ${getFormStyle('borderColor')};\n  border-radius: ${getRadii('default')};\n\n  .ssc__control {\n    border: 0px;\n    box-shadow: none;\n  }\n  & > & {\n    border: none;\n    border-radius: 0px;\n  }\n  & > *,\n  input:not([id^='react-select']) {\n    border: none;\n    box-shadow: none;\n    border-radius: 0px;\n  }\n  & > * {\n    ${(props) =>\n      props.hasDivider &&\n      `border-right: ${getFormStyle('borderWidth')(props)} solid ${getFormStyle(\n        'borderColor',\n      )(props)};`}\n  }\n  & > *:first-child {\n    border-radius: ${getRadii('default')} 0 0 ${getRadii('default')} !important;\n  }\n  & > *:last-child,\n  & > *:last-child input[type='password'],\n  & > *:last-child input[type='search'] {\n    border-right: 0px !important;\n    border-radius: 0 ${getRadii('default')} ${getRadii('default')} 0 !important;\n  }\n`;\n\nconst IconContainer = styled(Padbox)`\n  display: flex;\n  align-items: center;\n`;\n\nconst InputGroup = ({\n  children,\n  hasDivider,\n  className,\n  ...inlineProps\n}: InputGroupProps & InlineProps) => {\n  const { error } = useLogger('InputGroup');\n  const ALLOWED_CHILDREN = [\n    Select,\n    Input,\n    Icon,\n    Button,\n    ButtonV2,\n    IconButton,\n    Password,\n    InputGroup,\n    SearchBar,\n  ];\n  React.Children.forEach(children, (child) => {\n    if (!ALLOWED_CHILDREN.includes(prop('type', child))) {\n      error(\n        'Only Select, Input, InputGroup, Icon, Button, ButtonV2, IconButton, SearchBar and Password are valid childs of InputGroup',\n      );\n    }\n  });\n  return (\n    <InputGroupContainer\n      className={cls(CLX_COMPONENT, className)}\n      hasDivider={hasDivider}\n      {...inlineProps}\n      stretch={inlineProps.stretch || 'start'}\n    >\n      {React.Children.map(children, (child) => {\n        if (prop('type', child) === Icon) {\n          return <IconContainer paddingSize=\"sm\">{child}</IconContainer>;\n        }\n        return child;\n      })}\n    </InputGroupContainer>\n  );\n};\n\nInputGroup.propTypes = {\n  hasDivider: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default InputGroup;\n","export { default as InputGroup } from './InputGroup';\nexport * from './InputGroup.types';\n"],"names":["cov_zj9j7lcr","actualCoverage","cov_1zwj9dx3e2","cov_16crusr5v8","cov_189ntwu9jo","cov_1nw84dkiv1","cov_1nz7llefhc","cov_spg7h4e7y","cov_255g9no5f1","cov_hzqhyjlel","path","hash","global","gcv","coverageData","coverage","InputGroupContainer","s","styled","Inline","withConfig","displayName","componentId","getFormStyle","getRadii","props","f","b","hasDivider","cov_2aupo7fsb0"],"mappings":"00DAAA,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,+tBCAA,OAAAE,EAAA,UAAA,CAAA,OAAAD,CAAA,EAAAA,CAAA,CAAAC,EAAA,msBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAF,CAAA,EAAAA,CAAA,CAAAE,EAAA,qrBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAH,CAAA,EAAAA,CAAA,CAAAG,EAAA,qrBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAJ,CAAA,EAAAA,CAAA,CAAAI,EAAA,yrBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAL,CAAA,EAAAA,CAAA,CAAAK,EAAA,wrBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAN,CAAA,EAAAA,CAAA,CAAAM,EAAA,usBCAA,OAAAC,EAAA,UAAA,CAAA,OAAAP,CAAA,EAAAA,CAAA,CAAAO,EAAA,ECmBA,SAAAC,GAAA,CAAA,IAAAC,EAAA,+FAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,+FAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cceAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,8FAAA,EAAA,MAAA,CAAA,WAAA,aAAA,YAAA,QAAA,QAAA,QAAA,aAAA,MAAA,EAAA,SAAA,qSAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAb,EAAAc,EAAAL,CAAA,EAAAD,OAAAA,YAAA,CAAA,OAAAR,CAAAA,EAAAA,EAAAQ,IAE0C,MAAAO,GAAAP,EAAAQ,EAAAA,OAAAC,EAAAC,CAAA,EAAAC,YAAAC,YAAA,kCAAAC,YAAAC,cAAAA,CAAAA,EAAAA,CAAAA,UAAAA,UAAAA,kBAAAA,8KAAAA,oCAAAA,QAAAA,2JAAAA,IAAAA,iBAAAA,EAAAA,iBAAAA,EAAA,aAAA,EAAAC,EAAAC,SAAAA,EAAAA,IAAAhB,EAAA,EAAAiB,EAAA,CAAA,IAAAjB,EAAAQ,EAAAA,OAAAR,EAAA,EAAAkB,EAAAF,CAAAA,EAAAA,CAAAA,IAAAA,EAAAG,aAAAnB,EAAAkB,EAAAA,2BAAAJ,EAAA,aAAA,EAAAE,CAAA,CAAA,UAAAF,EAAAE,aAAAA,EAAAA,CAAA,OAAAD,EAAA,SAAA,EAAAA,EAAAA,SAAAA,EAAAA,aAAAA,EAAA,SAAA,CAAA,qzFCrB1C,OAAAK,EAAA,UAAA,CAAA,OAAA5B,CAAA,EAAAA,CAAA,CAAA4B,EAAA"}
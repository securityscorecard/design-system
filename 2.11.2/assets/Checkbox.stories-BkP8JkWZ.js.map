{"version":3,"file":"Checkbox.stories-BkP8JkWZ.js","sources":["../../../src/components/forms/Checkbox/Checkbox.stories.tsx"],"sourcesContent":["import { Meta, StoryFn } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport Checkbox from './Checkbox';\nimport { CheckboxProps } from './Checkbox.types';\nimport { Inline } from '../../layout';\nimport { Icon } from '../../Icon';\nimport { Text } from '../../Text';\n\nconst textExample = 'Use the same details for billing & shipping on my invoice';\n\nconst labelMappingValues = {\n  labelAsComponent: (\n    <Text size=\"md\" variant=\"secondary\">\n      Checkbox label inside a Text component\n    </Text>\n  ),\n  labelAsString: 'Checkbox label',\n  labelAsIconAndText: (\n    <Inline align=\"center\" gap=\"sm\">\n      <Icon color=\"neutral.900\" name=\"wrench\" />\n      <Text>{textExample}</Text>\n    </Inline>\n  ),\n};\n\nexport default {\n  title: 'components/forms/Checkbox',\n  component: Checkbox,\n  argTypes: {\n    name: {\n      description: 'Name property of the form',\n      control: { disable: true },\n    },\n    checkboxId: {\n      description: 'ID property of the form',\n      control: { disable: true },\n    },\n    defaultChecked: {\n      description: 'Default value of the checkbox',\n      table: { type: { summary: 'boolean' } },\n    },\n    isDisabled: {\n      description: 'Make element not interactive when certain condition is met',\n    },\n    isIndeterminate: {\n      description: 'Subordinate checkboxes might have various values',\n    },\n    isInvalid: {\n      description: 'It marks the selection when wrong',\n    },\n    label: {\n      description: 'Adds text to the checkbox',\n      options: Object.keys(labelMappingValues),\n      mapping: labelMappingValues,\n      control: {\n        type: 'select',\n        labels: {\n          labelAsComponent: 'Label as Text component',\n          labelAsString: 'Label as string',\n          labelAsIconAndText: 'Label as Icon and Text',\n        },\n      },\n    },\n  },\n} as Meta;\n\nexport const Playground: StoryFn<CheckboxProps> = (args) => (\n  <Checkbox {...args} />\n);\nPlayground.args = {\n  name: 'playground',\n  checkboxId: 'playground',\n  label: labelMappingValues.labelAsString,\n  defaultChecked: false,\n};\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const DefaultCheckbox: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"defaultCheckbox\"\n    label={textExample}\n    name=\"defaultCheckbox\"\n    onChange={action('Checkbox clicked')}\n  />\n);\n\nexport const CheckedCheckbox: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"checkedCheckbox\"\n    label={textExample}\n    name=\"checkedCheckbox\"\n    defaultChecked\n  />\n);\n\nexport const IndeterminateCheckbox: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"indeterminateCheckbox\"\n    label={textExample}\n    name=\"indeterminateCheckbox\"\n    isIndeterminate\n  />\n);\n\nexport const InvalidCheckbox: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"invalidCheckbox\"\n    label={textExample}\n    name=\"invalidCheckbox\"\n    isInvalid\n  />\n);\n\nexport const DisabledCheckbox: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"disabledCheckbox\"\n    label={textExample}\n    name=\"disabledCheckbox\"\n    isDisabled\n  />\n);\n\nexport const CheckboxWithLabelAsComponent: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"disabledCheckbox\"\n    label={<Text>{textExample}</Text>}\n    name=\"disabledCheckbox\"\n  />\n);\n\nexport const CheckboxWithLabelAsComponentWithIcon: StoryFn = () => (\n  <Checkbox\n    checkboxId=\"disabledCheckbox\"\n    label={\n      <Inline align=\"center\" gap=\"sm\">\n        <Icon color=\"neutral.900\" name=\"wrench\" />\n        <Text>{textExample}</Text>\n      </Inline>\n    }\n    name=\"disabledCheckbox\"\n  />\n);\n"],"names":["textExample","labelMappingValues","labelAsString","jsx","Text","labelAsIconAndText","title","component","argTypes","name","control","Checkbox_stories","checkboxId","description","disable","defaultChecked","table","type","summary","isDisabled","isIndeterminate","isInvalid","label","options","Object","keys","mapping","labels","labelAsComponent","args","screenshot","skip","Playground","parameters","IndeterminateCheckbox","DefaultCheckbox","Checkbox","CheckboxWithLabelAsComponent","action"],"mappings":"imCAYkBA,EACd,4DAEEC,EACH,CACDC,iBACkBC,EAAAA,IAAAC,EAAA,CAAA,KAAA,KAAA,QACf,YAAqB,SAE1B,yCAAA,EAGCF,cAAA,iBAEcG,mBACbC,EAAAA,KAAAA,EAAAA,CAAkC,MAAA,SAAA,IAAA,KAClCC,SAAAA,CAAAA,EAAAA,IAAAA,SAAmB,cAAA,KAAA,SAAA,EACnBC,EAAAA,IAAAA,GAAUR,SAAAA,CAAA,CAAA,CAAA,EACRS,CAEEC,EAAyBC,GAAA,OAC1B,4BACDC,UAAAA,EACEC,SAAAA,CACAH,KAAAA,CAAWI,YAAS,4BAAKJ,QAAA,CAAAI,QAAA,EAAA,CAC3B,EACAC,WAAAA,CACEF,YAAa,0BACbG,QAAO,CAAAF,QAAA,EAAA,CAAEG,EAAQC,eAAS,CAAUL,YAAA,gCAAEG,MAAA,CAAAC,KAAA,CAAAC,QAAA,SAAA,CAAA,CACxC,EACAC,WAAY,CACVN,YAAa,4DACf,EACAO,gBAAiB,CACfP,YAAa,kDACf,EACAQ,UAAW,CACTR,YAAa,mCACf,EACAS,MAAO,CACLT,YAAa,4BACbU,QAASC,OAAOC,KAAKxB,CAAkB,EACvCyB,QAASzB,EACTS,QAAS,CACPO,KAAM,SACNU,OAAQ,CACNC,iBAAkB,0BAClB1B,cAAe,kBACfG,mBAAoB,wBACtB,CACF,CACF,CACF,CACF,IAKkBwB,GAChBpB,EAAAA,IAAAA,EAAAA,CAAkBoB,GAAAA,EAClBjB,IACyBiB,KAAA,CACzBd,KAAAA,aACDH,WAAA,aACSU,MAAArB,EAAcC,cACtB4B,eAAY,EAAEC,EAAWC,EAAAC,WAAA,CAC1BH,WAAA,CAAAC,KAAA,EAAA,CAED,EAkBA,MAAaG,EAA8BC,IASpChC,EAAA,IAAAiC,EAAA,CASA,WAAsB,kBAS7B,MAAaC,EAQN,KAAA,kBAKC,SAAMC,EAAmB,kBAAM,CAEjC,CAAA;;;"}
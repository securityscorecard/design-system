{"version":3,"file":"Badge.stories-qmtcIV01.js","sources":["../../src/components/Badge/Badge.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\n\nimport Badge from './Badge';\nimport Button from '../ButtonV2/Button';\nimport { Inline } from '../layout';\n\n/**\n * ```jsx\n * import { Badge } from '@securityscorecard/design-system';\n * ```\n */\n\nconst meta = {\n  title: 'components/Badge',\n  component: Badge,\n  args: {\n    children: <Button variant=\"subtle\">Notifications</Button>,\n  },\n  argTypes: {\n    variant: {\n      description:\n        'Badge visual variant. If set to `standard` the `count` property is required. If set to `dot` the `isVisible` property is required.',\n      control: 'select',\n      options: ['standard', 'dot'],\n      table: {\n        defaultValue: {\n          summary: \"'standard'\",\n        },\n        type: {\n          summary: \"'standard' | 'dot'\",\n        },\n      },\n    },\n    isVisible: {\n      description:\n        'Controls visibility of Badge in `dot` variant. Required for `dot` variant.',\n      control: 'boolean',\n      table: {\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n    count: {\n      description:\n        'Set the badge count in the `standard` variant. Required for `standard` variant.',\n    },\n    positionOffset: {\n      description:\n        \"Available only on `standard` variant. Set the position offset to fix potentional issues where the badge doesn't fit to base position. The value will be set to transform-translate CSS property.\",\n      control: 'text',\n      table: {\n        type: {\n          summary: 'string',\n        },\n        defaultValue: {\n          summary: '50%, -50%',\n        },\n      },\n    },\n  },\n} satisfies Meta<typeof Badge>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Playground: Story = {\n  args: {\n    variant: 'standard',\n    count: 56,\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const StandardBadge: Story = {\n  args: Playground.args,\n};\n\nexport const DotBadge: Story = {\n  args: {\n    variant: 'dot',\n    isVisible: true,\n  },\n};\n\nexport const WithCustomOffset: Story = {\n  args: {\n    variant: 'standard',\n    count: 56,\n    positionOffset: '20%, -20%',\n  },\n};\n\nexport const DarkMode: Story = {\n  args: Playground.args,\n  render: (args) => (\n    <Inline gap=\"md\">\n      <Badge count={56}>{args.children}</Badge>\n      <Badge variant=\"dot\" isVisible>\n        {args.children}\n      </Badge>\n    </Inline>\n  ),\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["title","component","args","Badge","children","jsx","Button","argTypes","variant","description","control","options","table","defaultValue","summary","type","isVisible","count","positionOffset","Meta","Playground","StandardBadge","parameters","screenshot","DotBadge","Story","themeOverride","render","jsxs","Inline"],"mappings":"q+BAaEA,MAAAA,GAAyB,CACzBC,MAAAA,mBACAC,UAAMC,OACI,CACTC,SAAAC,EAAA,IAAAC,EAAA,CAAA,QAAA,SAAA,SAAA,gBAAA,CACDC,EACEC,SAAS,CACPC,QAAAA,CAEAC,YACAC,qIACAC,QAAO,SACLC,QAAAA,CAAAA,WAAc,KAAA,EACZC,MAAAA,CACFD,aAAC,CACDE,QAAM,YACJD,EACFC,KAAA,CACFD,QAAA,oBACD,CACDE,CACEP,EAEAC,UAAS,CACTE,YACEG,6EACED,QAAAA,UACFF,MAAA,CACFG,KAAA,CACDD,QAAA,SACDG,CACER,CAEF,EACAS,MAAAA,CACET,YAEAC,iFACAE,EACEG,eAAM,CACJD,YACF,mMACAD,QAAAA,OACEC,MAAAA,CACFC,KAAA,CACFD,QAAA,QACF,EACFD,aAAA,CACUM,QAAK,WAEjB,EAIA,CACEjB,EAAAA,WAAAA,CAAAA,KAAAA,CAAAA,YAAAA,CAAAA,UAAAA,wEAAAA,CAAAA,CAAAA,CACEM,EAIyBY,EAAA,CAC3BlB,KAAA,CACDM,QAAA,WAEDS,MAAaI,EACXnB,EACDoB,WAAA,CAEDC,WAAaC,CAAAA,KAAUC,EAAQ,CAC7BvB,CACEM,EAEFa,EAAA,CACDnB,KAAAkB,EAAAlB,IAED,EAEasB,EAAU,CACnBP,KAAAA,CACAC,QAAAA,MACFF,UAAA,EACD,CAED,IAGoB,CACpBd,KAAO,CACPM,QAAa,WACLS,MAAK,GACbC,eAAa,WACT,CAEFI,EAEII,EAAe,CACjBxB,KAAAkB,EAAAlB,KACFyB,OAAAzB,GACD0B,EAAA,KAAAC,EAAA,CAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
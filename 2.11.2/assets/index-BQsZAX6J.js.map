{"version":3,"file":"index-BQsZAX6J.js","sources":["../../src/components/layout/Container/Container.tsx","../../src/components/layout/Container/index.ts","../../src/components/layout/Row/Row.tsx","../../src/components/layout/Row/index.ts","../../src/components/layout/Col/Col.tsx","../../src/components/layout/Col/index.ts","../../src/components/layout/Cluster/index.ts","../../src/components/layout/Grid/index.ts","../../src/components/layout/Center/Center.tsx","../../src/components/layout/Center/index.ts","../../src/components/layout/index.ts"],"sourcesContent":["import styled from 'styled-components';\n\nimport { pxToRem } from '../../../utils';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst Container = styled.div.attrs({ className: CLX_LAYOUT })`\n  margin: 0 auto;\n  width: ${({ theme }) => pxToRem(theme.layout.containerWidth)};\n`;\n\nexport default Container;\n","export { default as Container } from './Container';\n","import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst StyledRow = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  min-width: 0;\n  flex-wrap: wrap;\n  margin-inline: calc(var(--sscds-space-grid-gutter) / -2);\n  display: flex;\n`;\n\nconst Row = ({ children }: { children: ReactNode }) => (\n  <StyledRow className={CLX_LAYOUT}>{children}</StyledRow>\n);\n\nexport default Row;\n","export { default as Row } from './Row';\n","import styled from 'styled-components';\n\nimport { ColProps } from './Col.types';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst StyledCol = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  min-width: 0;\n  margin-inline-start: var(--sscds-col-margin-start);\n  padding-inline: calc(var(--sscds-space-grid-gutter) / 2);\n  flex: 1 1 auto;\n  max-width: var(--sscds-col-width);\n`;\n\nconst Col = ({ children, cols = 'auto', offset = 0 }: ColProps) => (\n  <StyledCol\n    className={CLX_LAYOUT}\n    style={{\n      '--sscds-col-margin-start': `calc(100% / 12 * ${offset})`,\n      '--sscds-col-width':\n        cols === 'auto' ? 'auto' : `calc(${cols} / 12 * 100%)`,\n    }}\n  >\n    {children}\n  </StyledCol>\n);\n\nexport default Col;\n","export { default as Col } from './Col';\nexport * from './Col.types';\n","export { default as Cluster } from './Cluster';\n","export { default as Grid } from './Grid';\n","import styled from 'styled-components';\nimport { includes } from 'ramda';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { getSpace, pxToRem } from '../../../utils';\nimport { SpaceSize } from '../../../theme/space.types';\nimport { SpaceSizes } from '../../../theme/space.enums';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nexport interface CenterProps {\n  /**\n   * Maximal content width\n   */\n  maxWidth?: number;\n  /**\n   * Gutters around content. Gutters are not counted in maximal content width.\n   */\n  gutters?: SpaceSize;\n  /**\n   * Centers all children inside component\n   */\n  areChildrenCentered?: boolean;\n  /**\n   * Centers text in component\n   */\n  isTextCentered?: boolean;\n  className?: string;\n}\n\nconst Center = styled.div\n  .withConfig<CenterProps>({\n    shouldForwardProp: (prop) =>\n      !includes(prop, [\n        'maxWidth',\n        'gutters',\n        'areChildrenCentered',\n        'isTextCentered',\n      ]),\n  })\n  .attrs<CenterProps>((props) => ({\n    ...props,\n    gutters: props.gutters ?? SpaceSizes.none,\n    areChildrenCentered: props.areChildrenCentered ?? false,\n    isTextCentered: props.isTextCentered ?? false,\n    className: cls(CLX_LAYOUT, props?.className),\n  }))<CenterProps>`\n  box-sizing: content-box;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${({ maxWidth, theme }) =>\n    pxToRem(isNotUndefined(maxWidth) ? maxWidth : theme.layout.containerWidth)};\n  ${({ gutters, theme }) => {\n    const size = getSpace(gutters, { theme });\n\n    return `\n      padding-left: ${size};\n      padding-right: ${size};\n    `;\n  }};\n\n  ${({ areChildrenCentered }) =>\n    areChildrenCentered &&\n    `\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n  `};\n\n  ${({ isTextCentered }) => isTextCentered && `text-align: center;`};\n`;\n\nexport default Center;\n","export { default as Center } from './Center';\n","// Layout grid components\nexport * from './Container';\nexport * from './Row';\nexport * from './Col';\n\n// Layout primitives\nexport * from './Padbox';\nexport * from './Stack';\nexport * from './Inline';\nexport * from './Cluster';\nexport * from './Grid';\nexport * from './Center';\nexport * from './Surface';\n"],"names":["cov_127rhyiybj","actualCoverage","Container","s","styled","div","attrs","className","CLX_LAYOUT","withConfig","displayName","componentId","theme","f","pxToRem","layout","containerWidth","cov_1pnbfbapks","StyledRow","cov_ait4danzq","cov_2ikc5s3v8w","StyledCol","cov_16mk3bbdky","Col","cov_eie1a06jk","cov_kkhnoenaa","cov_xmxyof7ic","Center","cov_17m2vwpro6","shouldForwardProp","prop","areChildrenCentered","isTextCentered","cov_1rwymt6j13","cov_22ztc7gvyz"],"mappings":"+yDAAA,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAK6D,MAAAE,GAAAF,EAAAG,EAAAA,EAAAC,CAAAA,IAAAA,EAAAC,IAAAC,MAAA,CAAAC,UAAAC,CAAA,CAAA,EAAAC,WAAA,CAAAC,YAAA,YAAAC,YAAA,aAAA,CAAA,EAAA,CAAA,uBAAA,GAAA,EAAA,CAAA,CAAAC,MAAAA,CAAA,KAAAZ,EAAA,EAAAa,OAAAb,EAAA,EAAAG,EAAA,CAAA,IAAAW,EAAAF,EAAAG,OAAAC,cAAA,EAAA,0rBCL7D,OAAAC,EAAA,UAAA,CAAA,OAAAhB,CAAA,EAAAA,CAAA,CAAAgB,EAAA,+1CCK4B,MAAAC,GAAAC,EAAA,EAAAhB,EAAA,CAAA,IAAAC,EAAAC,IAAAI,WAAA,CAAAC,YAAA,iBAAAC,YAAA,cAAA,mhCCL5B,OAAAS,EAAA,UAAA,CAAA,OAAAnB,CAAA,EAAAA,CAAA,CAAAmB,EAAA,ohECK4B,MAAAC,GAAAC,EAAA,EAAAnB,EAAAC,CAAAA,IAAAA,EAAAC,IAAAI,WAAAC,CAAAA,YAAAC,iBAAAA,YAcgC,cAAA,CAAA,EAAA,CAAA,sMAAA,CAAA,GAAAW,EAAA,EAAAnB,EAS5D,CAAA,IAAeoB,MAAAA,EAAAA,CAAAA,CAAAA,SAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,UAAAA,QAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,24CC5Bf,OAAAC,EAAA,UAAA,CAAA,OAAAvB,CAAA,EAAAA,CAAA,CAAAuB,EAAA,65CCAA,OAAAC,EAAA,UAAA,CAAA,OAAAxB,CAAA,EAAAA,CAAA,CAAAwB,EAAA;;;;;;;;o+BCAA,OAAAC,EAAA,UAAA,CAAA,OAAAzB,CAAA,EAAAA,CAAA,CAAAyB,EAAA,w4ICwD0B,MAAAC,IAAAC,EAAA,EAAAzB,EAAA,CAAA,IAAAC,EAAAC,IACCI,WAAA,CAItBoB,kBAAAC,IAAEC,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,CAEH,WAAA,UAAA,sBAAA,gBAAA,CAMC,EAAEC,CAAAA,EAAe1B,UAA6CsB,IAAAf,EAAAe,CAAAA,IAAAA,EAAAzB,EAAAA,EAGpDwB,CAAAA,IAAAA,CAAAA,GAAAA;;;;;;;sxBCxEf,OAAAM,EAAA,UAAA,CAAA,OAAAhC,CAAA,EAAAA,CAAA,CAAAgC,EAAA,ktBCEA,OAAAC,EAAA,UAAA,CAAA,OAAAjC,CAAA,EAAAA,CAAA,CAAAiC,EAAA"}
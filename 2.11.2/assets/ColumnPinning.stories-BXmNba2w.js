import{j as i}from"./jsx-runtime-CfatFE5O.js";import{r as g}from"./index-ClcD9ViR.js";import{D as s}from"./Datatable-phT48B93.js";import{T as n,c as u}from"./Template-C7mirvQL.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLogger-BVsKAY55.js";import"./index-CeGY6Ei3.js";import"./constants-CHqWh-7J.js";import"./space.enums-BIVz6JhH.js";import"./_isObject-BZZHHNGj.js";import"./slice-a4xO8Rfj.js";import"./styled-components.browser.esm-6IU7b-y2.js";import"./DSProvider-oeie4wyM.js";import"./index-_KdZNTQd.js";import"./theme-VOBSdC0d.js";import"./colors-2yNNI7_i.js";import"./PaginationToolbar-DHqxXCOO.js";import"./menuElements-CccNpS3Y.js";import"./index-Ctu4WhxL.js";import"./Icon-DlnuB__l.js";import"./index-BsP7FXMl.js";import"./index-DbwGX_n3.js";import"./index-DxcpycWO.js";import"./index-BQsZAX6J.js";import"./index-Ozu0POZL.js";import"./Padbox-DPWp-bzC.js";import"./index-BnuP2NC2.js";import"./prop-CVCEMdxf.js";import"./Inline.enums-Bs7GfXP0.js";import"./Cluster-DiauHNp4.js";import"./index-gVnCqFBT.js";import"./IconButton-C7WqqEmt.js";import"./components-D0pVc94e.js";import"./index-D0FOmvC8.js";import"./Spinner-BXcIOPtB.js";import"./useSafeTranslation-BoMGciE_.js";import"./en-US-DTEh3xIi.js";import"./Button-_T-PuNCu.js";import"./pluck-DBmb9H0q.js";import"./useContainerQuery-Cae4Sqz1.js";import"./Skeleton-RIrARYRh.js";import"./useLocalStorageState-D2NPfI6N.js";import"./index-BlLyJPr3.js";import"./index-BmLnN1YK.js";import"./Tooltip-jY7iBNOF.js";import"./FloatingContext-Iczo9egI.js";import"./index-Cal9QCFP.js";import"./CloseButton-CA3EgCdD.js";import"./index-0K9MvtJv.js";import"./minus-rUvolOxF.js";import"./checkCircleSolid-D_DFWg_A.js";import"./sortable.esm-C-iNasD-.js";import"./modifiers.esm-ByjRBgE8.js";import"./index-xJp9Kd2E.js";import"./index-C6jSWOeZ.js";import"./Pill-CJpEBFcq.js";import"./PillRemoveButton-ClKFZ-rf.js";const Sn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}}},c=n.bind({});c.args=n.args;const d=n.bind({});d.args={...n.args,enableColumnPinning:!1};const P=n.bind({});P.args={...n.args,columns:[...u,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;t.__docgenInfo={description:"",methods:[],displayName:"ColumnPinningManagedState"};var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const xn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{c as ColumnPinningEnabled,t as ColumnPinningManagedState,d as DisabledColumnPinning,P as DisabledColumnPinningForColumn,a as InitialColumnPinning,xn as __namedExportsOrder,Sn as default};
//# sourceMappingURL=ColumnPinning.stories-BXmNba2w.js.map

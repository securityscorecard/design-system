{"version":3,"file":"CreatableSelect.stories-DyIJcCLA.js","sources":["../../src/components/forms/Select/CreatableSelect.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { isNull } from 'ramda-adjunct';\nimport { GroupedOptionsType, OptionsType } from 'react-select';\n\nimport { CreatableSelectProps, Option } from './Select.types';\nimport CreatableSelect from './CreatableSelect';\nimport { Stack } from '../../layout';\n\nexport default {\n  title: 'components/forms/Select/CreatableSelect',\n  component: CreatableSelect,\n  parameters: {\n    docs: {\n      description: {\n        component: `\n\\`\\`\\`js\nimport { CreatableSelect } from '@securityscorecard/design-system';\n\\`\\`\\`\n\nCapabilities of the **CreatableSelect** component are the same as [Select](design-system/alpha/components-forms-select-select--playground) component\nwith a couple of properties specific for the options creation.\n      `,\n      },\n    },\n  },\n  argTypes: {\n    options: {\n      table: {\n        type: {\n          detail: `\n[\n  {\n    label: string,\n    value: string,\n    isDisabled?: boolean,\n  }\n\n  OR\n\n  {\n    label: string,\n    options: {\n      label: string,\n      value: string,\n      isDisabled?: boolean,\n    }\n  }\n]\n          `,\n        },\n      },\n    },\n    defaultValue: {\n      table: {\n        type: {\n          detail: `\n{\n  label: string,\n  value: string,\n  isDisabled?: boolean,\n}\n\nOR\n\n[\n  {\n    label: string,\n    value: string,\n    isDisabled?: boolean,\n  }\n]\n          `,\n        },\n      },\n    },\n    onCreateOption: {\n      table: { type: { summary: '(inputValue: string) => void' } },\n    },\n    isLoading: {\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    isMulti: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    defaultIsMenuOpen: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n  },\n} as Meta;\n\nconst options = [\n  { value: 'HR', label: 'Croatia', isDisabled: true },\n  { value: 'CU', label: 'Cuba' },\n  { value: 'CW', label: 'Cura\\u00e7ao' },\n  { value: 'CY', label: 'Cyprus' },\n  { value: 'CZ', label: 'Czech Republic' },\n  { value: 'DK', label: 'Denmark' },\n];\n\nconst CreatableSelectTemplate: StoryFn<CreatableSelectProps<true>> = ({\n  options: originalOptions,\n  ...args\n}) => {\n  const [createdOptions, setCreatedOptions] = useState(originalOptions);\n  const [currentValue, setCurrentValue] = useState<OptionsType<Option> | null>(\n    null,\n  );\n  const [isCreating, setIsCreating] = useState(false);\n\n  const handleCreateOption = (inputString: string) => {\n    setIsCreating(true);\n    const newOption: Option = {\n      label: inputString,\n      value: inputString.toLowerCase().replace(/\\W/g, ''),\n    };\n\n    setTimeout(() => {\n      setCreatedOptions(\n        (prevState) =>\n          [...(prevState ?? []), newOption] as\n            | GroupedOptionsType<Option>\n            | OptionsType<Option>,\n      );\n      setCurrentValue((prevValue) =>\n        isNull(prevValue) ? [newOption] : [...prevValue, newOption],\n      );\n      setIsCreating(false);\n    }, 500);\n  };\n\n  return (\n    <CreatableSelect\n      {...args}\n      createNewLabel=\"Create new option\"\n      isLoading={isCreating}\n      options={createdOptions}\n      value={currentValue}\n      onChange={(value) => setCurrentValue(value)}\n      onCreateOption={handleCreateOption}\n    />\n  );\n};\n\nexport const Playground = CreatableSelectTemplate.bind({});\n\nPlayground.args = {\n  options,\n  defaultIsMenuOpen: true,\n  isClearable: true,\n  isMulti: true,\n  isMenuPositionRelative: true,\n  defaultInputValue: 'd',\n};\n\nexport const SingleSelect = CreatableSelectTemplate.bind({});\n\nSingleSelect.args = {\n  ...Playground.args,\n  isMulti: false,\n};\n\nconst filterOptions = (inputValue: string) => {\n  return options.filter((i) =>\n    i.label.toLowerCase().includes(inputValue.toLowerCase()),\n  );\n};\n\nconst promiseOptions = (inputValue: string): Promise<Option[]> =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(filterOptions(inputValue));\n    }, 1000);\n  });\n\nexport const AsyncSelect: StoryFn<CreatableSelectProps<false>> = () => {\n  return (\n    <Stack gap=\"md\">\n      <CreatableSelect\n        loadOptions={promiseOptions}\n        placeholder=\"Single select (async)\"\n        cacheOptions\n        defaultOptions\n        isAsync\n      />\n      <CreatableSelect\n        loadOptions={promiseOptions}\n        placeholder=\"Multi select (async)\"\n        cacheOptions\n        defaultOptions\n        isAsync\n        isMulti\n      />\n    </Stack>\n  );\n};\n\nAsyncSelect.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const DarkMode = CreatableSelectTemplate.bind({});\nDarkMode.args = {\n  ...Playground.args,\n};\nDarkMode.parameters = {\n  themes: {\n    themeOverride: 'Dark',\n  },\n};\n"],"names":["component","CreatableSelect_stories","parameters","docs","CreatableSelect","description","argTypes","options","table","type","detail","defaultValue","onCreateOption","summary","isLoading","control","isDisabled","label","value","defaultIsMenuOpen","CreatableSelectTemplate","originalOptions","args","createdOptions","setCreatedOptions","useState","currentValue","setCurrentValue","isCreating","setIsCreating","handleCreateOption","inputString","newOption","toLowerCase","replace","prevState","prevValue","isNull","setTimeout","Playground","bind","isClearable","isMulti","isMenuPositionRelative","SingleSelect","inputValue","filter","i","promiseOptions","Promise","Option","StoryFn","filterOptions","AsyncSelect","skip","jsx","themes","themeOverride"],"mappings":"0zDAWEA,MAA0BC,GAAA,CAC1BC,MAAAA,0CACEC,UAAMC,EACJC,WAAAA,CACEL,KAAAA,CACRK,YAAA,CACAL,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,CACDM,CACEC,EACEC,SAAO,CACLC,QAAM,CACJC,MAAAA,CACVD,KAAA,CACAC,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAoBK,CACDC,CACEH,EACEC,aAAM,CACJC,MAAAA,CACVD,KAAA,CACAC,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAiBK,CACDE,CACEJ,EAASC,eAAM,CAAEI,MAAAA,CAAAA,KAAS,CAAAA,QAAA,8BAAA,CAAA,CAA+B,EAAEC,UAAA,CAC5DC,QAAA,CAAAN,KAAA,SAAA,EACDK,MAAS,CACPC,KAAS,CAAAF,QAAA,SAAA,EAAEJ,aAAM,CAAAI,QAAA,OAAA,CAAU,CAC3BL,EACEC,QAAM,CAAEI,MAAAA,CAAAA,aAAS,CAAAA,QAAA,OAAA,CAAA,GACjBF,kBAAc,CAAEE,MAAAA,CAAAA,aAAS,CAAAA,QAAA,OAAA,CAAA,CAAQ,CACnC,GAGAL,EAAO,CAAEG,CAAAA,MAAAA,KAAAA,MAAc,UAAAK,WAAA,EAAA,EAAEH,CAAAA,MAAAA,KAAOI,MAAE,MAAA,EAAQ,CAAAC,MAAA,KAAAD,MAAA,SAAA,EAAE,CAAAC,MAAA,KAAAD,MAAA,QAAA,GAC9CC,MAAC,KAAAD,MAAA,gBAAA,EACDE,CAAAA,MAAAA,KAAAA,MAAmB,SAAA,CAAA,EACQN,EAASO,CAAA,CAAQb,QAAAc,EAAE,GAAAC,CAC9C,IAAA,CACF,KAAA,CAAAC,EAAAC,CAAA,EAAAC,WAAAJ,CAAA,EACO,CAAAK,EAAAC,CAAA,EAAAF,WAEHlB,IACFW,GAAoBU,EAASC,CAAA,EAAAJ,WAAA,EAAA,EAC/BK,EAAAC,GAAA,CAAEb,EAAW,EAAA,EAAED,MAAOe,EAAA,CACtBf,MAAAc,EAAEb,MAAWa,EAAAE,YAAAA,EAAAC,QAAA,MAAA,EAAA,CAAA,EACXhB,WAAW,IAAA,CAAED,KACF,CAAA,GAAAkB,GAAA,CAAA,EAAAH,CAAA,CACXd,EAAoBkB,EAAAA,GACvBC,EAAAD,CAAA,EAAA,CAAAJ,CAAA,EAAA,CAAA,GAAAI,EAAAJ,CAAA,CAEKZ,EACJb,EAAwB,EAAA,GACrBe,GAAAA,CAAAA,EAGH,aAGMlB,EAEN,CAAA,KACe,mCACP4B,UAAAA,EACJf,QAAkBM,EAClBL,MAAOa,EACR,SAAAb,GAAAS,EAAAT,CAAA,EAEDoB,eAAiBR,CACfN,CAAAA,GAWHe,EAAAnB,EAAAoB,KAAA,EAAA,EAaHD,EAACjB,KAAA,CAEMf,QAAAA,EAEGY,kBAAQ,GAChBZ,YAAO,GACPY,QAAAA,GACAsB,uBAAiB,GACjBC,kBAAa,GACbC,EAEDC,MAAAA,EAAAxB,EAAAoB,KAAA,EAAA,EAIDI,EAAatB,KAAO,CAClB,GAAGiB,EAAWjB,KACdoB,QAAS,EACX,QAGSnC,EAAcsC,GAGtBtC,EAAAuC,OAAAC,GAEDA,EAAMC,kBAAkBH,WAAYA,EAASI,YAAQC,CAAM,CAEvDZ,EAGAU,EAAAH,GAEJ,IAAAI,QAA0BE,GAAAA,CACxBb,WACQ,IAAS,CACGc,EAAAA,EACHP,CAAgB,CAAA,GAM5B,GAAe,CAQlB,CAAA,IAIqBQ,IACTC,EAAAA,KAAAA,EAAM,CAAA,IAAA,KAAK,SAAA,CAAAC,EAAAA,IAAAnD,EAAA,CAC1B,YAAA4C,EAEM,oCACC,aAAQ,kBACA1B,GACf,QAAA,EAAA,CAAA,EAECkC,EAAAA,IAAAA,EAAAA,CACEC,YAAeT,EACjB,YAAA,uBACD,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
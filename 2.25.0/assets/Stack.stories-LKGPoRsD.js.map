{"version":3,"file":"Stack.stories-LKGPoRsD.js","sources":["../../../src/components/layout/Stack/Stack.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\n\nimport { Button } from '../../Button';\nimport { Box } from '../mocks/Box';\nimport Stack, { type StackProps } from './Stack';\n\nconst meta = {\n  title: 'layout/primitives/Stack',\n  component: Stack,\n  argTypes: {\n    gap: {\n      description: 'Whitespace between each child of the Stack',\n      options: [\n        'none',\n        'xxs',\n        'xs',\n        'sm',\n        'md',\n        'mdPlus',\n        'lg',\n        'lgPlus',\n        'xl',\n        'xlPlus',\n        'xxl',\n        'half-x',\n        '1x',\n        '2x',\n        '3x',\n        '4x',\n        '6x',\n        '8x',\n        '12x',\n        '16x',\n        '24x',\n        '32x',\n      ],\n      control: { type: 'select' },\n      table: {\n        type: {\n          summary:\n            \"'none' | 'xxs' | 'xs' | 'sm' | 'md' | 'mdPlus' | 'lg' | 'lgPlus' | 'xl' | 'xlPlus' | 'xxl' | 'half-x' | '1x' | '2x' | '3x' | '4x' | '6x' | '8x' | '12x' | '16x' | '24x' | '32x'\",\n        },\n        defaultValue: {\n          summary: \"'none'\",\n        },\n      },\n    },\n    justify: {\n      description: 'Horizontal alignment of elements inside Stack',\n      options: ['center', 'flex-end', 'flex-start', 'baseline', 'stretch'],\n      control: { type: 'select' },\n      table: {\n        type: {\n          summary: \"'center'| 'flex-end'| 'flex-start'| 'baseline'| 'stretch'\",\n        },\n        defaultValue: {\n          summary: \"'stretch'\",\n        },\n      },\n    },\n    align: {\n      description: 'Vertical alignment of elements inside Stack',\n      options: ['center', 'flex-end', 'flex-start', 'baseline', 'stretch'],\n      control: { type: 'select' },\n      table: {\n        type: {\n          summary: \"'center'| 'flex-end'| 'flex-start'| 'baseline'| 'stretch'\",\n        },\n      },\n    },\n    splitAt: {\n      description:\n        'Index of element after which the Stack is splitted. Leave `undefined` for no splitting',\n      control: { type: 'number' },\n      table: {\n        type: {\n          summary: 'number',\n        },\n      },\n    },\n    isRecursive: {\n      description: 'Should apply gap recursively (on nested levels)',\n      control: { type: 'boolean' },\n      table: {\n        type: {\n          summary: 'boolean',\n        },\n      },\n    },\n  },\n} satisfies Meta<StackProps>;\n\nexport default meta;\n\ntype Story = StoryObj<StackProps>;\n\nexport const Playground: Story = {\n  args: {\n    gap: 'lg',\n    children: (\n      <>\n        <Box />\n        <Button color=\"primary\" variant=\"solid\">\n          Click me gently\n        </Button>\n        <Box />\n      </>\n    ),\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const WithGap: Story = {\n  args: {\n    gap: 'lg',\n    children: (\n      <>\n        <Box />\n        <Box />\n        <Box />\n      </>\n    ),\n  },\n};\n\nexport const RecursiveGap: Story = {\n  args: {\n    gap: 'xl',\n    isRecursive: true,\n    children: (\n      <>\n        <Box />\n        <Box>\n          <Box />\n          <Box>\n            <Box />\n            <Box />\n          </Box>\n        </Box>\n        <Box />\n      </>\n    ),\n  },\n};\n\nexport const SplitedStack: Story = {\n  args: {\n    gap: 'sm',\n    splitAt: 2,\n    children: (\n      <>\n        <Box />\n        <Box />\n        <Box />\n      </>\n    ),\n  },\n  decorators: [(storyFn) => <div style={{ height: '20rem' }}>{storyFn()}</div>],\n};\n\nexport const WithHorizontalAlignment: Story = {\n  args: {\n    ...Playground.args,\n    justify: 'center',\n  },\n};\n"],"names":["component","Stack","argTypes","gap","description","control","type","table","summary","defaultValue","justify","align","options","splitAt","isRecursive","Meta","StackProps","Playground","children","parameters","screenshot","skip","args","jsxs","Fragment","jsx","Box","Button","WithGap","SplitedStack","RecursiveGap","height","WithHorizontalAlignment"],"mappings":"i+CAQEA,MAAAA,GAAWC,CACXC,MAAAA,0BACEC,UAAKF,EACHG,SAAAA,KACO,CAwBPC,YAAS,6CAAEC,QAAM,CAAU,OAC3BC,MACED,KACEE,KAEF,KACAC,SACED,KACF,SACF,KACD,SACDE,MACEN,SACO,KACPC,KAAWC,KAAgB,KAC3BC,KACED,KACEE,MACF,MACAC,MACED,KAAAA,EAEJH,QAAA,CAAAC,KAAA,QAAA,EACDC,MAAA,CACDI,KAAO,CACLP,QACO,iLACPC,EAAWC,aAAM,CAAUE,QAAA,QAC3BD,CACED,CACEE,EACFE,QAAA,CACFN,YAAA,gDACDQ,QAAA,CAAA,SAAA,WAAA,aAAA,WAAA,SAAA,EACDC,QAAS,CAAAP,KAAA,QAAA,EACPF,MAAAA,CAEAC,KAAS,CAAEC,QAAM,2DAAU,EAC3BC,aAAO,CACLD,QAAM,WACJE,CACF,CACF,EACFG,MAAC,CACDG,YAAa,8CACXV,QAAAA,CAAAA,SAA8D,WAAA,aAAA,WAAA,SAAA,EAC9DC,QAAS,CAAAC,KAAA,QAAA,EAAEA,MAAM,CAAWA,KAAA,CAC5BC,QAAO,2DACLD,CACEE,CACF,EACFK,QAAA,CACFT,YACF,yFACUW,QAAAA,CAAKC,KAAAA,QAAW,EAE5BT,MAAA,CAEUD,KAAW,CAERW,QAAAA,QACL,CACJd,CACAe,EAEJJ,YAAY,CACJV,YAAQ,kDAChBC,QAAA,CAAAC,KAAA,SAAA,EACAC,MAAgB,CACRD,KAAI,CACNE,QAAA,SAEH,CACDW,CACEC,CAAcC,CAAW,EAQvBJ,EAAA,CACNK,KAAQ,CACRnB,IAAS,KACTe,SAGEK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAAAC,EAAA,EAAA,QACDC,EAAA,CAAA,MAAA,UAAA,QAAA,QAAA,SAGO,kBAAA,QACCD,EAAI,EAAA,CAAA,EACTZ,CAGJ,EACAK,WAAY,CACZC,WAAc,CAAAC,KAAA,EAAA,CACd,CACA,EAEeO,EAAA,CACfN,KAAQ,CACRnB,IAAS,KACHe,SAGLK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAAAC,EAAA,EAAA,QAEYG,EAAAA,EAAAA,QACLH,EAAA,EAAA,CAAA,EACJvB,CAEAe,CAEJ,EAEYY,EAAA,CACNR,KAAA,CAEHnB,IAAA,KACSW,YAAW,GAAmBiB,SACzCR,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAAAC,EAAA,EAAA,SAEYM,EACL,CAAA,SAAA,CAAAP,EAAA,IAAAC,EAAA,EAAA,SACDT,EACM,CAAA,SAAA,CAAAQ,EAAA,IAAAC,EAAA,EAAA,QACXA,EAAA,EAAA,CAAA,EACD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"ElementCounter-CkV7_gP2.js","sources":["../../node_modules/ramda-adjunct/es/isPositive.js","../../src/components/Datatable/BatchModule/ElementCounter/ElementCounter.tsx"],"sourcesContent":["import { both, lt } from 'ramda';\nimport isNumber from './isNumber';\n\n/**\n * Checks if value is a positive `Number` primitive or object. Zero is not considered positive.\n *\n * @func isPositive\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.15.0|v1.15.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNegative|isNegative}\n * @example\n *\n * RA.isPositive(1); // => true\n * RA.isPositive(Number.MAX_VALUE); // => true\n * RA.isPositive(-Infinity); // => false\n * RA.isPositive(NaN); // => false\n * RA.isPositive('5'); // => false\n */\nvar isPositive = both(isNumber, lt(0));\nexport default isPositive;","import { useEffect, useState } from 'react';\nimport { isPositive } from 'ramda-adjunct';\nimport styled from 'styled-components';\n\nimport { Text } from '../../../Text';\nimport { abbreviateNumber, getColor, getSpace } from '../../../../utils';\nimport { DropdownMenu } from '../../../_internal/BaseDropdownMenu';\nimport { Icon } from '../../../Icon';\nimport { SSCIconNames } from '../../../../theme/icons/icons.enums';\nimport { DatatableStore } from '../../Datatable.store';\nimport { ElementCounterProps } from './ElementCounter.types';\nimport { Inline } from '../../../layout';\nimport { SpaceSizes } from '../../../../theme';\n\nconst SelectionButton = styled.button`\n  display: inline-flex;\n  align-self: center;\n  justify-content: center;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  height: 100%;\n  padding: ${getSpace(SpaceSizes.xs)};\n  font-size: var(--sscds-font-size-elementlabel-md);\n  color: ${getColor('neutral.800')};\n\n  &:hover {\n    color: ${getColor('primary.500')};\n  }\n`;\n\nexport const getCounterContent = (totalLength: number, selectedLength = 0) => (\n  <span data-testid=\"counter-content\">\n    {isPositive(selectedLength) && isPositive(totalLength)\n      ? `${abbreviateNumber(selectedLength)} of ${abbreviateNumber(\n          totalLength,\n        )} selected`\n      : isPositive(totalLength)\n      ? abbreviateNumber(totalLength)\n      : 'No data'}\n  </span>\n);\n\nfunction ElementCounterWrapper({ children, ...props }) {\n  return (\n    <Inline align=\"center\" gap={SpaceSizes.xs} {...props}>\n      {children}\n    </Inline>\n  );\n}\nElementCounterWrapper.displayName = 'ElementCounterWrapper';\n\nconst ElementCounter = ({\n  dataSize,\n  hasSelection,\n  hasOnlyPerPageSelection,\n}: ElementCounterProps) => {\n  const { selectedIds, hasExclusiveSelection } = DatatableStore.useState(\n    (s) => ({\n      selectedIds: s.selectedIds,\n      hasExclusiveSelection: s.hasExclusiveSelection,\n    }),\n  );\n\n  const [localSelectedLength, setLocalSelectedLength] = useState(\n    selectedIds.length || 0,\n  );\n\n  useEffect(() => {\n    setLocalSelectedLength(selectedIds.length);\n  }, [selectedIds]);\n\n  const computedSelectedLength = hasExclusiveSelection\n    ? dataSize - localSelectedLength\n    : localSelectedLength;\n\n  const content = getCounterContent(dataSize, computedSelectedLength);\n\n  const handleSelectAllClick = () => {\n    setLocalSelectedLength(0);\n    DatatableStore.update((s) => {\n      s.hasExclusiveSelection = true;\n      s.shouldResetSelectedRows = true;\n    });\n  };\n\n  const handleSelectNoneClick = () => {\n    setLocalSelectedLength(0);\n    DatatableStore.update((s) => {\n      s.hasExclusiveSelection = false;\n      s.shouldResetSelectedRows = true;\n    });\n  };\n\n  if (!hasSelection) {\n    return (\n      <ElementCounterWrapper>\n        <Text size=\"md\" variant=\"secondary\">\n          {content}\n        </Text>\n      </ElementCounterWrapper>\n    );\n  }\n\n  if (hasOnlyPerPageSelection) {\n    return (\n      <ElementCounterWrapper>\n        <Text size=\"md\" variant=\"secondary\">\n          {content}\n        </Text>\n        {localSelectedLength > 0 && (\n          <SelectionButton\n            aria-label=\"Select None\"\n            title=\"Select None\"\n            type=\"button\"\n            onClick={handleSelectNoneClick}\n          >\n            <Icon name={SSCIconNames.times} size=\"sm\" />\n          </SelectionButton>\n        )}\n      </ElementCounterWrapper>\n    );\n  }\n\n  return (\n    <ElementCounterWrapper>\n      <Text size=\"md\" variant=\"secondary\">\n        {content}\n      </Text>\n      {dataSize > 0 && (\n        <DropdownMenu\n          actions={[\n            {\n              name: 'select-all',\n              label: 'Select All',\n              onClick: handleSelectAllClick,\n            },\n            {\n              name: 'select-none',\n              label: 'Select None',\n              onClick: handleSelectNoneClick,\n            },\n          ]}\n          paneWidth={140}\n        >\n          <SelectionButton\n            aria-label=\"Selection options\"\n            onClick={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Icon\n              data-testid=\"selection-dropdown\"\n              name={SSCIconNames.angleDown}\n              size=\"sm\"\n            />\n          </SelectionButton>\n        </DropdownMenu>\n      )}\n    </ElementCounterWrapper>\n  );\n};\n\nexport default ElementCounter;\n"],"names":["isPositive","both","isNumber","lt","cov_1ru0yov8wp","path","hash","global","gcv","coverageData","coverage","actualCoverage","hasExclusiveSelection","SelectionButton","s","styled","button","withConfig","displayName","componentId","getSpace","SpaceSizes","xs","getColor","selectedIds","setLocalSelectedLength","DatatableStore","hasOnlyPerPageSelection","f","useState","localSelectedLength","b","length","useEffect","computedSelectedLength","dataSize","e","handleSelectAllClick","update"],"mappings":"osBAsBA,IAAIA,EAAaC,EAAKC,EAAUC,EAAG,CAAC,CAAC,ECRA,SAAAC,GAAA,CAAA,IAAAC,EAAA,qHAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,qHAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,wBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,C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","x_google_ignoreList":[0]}
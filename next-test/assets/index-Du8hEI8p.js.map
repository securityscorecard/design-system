{"version":3,"file":"index-Du8hEI8p.js","sources":["../../src/components/_internal/BaseButton/BaseButton.enums.ts","../../src/components/_internal/BaseButton/BaseStyledButton.tsx","../../src/components/_internal/BaseButton/BaseButton.tsx"],"sourcesContent":["export const BaseButtonVariants = {\n  solid: 'solid',\n  outline: 'outline',\n  text: 'text',\n  ghost: 'ghost',\n} as const;\n\nexport const BaseButtonColors = {\n  primary: 'primary',\n  secondary: 'secondary',\n  success: 'success',\n  danger: 'danger',\n} as const;\n","import styled, { css } from 'styled-components';\nimport { includes, pipe } from 'ramda';\n\nimport {\n  createMarginSpacing,\n  getSpace,\n  getToken,\n  pxToRem,\n} from '../../../utils';\nimport { BaseStyledButtonProps } from './BaseButton.types';\nimport { BaseButtonVariants } from './BaseButton.enums';\nimport { Padbox } from '../../layout';\n\n/*\n * BUTTON VARIANTS\n */\n\nconst ButtonSolid = css<BaseStyledButtonProps>`\n  text-decoration: none;\n  background-color: var(--sscds-color-background-action-base-default);\n  color: var(--sscds-color-text-inverse);\n\n  &:hover,\n  &.hover {\n    color: var(--sscds-color-text-inverse);\n    background-color: var(--sscds-color-background-action-base-hover);\n  }\n\n  ${({ $color }) =>\n    $color === 'danger' &&\n    css`\n      background-color: var(--sscds-color-background-action-danger-default);\n\n      &:hover,\n      &.hover {\n        background-color: var(--sscds-color-background-action-danger-hover);\n      }\n    `};\n\n  &:disabled,\n  &.disabled {\n    background-color: var(--sscds-color-background-action-base-disabled);\n    color: var(--sscds-color-text-disabled);\n  }\n`;\n\nconst ButtonOutline = css<BaseStyledButtonProps>`\n  background-color: var(--sscds-color-background-action-subtle-default);\n  border: 1px solid var(--sscds-color-border-action-subtle);\n  color: var(--sscds-color-text-default);\n\n  &:hover,\n  &.hover {\n    background-color: var(--sscds-color-background-action-subtle-hover);\n    color: var(--sscds-color-text-default);\n    border-color: var(--sscds-color-border-action-subtle);\n  }\n\n  &:disabled,\n  &.disabled {\n    color: var(--sscds-color-text-disabled);\n    border-color: var(--sscds-color-text-action-disabled);\n    background-color: var(--sscds-color-background-action-subtle-default);\n  }\n`;\n\nconst ButtonText = css<BaseStyledButtonProps>`\n  background-color: var(--sscds-color-background-action-ghost-default);\n  border-color: transparent;\n  padding-left: 0;\n  padding-right: 0;\n  color: var(--sscds-color-text-action);\n\n  &:hover,\n  &.hover {\n    color: var(--sscds-color-text-action);\n    background: var(--sscds-color-background-action-ghost-hover);\n  }\n\n  ${({ $color }) =>\n    $color === 'secondary'\n      ? css`\n          color: var(--sscds-color-text-default);\n\n          &:hover,\n          &.hover {\n            color: var(--sscds-color-text-default);\n          }\n        `\n      : $color === 'danger' &&\n        css`\n          color: var(--sscds-color-text-danger);\n\n          &:hover,\n          &.hover {\n            color: var(--sscds-color-text-danger);\n            background-color: var(\n              --sscds-color-background-action-danger-ghost-hover\n            );\n          }\n        `};\n\n  &:disabled,\n  &.disabled {\n    color: var(--sscds-color-text-disabled);\n    background-color: var(--sscds-color-background-action-ghost-default);\n  }\n`;\n\nconst ButtonGhost = css<BaseStyledButtonProps>`\n  ${ButtonText}\n  padding-left: ${getSpace('sm')};\n  padding-right: ${getSpace('sm')};\n`;\n\nconst buttonVariants = {\n  [BaseButtonVariants.solid]: ButtonSolid,\n  [BaseButtonVariants.outline]: ButtonOutline,\n  [BaseButtonVariants.text]: ButtonText,\n  [BaseButtonVariants.ghost]: ButtonGhost,\n};\n\nconst BaseStyledButton = styled(Padbox).withConfig({\n  shouldForwardProp: (property) =>\n    !includes(property, ['theme', 'paddingType', 'paddingSize']),\n})<BaseStyledButtonProps>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--sscds-radii-button);\n  font-family: var(--sscds-font-family-body);\n  font-weight: var(--sscds-font-weight-elementlabel-default);\n  cursor: pointer;\n  text-align: center;\n  white-space: nowrap;\n  transition: var(--sscds-action-transition),\n    transform 50ms var(--sscds-transition-fn);\n\n  ${({ $margin }) => createMarginSpacing($margin)};\n  ${({ $isExpanded }) => $isExpanded && 'width: 100%;'};\n  ${({ disabled }) => disabled && 'cursor: not-allowed;'};\n  ${({ $isLoading }) => $isLoading && 'cursor: progress;'};\n\n  height: ${pipe(getToken('size-action-size'), pxToRem)};\n  line-height: 1;\n  font-size: var(--sscds-font-size-elementlabel-sm);\n  ${({ $hasOnlyIcon }) =>\n    $hasOnlyIcon &&\n    css`\n      width: ${pipe(getToken('size-action-size'), pxToRem)};\n    `};\n\n  ${({ $variant }) => buttonVariants[$variant]};\n\n  &,\n  &:hover,\n  &:focus-visible,\n  &:active {\n    text-decoration: none;\n  }\n\n  &:active,\n  &&&.active {\n    transform: scale(0.98);\n  }\n\n  @media (prefers-reduced-motion) {\n    &:active,\n    &&&.active {\n      transform: scale(1);\n    }\n  }\n  &:disabled,\n  &.disabled {\n    opacity: 0.75;\n  }\n`;\n\nexport default BaseStyledButton;\n","import type { ComponentProps } from 'react';\nimport {\n  isNotNull,\n  isNotUndefined,\n  isNull,\n  isUndefined,\n  noop,\n} from 'ramda-adjunct';\nimport { useTheme } from 'styled-components';\nimport cls from 'classnames';\n\nimport { IconTypes } from '../../../theme/icons/icons.enums';\nimport { SpaceSizes } from '../../../theme';\nimport { requireRouterLink } from '../../../utils/require-router-link';\nimport { PaddingTypes } from '../../layout/Padbox/Padbox.enums';\nimport { Spinner } from '../../Spinner';\nimport { Icon } from '../../Icon';\nimport { Inline } from '../../layout';\nimport BaseStyledButton from './BaseStyledButton';\nimport { BaseButtonColors, BaseButtonVariants } from './BaseButton.enums';\nimport { BaseButtonProps } from './BaseButton.types';\nimport { CLX_COMPONENT } from '../../../theme/constants';\nimport { useLogger } from '../../../hooks/useLogger';\n\nconst BaseButton = ({\n  children,\n  variant = BaseButtonVariants.solid,\n  color = BaseButtonColors.primary,\n  iconStart,\n  iconEnd,\n  iconName,\n  iconType = IconTypes.ssc,\n  as = null,\n  href = null,\n  to = null,\n  margin = 'none',\n  onClick = noop,\n  isDisabled = false,\n  isLoading = false,\n  isExpanded = false,\n  loadingText = 'Loading',\n  className,\n  ...props\n}: BaseButtonProps & ComponentProps<typeof BaseStyledButton>) => {\n  let RouterLink = null;\n  const theme = useTheme();\n  const { warn } = useLogger('Button');\n  if (isNull(as) && isNotNull(to)) {\n    RouterLink = requireRouterLink();\n  }\n\n  if (isDisabled && href) {\n    warn(\n      '\"isDisabled\" prop in <Button> component will be ignored if the \"href\" prop is defined',\n    );\n  }\n\n  const domTag =\n    as ??\n    (isNotNull(href)\n      ? 'a' // render 'a' tag if 'href' is present\n      : isNotNull(to)\n      ? RouterLink // render 'Link' if 'to' is present\n      : 'button'); // use default\n\n  if (isNull(RouterLink) && isNull(domTag)) {\n    return null;\n  }\n\n  const hasStartIcon = isNotUndefined(iconName) || isNotUndefined(iconStart);\n  const hasIcon = hasStartIcon || isNotUndefined(iconEnd);\n  const hasOnlyIcon = hasStartIcon && isUndefined(children);\n  const content = isLoading ? (\n    <>\n      <Spinner\n        borderWidth={2}\n        height={theme.tokens['font-action-size']}\n        verticalMargin={0}\n        width={theme.tokens['font-action-size']}\n        dark\n      />\n      {!hasOnlyIcon && <span>{loadingText}</span>}\n    </>\n  ) : hasIcon ? (\n    <>\n      {hasStartIcon && (\n        <Icon\n          name={iconStart?.name ?? iconName}\n          type={iconStart?.type ?? iconType}\n        />\n      )}\n      {isNotUndefined(children) && <span>{children}</span>}\n      {isNotUndefined(iconEnd) && !hasOnlyIcon && (\n        <Icon name={iconEnd?.name} type={iconEnd?.type ?? 'ssc'} />\n      )}\n    </>\n  ) : (\n    children\n  );\n\n  return (\n    <BaseStyledButton\n      $color={color}\n      $hasOnlyIcon={hasOnlyIcon}\n      $isExpanded={isExpanded}\n      $isLoading={isLoading}\n      $margin={margin}\n      $variant={variant}\n      as={domTag}\n      className={cls(CLX_COMPONENT, className, 'sscds-button')}\n      disabled={isDisabled || isLoading}\n      href={href}\n      paddingSize={SpaceSizes.md}\n      paddingType={PaddingTypes.squish}\n      to={to}\n      onClick={onClick}\n      {...props}\n      aria-label={isLoading && hasOnlyIcon ? 'Loading' : props?.['aria-label']}\n    >\n      <Inline align=\"center\" gap={SpaceSizes.sm}>\n        {content}\n      </Inline>\n    </BaseStyledButton>\n  );\n};\n\nexport default BaseButton;\n"],"names":["cov_1th2d231ad","actualCoverage","BaseButtonVariants","solid","outline","text","ghost","BaseButtonColors","s","secondary","success","danger","ButtonText","$color","cov_kpymdsiw3","f","b","css","cov_18hr2qg5c6","path","hash","global","gcv","coverageData","coverage","iconName","BaseButton","children","variant","color","primary","iconStart","noop","iconType","IconTypes","ssc","as","href","className","margin","onClick","isDisabled","isLoading","isExpanded","warn","RouterLink","theme","useTheme","useLogger","isNull","isNotNull","to","requireRouterLink","hasStartIcon"],"mappings":"s9DAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAA,MAAME,GAAAA,IAAAA,OAAqB,CAChCC,MAAO,QACPC,QAAS,UACTC,KAAM,OACNC,MAAO,OACT,GAGWC,GAAAP,EAAAQ,EAAAA,OAAA,CACTC,QAAW,UACXC,UAAS,YACTC,QAAQ,UACVA,OAAA,grLC0G6BC,MAAAA,IAAAA,EAAAA,EAAAA,EAAAA,CAAAA,IAAAA,EAsBVC,CAAAA,yPAAAA,qIAAAA,EAAAA,CAAAA,CAAAA,OAAAA,CAAA,KAAAC,IAAAC,EAAA,CAAA,IAAAD,EAAA,EAAAN,EAAAM,CAAAA,IAAAA,IAAAE,EAAA,CAAA,EAAA,CAAA,IAAAH,IAAAC,WAAAA,EAAAE,EAAAA,UAAAC,EAAA,CAAA,2JAAA,CAAA,GAAA;;2gDC5GZ,SAAAC,GAAA,CAAA,IAAAC,EAAA,iGAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,iGAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA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"}
import{j as r}from"./jsx-runtime-CfatFE5O.js";import{r as d}from"./index-ClcD9ViR.js";import{D as a}from"./Datatable-x2ZfM_pe.js";import{a as c,T as e}from"./argTypes-CMcsPgbk.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLogger-BIFF4Ira.js";import"./index-C2fNon3Z.js";import"./constants-CHqWh-7J.js";import"./space.enums-BIVz6JhH.js";import"./_isObject-BZZHHNGj.js";import"./slice-a4xO8Rfj.js";import"./styled-components.browser.esm-6IU7b-y2.js";import"./DSProvider-oeie4wyM.js";import"./index-_KdZNTQd.js";import"./theme-VOBSdC0d.js";import"./colors-2yNNI7_i.js";import"./PaginationToolbar-BumGbSft.js";import"./SelectionToolbar-BIj_XAYC.js";import"./index-t408_oKr.js";import"./Icon-CwDBfXxP.js";import"./index-BLQl-HhB.js";import"./index-DbwGX_n3.js";import"./index-DxcpycWO.js";import"./index-D-VPAycD.js";import"./index-D4bv78R3.js";import"./Padbox-QeDNAg-Y.js";import"./index-CJqnHCRB.js";import"./prop-DxwKVRPv.js";import"./Inline-CJoeeTWo.js";import"./Inline.enums-L64S19IZ.js";import"./Cluster-EcHytK4z.js";import"./index-fVh6sz_B.js";import"./Button-F6ZYDBEp.js";import"./components-C9ZynCTM.js";import"./index-DKZQhKLO.js";import"./Spinner-C4Y4qwgQ.js";import"./useSafeTranslation-CTytszpq.js";import"./en-US-DTEh3xIi.js";import"./pluck-CostYriq.js";import"./IconButton-D-PcuZjI.js";import"./useContainerQuery-Cae4Sqz1.js";import"./Skeleton-CkPRSvbb.js";import"./useLocalStorageState-D2NPfI6N.js";import"./Paragraph-YvM1PAod.js";import"./index-BlmJOztB.js";import"./Tooltip-CNTka1Rj.js";import"./FloatingContext-Iczo9egI.js";import"./index-oSnT1g_s.js";import"./CloseButton-BnxGXhE2.js";import"./index-DAjbAeX4.js";import"./minus-rUvolOxF.js";import"./checkCircleSolid-D_DFWg_A.js";import"./sortable.esm-C-iNasD-.js";import"./modifiers.esm-ByjRBgE8.js";import"./index-xJp9Kd2E.js";import"./index-CxXlF41o.js";import"./Pill-BDetg8sM.js";import"./PillRemoveButton-CrYU6s_g.js";const Se={title:"components/DatatableV2/FullscreenMode",component:a,parameters:{screenshot:{skip:!0},docs:{story:{inline:!1,height:600}}},argTypes:c},u=e.bind({});u.args=e.args;const g=e.bind({});g.args={...e.args,enableFullScreenMode:!1};const p=e.bind({});p.args={...e.args,initialState:{isFullscreenMode:!0}};p.parameters={screenshot:{skip:!1}};const t=m=>{const[o,l]=d.useState(!1);return r.jsxs(r.Fragment,{children:[r.jsx(a,{state:{isFullscreenMode:o},manualSorting:!0,onFullscreenModeChange:l,...m}),r.jsxs("div",{children:[r.jsx("strong",{children:"Debug:"}),r.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=e.args;t.__docgenInfo={description:"",methods:[],displayName:"FullscreenModeManagedState"};var s,i,n;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [isFullscreenMode, setIsFullscreenMode] = useState(false);
  return <>
      <Datatable state={{
      isFullscreenMode
    }} manualSorting onFullscreenModeChange={setIsFullscreenMode} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(isFullscreenMode, null, 2)}</pre>
      </div>
    </>;
}`,...(n=(i=t.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const he=["FullscreenModeEnabled","FullscreenModeDisabled","InitialFullscreenMode","FullscreenModeManagedState"];export{g as FullscreenModeDisabled,u as FullscreenModeEnabled,t as FullscreenModeManagedState,p as InitialFullscreenMode,he as __namedExportsOrder,Se as default};
//# sourceMappingURL=FullscreenMode.stories-CZUHn1Hc.js.map

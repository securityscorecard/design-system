import{j as i}from"./jsx-runtime-CfatFE5O.js";import{r as g}from"./index-ClcD9ViR.js";import{D as s}from"./Datatable-x2ZfM_pe.js";import{a as u,T as n,c}from"./argTypes-CMcsPgbk.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLogger-BIFF4Ira.js";import"./index-C2fNon3Z.js";import"./constants-CHqWh-7J.js";import"./space.enums-BIVz6JhH.js";import"./_isObject-BZZHHNGj.js";import"./slice-a4xO8Rfj.js";import"./styled-components.browser.esm-6IU7b-y2.js";import"./DSProvider-oeie4wyM.js";import"./index-_KdZNTQd.js";import"./theme-VOBSdC0d.js";import"./colors-2yNNI7_i.js";import"./PaginationToolbar-BumGbSft.js";import"./SelectionToolbar-BIj_XAYC.js";import"./index-t408_oKr.js";import"./Icon-CwDBfXxP.js";import"./index-BLQl-HhB.js";import"./index-DbwGX_n3.js";import"./index-DxcpycWO.js";import"./index-D-VPAycD.js";import"./index-D4bv78R3.js";import"./Padbox-QeDNAg-Y.js";import"./index-CJqnHCRB.js";import"./prop-DxwKVRPv.js";import"./Inline-CJoeeTWo.js";import"./Inline.enums-L64S19IZ.js";import"./Cluster-EcHytK4z.js";import"./index-fVh6sz_B.js";import"./Button-F6ZYDBEp.js";import"./components-C9ZynCTM.js";import"./index-DKZQhKLO.js";import"./Spinner-C4Y4qwgQ.js";import"./useSafeTranslation-CTytszpq.js";import"./en-US-DTEh3xIi.js";import"./pluck-CostYriq.js";import"./IconButton-D-PcuZjI.js";import"./useContainerQuery-Cae4Sqz1.js";import"./Skeleton-CkPRSvbb.js";import"./useLocalStorageState-D2NPfI6N.js";import"./Paragraph-YvM1PAod.js";import"./index-BlmJOztB.js";import"./Tooltip-CNTka1Rj.js";import"./FloatingContext-Iczo9egI.js";import"./index-oSnT1g_s.js";import"./CloseButton-BnxGXhE2.js";import"./index-DAjbAeX4.js";import"./minus-rUvolOxF.js";import"./checkCircleSolid-D_DFWg_A.js";import"./sortable.esm-C-iNasD-.js";import"./modifiers.esm-ByjRBgE8.js";import"./index-xJp9Kd2E.js";import"./index-CxXlF41o.js";import"./Pill-BDetg8sM.js";import"./PillRemoveButton-CrYU6s_g.js";const Dn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}},argTypes:u},d=n.bind({});d.args=n.args;const P=n.bind({});P.args={...n.args,enableColumnPinning:!1};const C=n.bind({});C.args={...n.args,columns:[...c,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;t.__docgenInfo={description:"",methods:[],displayName:"ColumnPinningManagedState"};var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const jn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{d as ColumnPinningEnabled,t as ColumnPinningManagedState,P as DisabledColumnPinning,C as DisabledColumnPinningForColumn,a as InitialColumnPinning,jn as __namedExportsOrder,Dn as default};
//# sourceMappingURL=ColumnPinning.stories-DCwCmxVn.js.map

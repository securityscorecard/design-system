{"version":3,"file":"Pagination-Cv5QVaMl.js","sources":["../../node_modules/ramda/es/unfold.js","../../src/components/Pagination/PaginationItem.tsx","../../src/components/Pagination/PageButtons.tsx","../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import styled, { css } from 'styled-components';\n\nimport { pxToRem } from '../../utils';\nimport { Padbox } from '../layout';\nimport { PaginationItemProps } from './Pagination.types';\n\nconst StyledPaginationComponent = styled.button<{\n  $isShrinked: boolean;\n  $isCurrent: boolean;\n}>`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  min-width: ${pxToRem(40)};\n  height: ${pxToRem(32)};\n  padding: ${pxToRem(5, 6)};\n  margin: ${pxToRem(0, 4)};\n  background: none;\n  border: 1px solid transparent;\n  border-radius: var(--sscds-radii-button);\n  font-size: var(--sscds-font-size-elementlabel-sm);\n  line-height: var(--sscds-font-lineheight-elementlabel);\n  color: var(--sscds-color-text-default);\n  cursor: pointer;\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n  &:last-of-type {\n    margin-right: 0;\n  }\n  &:disabled {\n    color: var(--sscds-color-text-disabled);\n    cursor: default;\n  }\n\n  ${({ $isShrinked }) =>\n    $isShrinked &&\n    css`\n      min-width: ${pxToRem(32)};\n    `};\n\n  ${({ $isCurrent }) =>\n    $isCurrent\n      ? css`\n          border-color: var(--sscds-color-border-surface-dynamic);\n          background-color: var(--sscds-color-background-surface-dynamic);\n          font-size: var(--sscds-font-size-elementlabel-md);\n          font-weight: var(--sscds-font-weight-elementlabel-strong);\n          cursor: default;\n        `\n      : css`\n          &:hover {\n            border-color: var(--sscds-color-border-surface-hover);\n            background-color: var(--sscds-color-background-surface-hover);\n          }\n        `};\n`;\n\nexport const PaginationItem = ({\n  children,\n  isDisabled,\n  isCurrent,\n  isShrinked,\n  onClick,\n  key,\n  ...props\n}: PaginationItemProps) => {\n  const handleOnClick = () => {\n    if (isCurrent) {\n      return;\n    }\n\n    onClick();\n  };\n  return (\n    <StyledPaginationComponent\n      key={key}\n      $isCurrent={isCurrent}\n      $isShrinked={isShrinked}\n      data-testid=\"pagination-item\"\n      disabled={isDisabled}\n      type=\"button\"\n      onClick={handleOnClick}\n      {...props}\n    >\n      {children}\n    </StyledPaginationComponent>\n  );\n};\n\nexport const PaginationItemElipsis = styled(Padbox).attrs(() => ({\n  children: '...',\n}))`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${pxToRem(40)};\n  height: ${pxToRem(32)};\n  font-size: var(--sscds-font-size-elementlabel-sm);\n  line-height: var(--sscds-font-lineheight-elementlabel);\n  color: var(--sscds-color-text-subtle);\n  margin: ${pxToRem(0, 4)};\n`;\n","import { useMemo } from 'react';\nimport { unfold } from 'ramda';\n\nimport { PaginationItem, PaginationItemElipsis } from './PaginationItem';\nimport { PageButtonsProps } from './Pagination.types';\n\nconst generatePages = (start: number, end: number): number[] =>\n  unfold((p) => (p > end ? false : [p, p + 1]), start);\n\nexport const calculatePagePositions: (\n  currentPage: number,\n  pageCount: number,\n  positionsCount: number,\n) => {\n  showRightEllipsis: boolean;\n  showLeftEllipsis: boolean;\n  pages: number[];\n} = (currentPage, pageCount, positionsCount) => {\n  // number of fixed positions for edge sections\n  // [POSITIONS - 3 (first+last + elipsis)]\n  const threshold = positionsCount - 3;\n\n  const startPage =\n    // is at left edge section of pagination\n    currentPage < threshold\n      ? 2 // fixed, second page\n      : // is at right edge section of pagination\n      currentPage > pageCount - threshold\n      ? pageCount - threshold\n      : // this will count positions before current page in middle section\n        // [current page - round up(POSITIONS - 4 (first+last+2 elipsis) - 1 (current page))]\n        currentPage - Math.ceil((positionsCount - 4 - 1) / 2);\n  const endPage =\n    // is at left edge section of pagination\n    currentPage < threshold\n      ? positionsCount - 2\n      : // is at right edge section of pagination\n      currentPage > pageCount - threshold\n      ? pageCount - 1 // fixed, second last page\n      : // this will count positions after current page in middle section\n        // [current page - round down(POSITIONS - 4 (first+last+2 elipsis) - 1 (current page))]\n        currentPage + Math.floor((positionsCount - 4 - 1) / 2);\n\n  const pages = generatePages(startPage, endPage);\n\n  return {\n    showLeftEllipsis: startPage > 2,\n    showRightEllipsis: endPage < pageCount - 1,\n    pages,\n  };\n};\n\nconst formatNumber = (val: number) =>\n  new Intl.NumberFormat('en-US').format(val);\n\nconst PageButtons = ({\n  currentPage,\n  pageCount,\n  onChange,\n  positions,\n  renderItem = PaginationItem,\n}: PageButtonsProps) => {\n  const { pages, showLeftEllipsis, showRightEllipsis } = useMemo(\n    () => calculatePagePositions(currentPage, pageCount, positions),\n    [currentPage, pageCount, positions],\n  );\n\n  if (pageCount <= positions) {\n    return (\n      <>\n        {generatePages(1, pageCount).map((page) =>\n          renderItem({\n            key: `page-${page}`,\n            page,\n            isCurrent: page === currentPage,\n            onClick: () => onChange(page),\n            children: formatNumber(page),\n          }),\n        )}\n      </>\n    );\n  }\n\n  return positions !== 1 ? (\n    <>\n      {renderItem({\n        page: 1,\n        isCurrent: currentPage === 1,\n        onClick: () => onChange(1),\n        children: <>1</>,\n      })}\n      {showLeftEllipsis && <PaginationItemElipsis />}\n      {pages.map((page) =>\n        renderItem({\n          key: String(page),\n          page,\n          isCurrent: currentPage === page,\n          onClick: () => onChange(page),\n          children: formatNumber(page),\n        }),\n      )}\n      {showRightEllipsis && <PaginationItemElipsis />}\n      {renderItem({\n        page: pageCount,\n        isCurrent: currentPage === pageCount,\n        onClick: () => onChange(pageCount),\n        children: formatNumber(pageCount),\n      })}\n    </>\n  ) : (\n    <>\n      {renderItem({\n        key: String(currentPage),\n        page: currentPage,\n        isCurrent: true,\n        onClick: () => onChange(currentPage),\n        children: formatNumber(currentPage),\n      })}\n    </>\n  );\n};\n\nexport default PageButtons;\n","import { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Icon } from '../Icon';\nimport { PaginationItem } from './PaginationItem';\nimport PageButtons from './PageButtons';\nimport { Inline } from '../layout';\nimport { PaginationProps } from './Pagination.types';\nimport { SpaceSizes } from '../../theme';\nimport { CLX_COMPONENT } from '../../theme/constants';\n\nconst Pagination = ({\n  pageCount,\n  currentPage,\n  onPageChange,\n  pageButtonsCount = 8,\n  renderItem = PaginationItem,\n}: PaginationProps) => (\n  <Inline className={CLX_COMPONENT} gap={SpaceSizes.sm} justify=\"center\">\n    {renderItem &&\n      renderItem({\n        'aria-label': 'Previous page',\n        page: currentPage - 1,\n        isDisabled: currentPage - 1 === 0,\n        isShrinked: true,\n        onClick: () => onPageChange(currentPage - 1),\n        children: <Icon name={SSCIconNames.longArrowLeft} />,\n      })}\n    {pageButtonsCount !== 0 && (\n      <PageButtons\n        currentPage={currentPage}\n        pageCount={pageCount}\n        positions={pageButtonsCount}\n        renderItem={renderItem}\n        onChange={onPageChange}\n      />\n    )}\n    {renderItem &&\n      renderItem({\n        'aria-label': 'Next page',\n        page: currentPage + 1,\n        isDisabled: currentPage + 1 > pageCount,\n        isShrinked: true,\n        onClick: () => onPageChange(currentPage + 1),\n        children: <Icon name={SSCIconNames.longArrowRight} />,\n      })}\n  </Inline>\n);\n\nexport default Pagination;\n"],"names":["unfold","_curry2","fn","seed","pair","result","StyledPaginationComponent","cov_238luiekfu","s","styled","button","withConfig","displayName","componentId","isDisabled","isCurrent","isShrinked","onClick","cov_ywc797p02","path","hash","global","gcv","coverageData","coverage","actualCoverage","generatePages","start","end","startPage","calculatePagePositions","currentPage","pageCount","positionsCount","f","threshold","b","ceil","showRightEllipsis","PageButtons","positions","pages","endPage","showLeftEllipsis","useMemo","page","children","renderItem","PaginationItem","onChange","key","map","cov_28n95n1w3c","onPageChange","pageButtonsCount","jsxs","Inline","className","CLX_COMPONENT","gap","SpaceSizes","sm","justify","jsx","Icon","name","SSCIconNames","longArrowLeft"],"mappings":"gkBA2BA,IAAIA,EAEJC,EAAQ,SAAgBC,EAAIC,EAAM,CAIhC,QAHIC,EAAOF,EAAGC,CAAI,EACdE,EAAS,CAAA,EAEND,GAAQA,EAAK,QAClBC,EAAOA,EAAO,MAAM,EAAID,EAAK,CAAC,EAC9BA,EAAOF,EAAGE,EAAK,CAAC,CAAC,EAGnB,OAAOC,CACT,CAAC,y+HCjC8C,MAAAC,GAAAC,EAAA,EAAAC,EAAAC,CAAAA,IAAAA,EAAAC,OAAAC,YAAAC,YAAA,4CAAAC,YAAA,aAAA,CAwD7CC,EAAAA,CAAAA,kFAAAA,WAAAA,YAAAA,WAAAA,qXAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,CAAAA,EACAC,EAAAA,EAAAA,CAAAA,45DCnBgC,SAAAC,GAAA,CAAA,IAAAC,EAAA,wFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,wFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,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","x_google_ignoreList":[0]}
{"version":3,"file":"Banner-xcTNtLLh.js","sources":["../../src/components/Banner/Banner.enums.ts","../../src/components/Banner/Banner.tsx"],"sourcesContent":["export const BannerVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n} as const;\n","import { type MouseEvent, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { isNonEmptyArray, noop } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { BannerContentProps, BannerProps } from './Banner.types';\nimport {\n  AbsoluteLinkActionKind,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport { BannerVariants } from './Banner.enums';\nimport { Button } from '../Button';\nimport { Inline, Padbox, Stack } from '../layout';\nimport { Text } from '../Text';\nimport { CloseButton } from '../CloseButton';\nimport { BaseToastBanner } from '../_internal/BaseToastBanner';\nimport { baseToastBannerColorVariants } from '../_internal/BaseToastBanner/BaseToastBanner';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { useContainerQuery } from '../../hooks/useContainerQuery';\n\nconst bannerBorderColor = {\n  [BannerVariants.info]: 'var(--sscds-color-border-info)',\n  [BannerVariants.warn]: 'var(--sscds-color-border-warning)',\n  [BannerVariants.error]: 'var(--sscds-color-border-danger)',\n  [BannerVariants.success]: 'var(--sscds-color-border-success)',\n};\n\nconst StyledPadbox = styled(Padbox)<{ $variant?: BannerProps['variant'] }>`\n  background-color: ${({ $variant }) => baseToastBannerColorVariants[$variant]};\n  border-radius: var(--sscds-radii-surface-md);\n  border: 1px solid ${({ $variant }) => bannerBorderColor[$variant]};\n`;\n\nconst ContentWrapper = styled(Padbox)`\n  padding-left: 0rem;\n`;\n\nconst CHANGE_LAYOUT_BREAKPOINT = 'change-banner-layout';\n\nconst BannerContent = ({ children, actions, isInline }: BannerContentProps) => (\n  <>\n    <Text as=\"div\" style={{ maxWidth: '115ch' }}>\n      {children}\n    </Text>\n    {isNonEmptyArray(actions) && (\n      <Inline\n        gap=\"md\"\n        style={{ marginBlock: isInline ? '-0.375rem' : undefined }}\n      >\n        {actions.map((action) => (\n          <Button\n            key={action.name}\n            href={(action as AbsoluteLinkActionKind<[MouseEvent]>).href}\n            name={action.name}\n            style={{ height: '2rem' }}\n            to={(action as RelativeLinkActionKind<[MouseEvent]>).to}\n            variant=\"outline\"\n            onClick={action.onClick}\n          >\n            {action.label}\n          </Button>\n        ))}\n      </Inline>\n    )}\n  </>\n);\n\nconst Banner = ({\n  children,\n  variant = BannerVariants.info,\n  actions,\n  isDismissable = true,\n  onClose = noop,\n  className,\n  changeLayoutBreakpoint = 960,\n  ...props\n}: BannerProps) => {\n  const changeLayoutQuery = useMemo(\n    () => ({\n      [CHANGE_LAYOUT_BREAKPOINT]: { minWidth: changeLayoutBreakpoint },\n    }),\n    [changeLayoutBreakpoint],\n  );\n  const [query, containerRef] = useContainerQuery(changeLayoutQuery);\n  const isInline = query[CHANGE_LAYOUT_BREAKPOINT];\n  return (\n    <StyledPadbox\n      ref={containerRef}\n      $variant={variant}\n      className={cls(CLX_COMPONENT, className)}\n      {...props}\n    >\n      <BaseToastBanner hasBackground={false} variant={variant}>\n        <ContentWrapper paddingSize=\"md\">\n          <Inline align=\"flex-start\" gap=\"xl\" stretch={1}>\n            {isInline ? (\n              <Inline align=\"flex-start\" gap=\"md\" justify=\"space-between\">\n                <BannerContent actions={actions} isInline>\n                  {children}\n                </BannerContent>\n              </Inline>\n            ) : (\n              <Stack align=\"center\" gap=\"md\">\n                <BannerContent actions={actions}>{children}</BannerContent>\n              </Stack>\n            )}\n            {isDismissable && (\n              <CloseButton\n                aria-label=\"Close banner\"\n                marginCompensation=\"md\"\n                style={{ marginBlock: '0.125rem' }}\n                onClose={onClose}\n              />\n            )}\n          </Inline>\n        </ContentWrapper>\n      </BaseToastBanner>\n    </StyledPadbox>\n  );\n};\n\nBanner.displayName = 'Banner';\n\nexport default Banner;\n"],"names":["cov_15hpyezock","actualCoverage","BannerVariants","info","warn","error","success","cov_1hsumywhu0","path","hash","global","gcv","coverageData","coverage","StyledPadbox","styled","displayName","componentId","$variant","bannerBorderColor","withConfig","f","s","baseToastBannerColorVariants","BannerContent","Padbox","actions","CHANGE_LAYOUT_BREAKPOINT","children","isInline","jsxs","Fragment","style","maxWidth","marginBlock","b","isNonEmptyArray","jsx","Inline","gap","Banner","noop","className","height","props","variant","changeLayoutQuery","useMemo","changeLayoutBreakpoint","action","name"],"mappings":"ujDAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAME,MAAAA,GAAAA,EAAAA,EAAAA,OAAiB,CAC5BC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,SACX,GCsBmC,SAAAC,GAAA,CAAA,IAAAC,EAAA,+EAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,+EAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAA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"}
{"version":3,"file":"columns-CzgG-477.js","sources":["../../node_modules/dayjs/plugin/relativeTime.js","../../src/components/_internal/BaseTable/mocks/columns.tsx"],"sourcesContent":["!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","import { action } from '@storybook/addon-actions';\nimport { type ReactElement, memo } from 'react';\nimport { CellProps, Column } from 'react-table';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { pipe, reduce, toPairs } from 'ramda';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport { TextSizes, TextVariants } from '../../../Text/Text.enums';\nimport { Tooltip } from '../../../Tooltip';\nimport { abbreviateNumber } from '../../../../utils';\nimport { Data } from './types';\nimport { Strong, Text } from '../../../Text';\n\nexport const composeQuery = pipe(\n  toPairs,\n  reduce((acc, [key, value]) => `${acc}&${key}=${value}`, ''),\n);\nexport const simpleColumns: Column<Data>[] = [\n  {\n    Header: 'IP Address',\n    accessor: 'ipAddress',\n    width: 200,\n    cellType: 'link',\n    cellLinkComponent: 'a',\n    cellHrefComposer: (val: string, row: Data): string =>\n      `?value=${val}&${composeQuery(row)}`,\n  },\n  {\n    Header: 'Status',\n    headerTooltip: <Text>Show status of the asset.</Text>,\n    accessor: 'status',\n    width: 96,\n    Cell: memo(({ value }: { value: string }): ReactElement => {\n      switch (value) {\n        case 'Removed':\n        case 'Dynamic':\n        case 'Claimed':\n        case 'Disputed':\n          return (\n            <Text size={TextSizes.inherit} variant={TextVariants.secondary}>\n              {value}\n            </Text>\n          );\n\n        default:\n          return <Strong>{value}</Strong>;\n      }\n    }),\n  },\n  {\n    Header: 'Domains',\n    accessor: 'domainsCount',\n    width: 96,\n    cellTooltipPopupComposer: (val: string, row: Data): ReactElement => (\n      <div>\n        <div>{val}</div>\n        <pre>\n          <code>{JSON.stringify(row, null, 2)}</code>\n        </pre>\n      </div>\n    ),\n  },\n  {\n    Header: 'Detection',\n    accessor: 'detectionMethod',\n    width: 160,\n    cellType: 'multiValue',\n    cellOnClick: action('onCellValueClick (detectionMethod)'),\n  },\n  {\n    Header: 'Source',\n    accessor: 'source',\n    width: 160,\n    cellType: 'multiValue',\n    multiValueDisplayLimit: 3,\n  },\n  { Header: 'Country', accessor: 'country', width: 144 },\n  {\n    Header: 'Issues',\n    accessor: 'issuesCount',\n    width: 88,\n    cellType: 'discreteLink',\n    cellLinkComponent: 'button',\n    cellFormatter: (val) => abbreviateNumber(val),\n    cellOnClick: action('onCellValueClick (issuesCount)'),\n  },\n  {\n    Header: 'Findings',\n    accessor: 'findingsCount',\n    width: 88,\n    cellType: 'discreteLink',\n    cellLinkComponent: RouterLink,\n    cellToComposer: (val: string, row: Data): string =>\n      `?value=${val}&${composeQuery(row)}`,\n    cellFormatter: (val) => abbreviateNumber(val),\n  },\n  {\n    Header: 'First observed',\n    accessor: 'observationDate',\n    width: 120,\n    cellFormatter: (value: string): string =>\n      dayjs(value).format('D MMMM YYYY'),\n  },\n  {\n    Header: 'Last observed',\n    accessor: 'lastObservationDate',\n    width: 120,\n    cellFormatter: (value: string): string => {\n      dayjs.extend(relativeTime);\n      const date = dayjs(value);\n      const now = dayjs();\n\n      // value is today\n      if (date.isSame(now, 'day')) return 'Today';\n      // value is in last 7 days\n      if (date.isAfter(now.subtract(7, 'day'))) return date.format('dddd');\n      return date.from(now, true);\n    },\n  },\n  {\n    id: 'observedFor',\n    Header: 'Observed for',\n    width: 120,\n    Cell: ({\n      row: {\n        original: { observationDate, lastObservationDate },\n      },\n    }: CellProps<Data>): ReactElement => {\n      dayjs.extend(relativeTime);\n\n      return (\n        <Tooltip\n          popup={\n            <>\n              <div>\n                Observation date: {dayjs(observationDate).format('D MMMM YYYY')}\n              </div>\n              <div>\n                Last observation date:{' '}\n                {dayjs(lastObservationDate).format('D MMMM YYYY')}\n              </div>\n            </>\n          }\n        >\n          {dayjs(observationDate).to(dayjs(lastObservationDate), true)}\n        </Tooltip>\n      );\n    },\n  },\n];\n"],"names":["r","e","module","this","t","n","o","i","d","u","a","s","l","h","m","c","y","p","v","M","cov_1as62po3xn","path","hash","global","gcv","coverageData","coverage","actualCoverage","composeQuery","pipe","width","cellType","acc","key","value","f","cellHrefComposer","Header","headerTooltip","Cell","val","row","jsx","Text","children","accessor","memo","b","size","TextSizes","inherit","variant","TextVariants","secondary","cellTooltipPopupComposer","Strong","cellOnClick","jsxs","JSON","stringify","cellFormatter","RouterLink","cellToComposer","cellLinkComponent","abbreviateNumber","action","dayjs","date","isSame","now","observationDate","lastObservationDate","extend","relativeTime","format","isAfter","subtract"],"mappings":"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EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,g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","x_google_ignoreList":[0]}
{"version":3,"file":"DropdownMenu-ZxIIyCxU.js","sources":["../../src/components/Dropdown/index.ts","../../src/components/_internal/BaseDropdownMenu/DropdownMenu.tsx"],"sourcesContent":["export * as DropdownEnums from './Dropdown.enums';\nexport { default as Dropdown } from './Dropdown';\nexport { default as ControlledDropdown } from './ControlledDropdown';\nexport * from './Dropdown.types';\n","import { memo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { isFunction, isNotUndefined, isNull, noop } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport {\n  AbsoluteLinkActionKind,\n  RelativeLinkActionKind,\n} from '../../../types/action.types';\nimport { DropdownLinkProps, DropdownMenuProps } from './DropdownMenu.types';\nimport { getColor, getSpace, pxToRem } from '../../../utils';\nimport { requireRouterLink } from '../../../utils/require-router-link';\nimport { Dropdown } from '../../Dropdown';\nimport { SpaceSizes } from '../../../theme/space.enums';\nimport { Text, TextEnums } from '../../Text';\nimport { Padbox, PadboxEnums } from '../../layout';\nimport { CLX_COMPONENT } from '../../../theme/constants';\nimport { InteractiveElement } from '../../Dropdown/Dropdown.types';\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  padding-top: ${getSpace(SpaceSizes.sm)};\n  padding-bottom: ${getSpace(SpaceSizes.sm)};\n`;\n\nconst FORWARD_PROP_EXCEPTIONS = ['paddingSize', 'paddingType'];\n\nconst DropdownLink = styled(Padbox).withConfig({\n  shouldForwardProp: (prop) => !FORWARD_PROP_EXCEPTIONS.includes(String(prop)),\n})<DropdownLinkProps>`\n  width: 100%;\n  min-width: ${pxToRem(140)};\n  display: block;\n  cursor: pointer;\n  background: transparent;\n  border: 0 none;\n  text-align: left;\n\n  &:hover,\n  &:focus-visible {\n    background: ${getColor('primary.50')};\n  }\n`;\n\nconst getOptions = () => {\n  return Array.from(\n    document.querySelectorAll<InteractiveElement>('[data-dropdown-item]'),\n  );\n};\n\nconst DropdownMenu = ({\n  actions,\n  defaultIsOpen = false,\n  paneWidth = 'auto',\n  children,\n  className,\n  placement = 'bottom',\n}: DropdownMenuProps) => {\n  const [isActive, setIsActive] = useState(false);\n  const dropdownRef = useRef({\n    togglePane: noop,\n    hidePane: noop,\n    showPane: noop,\n  });\n  const containerRef = useRef(null);\n  const trigger: React.ReactElement = (\n    <span className={cls(CLX_COMPONENT, className)}>\n      {isFunction(children) ? children(isActive) : children}\n    </span>\n  );\n\n  const handleKeyDown = (event) => {\n    const selectOption = (direction = 'DOWN') => {\n      const options = getOptions();\n      const index = options.indexOf(\n        document.activeElement as InteractiveElement,\n      );\n      const target = options[index + (direction === 'DOWN' ? 1 : -1)];\n      target?.focus();\n    };\n    const fn = {\n      // Focus the next sub-item or item.\n      ArrowDown: () => selectOption('DOWN'),\n      // Focus the previous sub-item or item.\n      ArrowUp: () => selectOption('UP'),\n    }[event.key];\n    fn?.();\n  };\n\n  const handleBlur = () => {\n    setTimeout(() => {\n      const containsActiveElement = containerRef.current?.contains(\n        document.activeElement,\n      );\n      if (!containsActiveElement) {\n        dropdownRef.current?.hidePane();\n      }\n    });\n  };\n\n  return (\n    <Dropdown\n      ref={dropdownRef}\n      defaultIsOpen={defaultIsOpen}\n      innerPaddingSize={SpaceSizes.none}\n      maxPaneWidth={paneWidth}\n      placement={placement}\n      trigger={trigger}\n      onClose={() => setIsActive(false)}\n      onOpen={() => setIsActive(true)}\n    >\n      <List ref={containerRef} onBlur={handleBlur} onKeyDown={handleKeyDown}>\n        {actions.map((action) => {\n          let RouterLink = null;\n          if (\n            isNotUndefined(\n              (action as RelativeLinkActionKind<React.MouseEvent[], boolean>)\n                .to,\n            )\n          ) {\n            RouterLink = requireRouterLink();\n          }\n\n          const domTag = isNotUndefined(\n            (action as AbsoluteLinkActionKind<React.MouseEvent[], boolean>)\n              .href,\n          )\n            ? 'a' // render 'a' tag if 'href' is present\n            : isNotUndefined(\n                (action as RelativeLinkActionKind<React.MouseEvent[], boolean>)\n                  .to,\n              )\n            ? RouterLink // render 'Link' if 'to' is present\n            : 'button'; // use default\n\n          if (\n            isNull(RouterLink) &&\n            isNotUndefined(\n              (action as RelativeLinkActionKind<React.MouseEvent[], boolean>)\n                .to,\n            )\n          ) {\n            return null;\n          }\n\n          return (\n            <li\n              key={action.name}\n              data-interactive=\"true\"\n              style={{ overflow: 'hidden' }}\n            >\n              <DropdownLink\n                as={domTag}\n                data-dropdown-item=\"true\"\n                data-interactive=\"true\"\n                href={\n                  (\n                    action as AbsoluteLinkActionKind<\n                      React.MouseEvent[],\n                      boolean\n                    >\n                  ).href\n                }\n                name={action.name}\n                paddingSize={SpaceSizes.md}\n                paddingType={PadboxEnums.PaddingTypes.squish}\n                to={\n                  (\n                    action as RelativeLinkActionKind<\n                      React.MouseEvent[],\n                      boolean\n                    >\n                  ).to\n                }\n                onClick={(event) => {\n                  action.onClick(event);\n                  dropdownRef.current?.hidePane();\n                }}\n              >\n                <Text data-interactive=\"true\" size={TextEnums.TextSizes.md}>\n                  {action.label}\n                </Text>\n              </DropdownLink>\n            </li>\n          );\n        })}\n      </List>\n    </Dropdown>\n  );\n};\n\nexport default memo(DropdownMenu);\n"],"names":["cov_2kh2kc4uxv","actualCoverage","cov_enyl1w941","path","hash","global","gcv","coverageData","coverage","List","s","styled","ul","withConfig","displayName","componentId","SpaceSizes","sm","document","querySelectorAll","actions","DropdownLink","Padbox","children","className","pxToRem","getOptions","index","target","from","DropdownMenu","ArrowUp","defaultIsOpen","b","paneWidth","setTimeout","containerRef","isActive","setIsActive","useState","dropdownRef","hidePane","togglePane","noop","showPane","RouterLink","useRef","isNotUndefined","cls","CLX_COMPONENT","isFunction","domTag","handleKeyDown","event","f","selectOption","direction","overflow","options","indexOf","action","focus","fn","memo"],"mappings":"i9CAAA,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EC+BE,SAAAE,GAAA,CAAA,IAAAC,EAAA,yGAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,yGAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,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"}
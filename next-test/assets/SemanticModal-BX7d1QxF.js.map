{"version":3,"file":"SemanticModal-BX7d1QxF.js","sources":["../../src/components/SemanticModal/SemanticModal.enums.ts","../../src/components/SemanticModal/SemanticModal.tsx"],"sourcesContent":["export const SemanticModalVariants = {\n  success: 'success',\n  warn: 'warn',\n  error: 'error',\n  ban: 'ban',\n} as const;\n","import { type ComponentProps, type MouseEvent, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\n\nimport type { SemanticModalVariants } from './SemanticModal.enums';\nimport { SemanticModalProps } from './SemanticModal.types';\nimport { Modal } from '../Modal';\nimport { Icon } from '../Icon';\nimport {\n  AbsoluteLinkActionKind,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport { pxToRem } from '../../utils';\nimport { Center, Inline, Stack } from '../layout';\nimport { SpaceSizes } from '../../theme';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Text } from '../Text';\nimport Button from '../ButtonV2/Button';\n\nconst colorVariants: Record<\n  keyof typeof SemanticModalVariants,\n  ComponentProps<typeof Icon>['color']\n> = {\n  success: 'var(--sscds-color-icon-success)',\n  warn: 'var(--sscds-color-icon-warning)',\n  error: 'var(--sscds-color-icon-danger)',\n  ban: 'var(--sscds-color-icon-danger)',\n};\n\nconst iconVariants = {\n  success: SSCIconNames.checkCircleLight,\n  warn: SSCIconNames.exclCircleLight,\n  error: SSCIconNames.exclTriangleLight,\n  ban: SSCIconNames.banLight,\n};\n\nconst StyledModal = styled(Modal)`\n  .sscds-modal-content {\n    margin-top: var(--sscds-space-negative-6x);\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  font-size: ${pxToRem(40)};\n`;\n\nconst SemanticModal = forwardRef<HTMLDivElement, SemanticModalProps>(\n  (\n    {\n      title,\n      message,\n      actions,\n      onClose,\n      variant = 'success',\n      primaryButtonColor = 'primary',\n      isPrimaryButtonLoading = false,\n      loadingText = '',\n    },\n    ref,\n  ) => {\n    const [dismissAction, mainAction] = actions;\n\n    return (\n      <StyledModal ref={ref} size=\"sm\" onClose={onClose}>\n        <Center isTextCentered>\n          <Stack gap=\"6x\">\n            <div>\n              <StyledIcon\n                color={colorVariants[variant]}\n                name={iconVariants[variant]}\n              />\n            </div>\n            <Stack gap=\"2x\">\n              <Text as=\"div\" size=\"h5\" isBold>\n                {title}\n              </Text>\n              <Text as=\"div\" size=\"md\" variant=\"subtle\">\n                {message}\n              </Text>\n            </Stack>\n            <Inline gap={SpaceSizes.md} justify=\"center\">\n              <Button\n                as={\n                  isNotUndefined(dismissAction.as)\n                    ? dismissAction.as\n                    : undefined\n                }\n                href={\n                  (dismissAction as AbsoluteLinkActionKind<[MouseEvent]>).href\n                }\n                name={dismissAction.name}\n                to={(dismissAction as RelativeLinkActionKind<[MouseEvent]>).to}\n                variant=\"subtle\"\n                onClick={dismissAction.onClick}\n              >\n                {dismissAction.label as string}\n              </Button>\n              {isNotUndefined(mainAction) && (\n                <Button\n                  as={isNotUndefined(mainAction.as) ? mainAction.as : undefined}\n                  href={\n                    (mainAction as AbsoluteLinkActionKind<[MouseEvent]>).href\n                  }\n                  isLoading={isPrimaryButtonLoading}\n                  loadingText={loadingText}\n                  name={mainAction.name}\n                  to={(mainAction as RelativeLinkActionKind<[MouseEvent]>).to}\n                  variant={primaryButtonColor === 'primary' ? 'base' : 'danger'}\n                  onClick={mainAction.onClick}\n                >\n                  {mainAction.label as string}\n                </Button>\n              )}\n            </Inline>\n          </Stack>\n        </Center>\n      </StyledModal>\n    );\n  },\n);\n\nexport default SemanticModal;\n"],"names":["cov_1fl0zyizo6","actualCoverage","SemanticModalVariants","success","warn","error","ban","cov_2bkzkmzbxl","path","hash","global","gcv","coverageData","coverage","styled","displayName","componentId","iconVariants","s","SSCIconNames","checkCircleLight","exclCircleLight","SemanticModal","forwardRef","title","onClose","StyledIcon","mainAction","pxToRem","message","isNotUndefined","primaryButtonColor","b"],"mappings":"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"}
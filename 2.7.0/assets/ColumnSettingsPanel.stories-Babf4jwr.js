import{j as n}from"./jsx-runtime-Cw0GR0a5.js";import{r as S}from"./index-CTjT7uj6.js";import{D as a}from"./Datatable-CzjyHGDw.js";import{T as t}from"./Template-D3ii2cNl.js";import"./useLogger-DkXBJUOu.js";import"./index-DxUWnzkt.js";import"./styled-components.browser.esm-CkXiwQaI.js";import"./DSProvider-CZqUabl8.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-C_MxYcvQ.js";import"./colors-BJBAFLAc.js";import"./IconButton-B6Vl45Lx.js";import"./index-C7IrpltL.js";import"./components-DLROIErt.js";import"./index-Bw8dvKh9.js";import"./Icon-Dgg-0yKJ.js";import"./index-DBr7mztH.js";import"./index-BRV0Se7Z.js";import"./index-DxT0DBGr.js";import"./Spinner-W0TUPOI9.js";import"./prop-DvyrXmKl.js";import"./useSafeTranslation-1fjXo0ht.js";import"./en-US-CaArnYpN.js";import"./menuElements-DgYjNEr7.js";import"./tslib.es6-BLYux4pC.js";import"./index-BKmXk_rQ.js";import"./index-DHcn_niD.js";import"./Padbox-BddxODtE.js";import"./index-Bdemn2ub.js";import"./Inline.enums-ylSCK-eY.js";import"./Cluster-Ca0XQ4y2.js";import"./index-DUZoCKfF.js";import"./isFunction-CFc181nM.js";import"./useLocalStorageState-UxkHlwiN.js";import"./useContainerQuery-DqIcbuCK.js";import"./Skeleton-B0UUdlXt.js";import"./Button-DuBGIkA_.js";import"./index-DIQfTgIV.js";import"./index-B9dTXKMz.js";import"./Tooltip-BUCNYsMe.js";import"./FloatingContext-Bsi7uTe6.js";import"./index-CCbSLEx8.js";import"./CloseButton-CZwz8uav.js";import"./index-BkSsiqLF.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-Bi71s_q_.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-CSYfEf6y.js";import"./Pill-DgBp7Jh3.js";import"./PillRemoveButton-VkzxbQzP.js";const dt={title:"components/DatatableV2/ColumnSettingsPanel",component:a,parameters:{screenshot:{skip:!0}}},d=t.bind({});d.args=t.args;const C=t.bind({});C.args={...t.args,enableHiding:!1,enableColumnPinning:!1};const m=t.bind({});m.args={...t.args,enableHiding:!1,initialState:{showColumnSettings:!0}};m.parameters={screenshot:{skip:!1}};const l=t.bind({});l.args={...t.args,enableColumnPinning:!1,initialState:{showColumnSettings:!0}};l.parameters={screenshot:{skip:!1}};const p=t.bind({});p.args={...t.args,initialState:{showColumnSettings:!0}};p.parameters={screenshot:{skip:!1}};const e=g=>{const[i,u]=S.useState(!0);return n.jsxs(n.Fragment,{children:[n.jsx(a,{state:{showColumnSettings:i},onShowColumnSettings:u,...g}),n.jsxs("div",{children:[n.jsx("strong",{children:"Debug:"}),n.jsx("pre",{children:JSON.stringify(i,null,2)})]})]})};e.args=t.args;var o,r,s;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`args => {
  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);
  return <>
      <Datatable state={{
      showColumnSettings
    }} onShowColumnSettings={setShowColumnSettings} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>
      </div>
    </>;
}`,...(s=(r=e.parameters)==null?void 0:r.docs)==null?void 0:s.source}}};const Ct=["ColumnSettingsPanelEnabled","DisabledColumnSettingsPanel","DisabledColumnHidingInSettingsPanel","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState"];export{d as ColumnSettingsPanelEnabled,e as ColumnSettingsPanelManagedState,m as DisabledColumnHidingInSettingsPanel,l as DisabledColumnPinningInSettingsPanel,C as DisabledColumnSettingsPanel,p as InitialColumnSettingsPanel,Ct as __namedExportsOrder,dt as default};
//# sourceMappingURL=ColumnSettingsPanel.stories-Babf4jwr.js.map

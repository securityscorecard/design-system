import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{r as ae}from"./index-C6mWTJJr.js";import{a as i}from"./chunk-D5ZWXAHU-CGElDDNX.js";import{M as o}from"./MultiValueInput-BJw8tEQk.js";import"./index-DLon-G_T.js";import"./index-7bldAnOT.js";import"./index-BQrLH5Fx.js";import"./index-DTjAwY7e.js";import"./index-C6LMIrfM.js";import{S as te}from"./index-p3Ne9M6I.js";import{L as se}from"./Label-BYbJ_V7q.js";import{S as re}from"./index-C8Uj0hRh.js";import{H as b}from"./Heading-CTj0r8jO.js";import{B as oe}from"./Banner-D_zyhnzQ.js";import{n as ie}from"./noop-CGDyLuY9.js";import{I as le}from"./Inline-C4eBN8Ve.js";import{B as j}from"./Button-oNs-dHY1.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-CQkTLCs1.js";import"./styled-components.browser.esm-DdpL0cfT.js";import"./index-CWpgOoCF.js";import"./space.enums-DGrZwzIk.js";import"./_isObject-dmcfxmtS.js";import"./index-CVyJwDg7.js";import"./index-BzkxN2vn.js";import"./constants-l-41uwkI.js";import"./index-DYWQy94d.js";import"./index-DRm3KUNF.js";import"./DSProvider-0V0etiPX.js";import"./index-CWFZYRor.js";import"./theme-Dt5JqxPR.js";import"./colors-BJBAFLAc.js";import"./isFunction-B5WoXTNq.js";import"./pluck-B5Qa9yNi.js";import"./prop-gA1VFyoz.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./index-CzFpmkVR.js";import"./Icon-D9Bd8CnO.js";import"./index-Dk74W0Oi.js";import"./useLogger-D6HktrB1.js";import"./index-7S4iIOHo.js";import"./Pill-UKI9f75G.js";import"./PillRemoveButton-aOaVVBDT.js";import"./isNonEmptyArray-BixxrS2_.js";import"./isNotEmpty-BuaArano.js";import"./Padbox-BDqsTa65.js";import"./index-DCKWONtv.js";import"./isNonEmptyString-8FTjsxK6.js";import"./isNotNull-CploqAht.js";import"./isNull-C_3YYFwP.js";import"./trim-39gE4VMH.js";import"./take-CZyar5cj.js";import"./Inline.enums-KPT5jvjq.js";import"./Cluster-C53_rRpf.js";import"./index-BoFlc8mL.js";import"./require-router-link-Bk_dtu3O.js";import"./react-router-dom-BGDj--y4.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./objectWithoutPropertiesLoose-Dsqj8S3w.js";import"./index-DOkAu5-S.js";import"./Spinner-Frn9DgHt.js";import"./ElementLabel-B8jQdsnd.js";import"./index-BVSzjRoj.js";import"./CloseButton-B8bXv-fO.js";import"./IconButton-Bi547J60.js";import"./components-C9sJjMsI.js";import"./index-BuLlAacF.js";import"./isNotNilOrEmpty-DfsHSZJ8.js";import"./isNilOrEmpty-BKOGr95H.js";import"./isNil-D8uoaQyf.js";import"./useContainerQuery-J3pQj2z2.js";const Na={component:o,title:"components/forms/MultiValueInput",args:{"aria-label":"Multi value input"},parameters:{a11y:{config:{rules:[{id:"target-size",enabled:!1}]}}}},l=a=>e.jsx(o,{...a,"aria-label":"MultiValueInput"}),r=l.bind({});r.args={onValueAdd:i("OnValueAdd"),onValueRemove:i("OnValueRemove"),onValuesChange:i("OnValuesChange"),onInputChange:i("OnInputChange"),valuesDelimiter:",",onPaste:a=>(a.clipboardData||window.clipboardData).getData("text").split(";").filter(t=>t!=="3").join(";")};const u=l.bind({});u.args={...r.args,value:["john@example.com","jane@example.com"]};const p=l.bind({});p.args={...r.args,placeholder:"Share with..."};const m=l.bind({});m.args={...r.args,isFocused:!0,className:"focus-within"};const c=l.bind({});c.args={...r.args,isInvalid:!0};const d=l.bind({});d.args={...r.args,isDisabled:!0,value:["john@example.com","jane@example.com"]};const n=l.bind({});n.args={...r.args,isClearable:!1,value:["john@example.com","jane@example.com"]};n.title="Non-clearable";const I=a=>{const[V,t]=ae.useState(!0);return e.jsxs(e.Fragment,{children:[e.jsx(se,{htmlFor:"number",children:"Numbers only"}),e.jsx(o,{...a,inputId:"emails",inputValue:"abc",isInvalid:V,pattern:"[0-9]+",value:["12"],onInputChange:s=>{t(!!s.target.validity.patternMismatch)}})]})},g=a=>e.jsxs(re,{gap:"md",children:[e.jsx(b,{size:"h3",children:"Default truncation N=16"}),e.jsx(o,{...a}),e.jsx(b,{size:"h3",children:"Custom truncation N=25"}),e.jsx(o,{...a,maxPillLabelLength:25}),e.jsx(b,{size:"h3",children:"Custom truncation N=5"}),e.jsx(o,{...a,maxPillLabelLength:5})]});g.args={...r.args,value:["123456789012345678901234567890","12345678901234567890","1234567890"]};const h=a=>e.jsx("div",{style:{width:"200px"},children:e.jsx(o,{...a})});h.args={...r.args,value:["12345678901234567890","1234567890"]};const v=a=>{const[V,t]=ae.useState([]);return e.jsxs(re,{gap:"sm",children:[e.jsxs(oe,{variant:"warn",onClose:ie,children:["Handling duplicated values is ",e.jsx(te,{children:"up to the consumer"})," for the controlled input."]}),e.jsx(o,{...a,value:V,onValueAdd:(s,x)=>{t(x),i("valueAdd")(x)},onValueRemove:s=>{t(s),i("valueRemove")(s)},onValuesChange:s=>{t(s),i("valuesChange")(s)}}),e.jsxs(le,{gap:"md",children:[e.jsx(j,{onClick:()=>t(["controlledValue1","controlledValue2"]),children:"Add values"}),e.jsx(j,{onClick:()=>t([]),children:"Reset values"})]})]})};v.parameters={screenshot:{skip:!0}};var M,S,C;r.parameters={...r.parameters,docs:{...(M=r.parameters)==null?void 0:M.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(C=(S=r.parameters)==null?void 0:S.docs)==null?void 0:C.source}}};var f,P,L;u.parameters={...u.parameters,docs:{...(f=u.parameters)==null?void 0:f.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(L=(P=u.parameters)==null?void 0:P.docs)==null?void 0:L.source}}};var N,k,B;p.parameters={...p.parameters,docs:{...(N=p.parameters)==null?void 0:N.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(B=(k=p.parameters)==null?void 0:k.docs)==null?void 0:B.source}}};var H,y,D;m.parameters={...m.parameters,docs:{...(H=m.parameters)==null?void 0:H.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(D=(y=m.parameters)==null?void 0:y.docs)==null?void 0:D.source}}};var R,w,A;c.parameters={...c.parameters,docs:{...(R=c.parameters)==null?void 0:R.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(A=(w=c.parameters)==null?void 0:w.docs)==null?void 0:A.source}}};var F,z,O;d.parameters={...d.parameters,docs:{...(F=d.parameters)==null?void 0:F.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(O=(z=d.parameters)==null?void 0:z.docs)==null?void 0:O.source}}};var _,W,E;n.parameters={...n.parameters,docs:{...(_=n.parameters)==null?void 0:_.docs,source:{originalSource:'args => <MultiValueInput {...args} aria-label="MultiValueInput" />',...(E=(W=n.parameters)==null?void 0:W.docs)==null?void 0:E.source}}};var T,q,G;I.parameters={...I.parameters,docs:{...(T=I.parameters)==null?void 0:T.docs,source:{originalSource:`args => {
  const [isInvalid, setIsInvalid] = useState(true);
  return <>
      <Label htmlFor="number">Numbers only</Label>
      <MultiValueInput {...args} inputId="emails" inputValue="abc" isInvalid={isInvalid} pattern="[0-9]+" value={['12']} onInputChange={e => {
      setIsInvalid(!!e.target.validity.patternMismatch);
    }} />
    </>;
}`,...(G=(q=I.parameters)==null?void 0:q.docs)==null?void 0:G.source}}};var J,K,Q;g.parameters={...g.parameters,docs:{...(J=g.parameters)==null?void 0:J.docs,source:{originalSource:`args => <Stack gap="md">
    <Heading size="h3">Default truncation N=16</Heading>
    <MultiValueInput {...args} />
    <Heading size="h3">Custom truncation N=25</Heading>
    <MultiValueInput {...args} maxPillLabelLength={25} />
    <Heading size="h3">Custom truncation N=5</Heading>
    <MultiValueInput {...args} maxPillLabelLength={5} />
  </Stack>`,...(Q=(K=g.parameters)==null?void 0:K.docs)==null?void 0:Q.source}}};var U,X,Y;h.parameters={...h.parameters,docs:{...(U=h.parameters)==null?void 0:U.docs,source:{originalSource:`args => <div style={{
  width: '200px'
}}>
    <MultiValueInput {...args} />
  </div>`,...(Y=(X=h.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var Z,$,ee;v.parameters={...v.parameters,docs:{...(Z=v.parameters)==null?void 0:Z.docs,source:{originalSource:`args => {
  const [values, setValues] = useState<string[] | undefined>([]);
  return <Stack gap="sm">
      <Banner variant="warn" onClose={noop}>
        Handling duplicated values is <Strong>up to the consumer</Strong> for
        the controlled input.
      </Banner>
      <MultiValueInput {...args} value={values} onValueAdd={(_, v) => {
      setValues(v);
      action('valueAdd')(v);
    }} onValueRemove={v => {
      setValues(v);
      action('valueRemove')(v);
    }} onValuesChange={v => {
      setValues(v);
      action('valuesChange')(v);
    }} />
      <Inline gap="md">
        <Button onClick={() => setValues(['controlledValue1', 'controlledValue2'])}>
          Add values
        </Button>
        <Button onClick={() => setValues([])}>Reset values</Button>
      </Inline>
    </Stack>;
}`,...(ee=($=v.parameters)==null?void 0:$.docs)==null?void 0:ee.source}}};const ka=["Playground","Filled","WithPlaceholder","Focus","Invalid","Disabled","NonClearable","Validation","PillTruncation","PillWrapping","ControlledInput"];export{v as ControlledInput,d as Disabled,u as Filled,m as Focus,c as Invalid,n as NonClearable,g as PillTruncation,h as PillWrapping,r as Playground,I as Validation,p as WithPlaceholder,ka as __namedExportsOrder,Na as default};
//# sourceMappingURL=MultiValueInput.stories-Dp1QWNsp.js.map

{"version":3,"file":"DateRangePicker.stories-BXyLm9oP.js","sources":["../../../src/components/DateRangePicker/DateRangePicker.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\n\nimport DateRangePicker from './DateRangePicker';\nimport {\n  BaseDateRange,\n  BaseDateRangePickerProps,\n} from '../_internal/BaseDateRangePicker/BaseDateRangePicker.types';\n\nexport default {\n  title: 'components/DateRangePicker',\n  component: DateRangePicker,\n  argTypes: {\n    minDate: { control: 'date' },\n    maxDate: { control: 'date' },\n  },\n  decorators: [\n    (storyFn) => <div style={{ paddingBottom: '300px' }}>{storyFn()}</div>,\n  ],\n} as Meta;\n\nexport const Playground: StoryFn<BaseDateRangePickerProps> = (args) => (\n  <DateRangePicker {...args} />\n);\nPlayground.parameters = {\n  chromatic: { disable: true },\n};\n\nPlayground.args = {\n  maxDate: new Date('2021/03/28'),\n  minDate: new Date('2021/03/01'),\n};\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const Default: StoryFn = () => {\n  const [dateRange, handleChangeDateRange] = useState<BaseDateRange>({\n    startDate: null,\n    endDate: null,\n  });\n\n  return (\n    <DateRangePicker\n      maxDate={new Date('2021/03/28')}\n      minDate={new Date('2021/03/01')}\n      value={{\n        startDate: dateRange?.startDate,\n        endDate: dateRange?.endDate,\n      }}\n      onChange={handleChangeDateRange}\n    />\n  );\n};\n\nexport const WithDefaultValue: StoryFn = () => {\n  const [dateRange, handleChangeDateRange] = useState<BaseDateRange>({\n    startDate: new Date('2021/03/05'),\n    endDate: new Date('2021/03/10'),\n  });\n\n  return (\n    <DateRangePicker\n      maxDate={new Date('2021/03/28')}\n      minDate={new Date('2021/03/01')}\n      value={{\n        startDate: dateRange?.startDate,\n        endDate: dateRange?.endDate,\n      }}\n      onChange={handleChangeDateRange}\n    />\n  );\n};\n\nexport const WithCustomPlaceholder: StoryFn = () => {\n  const [dateRange, handleChangeDateRange] = useState<BaseDateRange>({\n    startDate: null,\n    endDate: null,\n  });\n\n  return (\n    <DateRangePicker\n      maxDate={new Date('2021/03/20')}\n      minDate={new Date('2021/03/10')}\n      placeholder={{\n        startDate: 'Custom placeholder start date',\n        endDate: 'Custom placeholder end date',\n      }}\n      value={dateRange}\n      onChange={handleChangeDateRange}\n    />\n  );\n};\n"],"names":["control","DateRangePicker_stories","maxDate","DateRangePicker","minDate","decorators","paddingBottom","storyFn","jsx","Playground","args","disable","parameters","chromatic","screenshot","Date","skip","startDate","Default","endDate","handleChangeDateRange","useState","dateRange","WithDefaultValue"],"mappings":"8uCAaeA,MAASC,GAAA,OAAQ,6BAC5BC,UAASC,EAAEH,SAAAA,CAAgBI,QAAA,CAAAJ,QAAA,MAAA,EAC5BE,QAAA,CAAAF,QAAA,MAAA,CACDK,EAC6BC,WAAAA,CAAuCC,GAAAC,EAAA,IAAA,OAAI,MAAA,CAAAF,cAAA,OAAA,EAAAC,SAAAA,EAAA,CAAA,CAAA,CAAA,CAI1E,EAIaE,EAAAC,GAAEC,EAAAA,IAAAA,EAAAA,CAASD,GAAAA,EAAK,EAC7BD,EAACG,WAAA,CAESC,WAAKF,QAAG,EAAA,CAChBT,EAEFO,EAACC,KAAA,CACSR,6BAAc,EACtBY,QAAYC,IAAAA,KAAA,YAAA,CAAEC,EAAWP,EAAAG,WAAA,CAC1BE,WAAA,CAAAE,KAAA,EAAA,CAED,EAEIC,MAASC,EAAMA,IAAA,CACfC,KAAAA,CAAAA,EAASC,CAAA,EAAAC,WAAA,CACTJ,UAAA,KAGAE,QAAgB,IAAA,GAMd,OAILX,MAAAL,EAAA,CAED,QAA6B,IAAAY,KAAA,YAAS,EAC9B,QAAUA,IAAAA,KAAuB,YAAA,EACrCE,MAAS,CACTE,UAAiBG,GAAAA,YAAAA,EAAaL,UAC9BE,QAAAG,GAAAA,YAAAA,EAAAH,OAAAA,EAOa,SAAWC,CACb,CAAA,CAKf,EAGkBG,EAAuBA,IAAY,CACjDN,KAAAA,CAAAA,EAAeG,CAAA,EAAAC,WAAA,CACfF,UAASJ,IAAAA,KAAA,YAAA,EACTI,QAAAJ,IAAAA,KAAA,YAAA,CAAA,CAGA,EAKII,OAEFX,MAAAL,EAAA,CAIL,QAAA,IAAAY,KAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
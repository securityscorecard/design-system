{"version":3,"file":"Accordion.stories-D86VKyjA.js","sources":["../../../src/components/Accordion/Accordion.stories.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { includes } from 'ramda';\n\nimport { Inline, Stack } from '../layout';\nimport { HexGrade } from '../HexGrade';\nimport { Button } from '../Button';\nimport Accordion from './Accordion';\nimport { AccordionProps } from './Accordion.types';\nimport { Text } from '../Text';\nimport { TextSizes } from '../Text/Text.enums';\nimport { Paragraph } from '../Paragraph';\n\nexport default {\n  title: 'components/Accordion',\n  component: Accordion,\n  argTypes: {\n    isCollapsedOnOpen: {\n      control: { type: 'boolean' },\n    },\n    openItems: {\n      description: 'Array of ids that can be changed by external state',\n    },\n  },\n} as Meta;\n\nconst items = [\n  { id: 1, title: 'Item 1', content: 'Content', isOpen: true },\n  { id: 2, title: 'Item 2', content: 'Content' },\n];\n\nconst AccordionTemplate: StoryFn<AccordionProps> = (args) => (\n  <Accordion {...args} />\n);\n\nexport const Playground = AccordionTemplate.bind({});\nPlayground.args = { items };\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const DefaultAccordion = AccordionTemplate.bind({});\nDefaultAccordion.args = Playground.args;\n\nexport const DoesNotCollapseOnOpen = AccordionTemplate.bind({});\nDoesNotCollapseOnOpen.args = {\n  ...Playground.args,\n  isCollapsedOnOpen: false,\n};\nDoesNotCollapseOnOpen.storyName = 'Does not collapse on open';\nDoesNotCollapseOnOpen.parameters = {\n  screenshot: { skip: true },\n};\n\nconst AccordionItemTitle = () => (\n  <Stack gap=\"sm\">\n    <Inline align=\"center\" gap=\"md\">\n      <HexGrade grade=\"A\" size={24} />\n      <Text size={TextSizes.lg}>Company Name</Text>\n    </Inline>\n    <Paragraph>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n      tempor.\n    </Paragraph>\n  </Stack>\n);\nexport const CustomTitleElement: StoryFn<AccordionProps> =\n  AccordionTemplate.bind({});\nCustomTitleElement.args = {\n  items: [\n    { id: 0, title: <AccordionItemTitle />, content: 'Content', isOpen: true },\n  ],\n};\n\nexport const AcordionWithExternalManagement: StoryFn<AccordionProps> = () => {\n  const [openItems, setOpenItems] = useState<(string | number)[]>([]);\n  const handleOnClick = (id: string) => {\n    if (!openItems.includes(id)) {\n      const newItems = [id];\n      return setOpenItems(newItems);\n    }\n    return setOpenItems([...openItems]);\n  };\n\n  const localItems = [\n    { id: 'first', title: 'Item 1', content: 'Content', isOpen: true },\n    { id: 'second', title: 'Item 2', content: 'Content' },\n    { id: 'third', title: 'Item 3', content: 'Content' },\n  ];\n\n  return (\n    <Inline gap=\"xl\">\n      <Stack gap=\"sm\" justify=\"flex-start\">\n        <Button variant=\"text\" onClick={() => handleOnClick('first')}>\n          {includes('first', openItems) && '->'} First section\n        </Button>\n        <Button variant=\"text\" onClick={() => handleOnClick('second')}>\n          {includes('second', openItems) && '->'} Second section\n        </Button>\n        <Button variant=\"text\" onClick={() => handleOnClick('third')}>\n          {includes('third', openItems) && '->'} Third section\n        </Button>\n      </Stack>\n      <Accordion\n        isCollapsedOnOpen={false}\n        items={localItems}\n        openItems={openItems}\n        onChange={(ids) => {\n          setOpenItems(ids);\n        }}\n      />\n    </Inline>\n  );\n};\nAcordionWithExternalManagement.parameters = {\n  screenshot: { skip: true },\n};\n"],"names":["component","Accordion_stories","argTypes","isCollapsedOnOpen","control","type","openItems","description","items","title","content","isOpen","AccordionTemplate","args","Playground","DefaultAccordion","bind","skip","DoesNotCollapseOnOpen","storyName","parameters","screenshot","AccordionItemTitle","jsxs","Inline","jsx","HexGrade","lg","Paragraph","CustomTitleElement","AcordionWithExternalManagement","setOpenItems","useState","handleOnClick","id","localItems","Button","includes","Accordion","ids","docs","source","originalSource"],"mappings":"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"}
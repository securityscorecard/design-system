{"version":3,"file":"Switch-HW7QcR8s.js","sources":["../../../src/components/forms/Switch/Switch.enums.ts","../../../src/components/forms/Switch/Switch.tsx"],"sourcesContent":["export const SwitchSizes = {\n  md: 'md',\n  sm: 'sm',\n} as const;\n","import { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { __, pipe, subtract } from 'ramda';\nimport cls from 'classnames';\n\nimport { getFormStyle, getRadii, getToken, pxToRem } from '../../../utils';\nimport { Sizes, SwitchLabelProps, SwitchProps } from './Switch.types';\nimport { SwitchSizes } from './Switch.enums';\nimport { CLX_COMPONENT } from '../../../theme/constants';\n\n// Minimum width for\nconst SwitchMdWithLabel = 96;\nconst SwitchMdWithoutLabel = 56;\nconst SwitchSmWithLabel = 64;\nconst SwitchSmWithoutLabel = 40;\n\nconst SwitchLabelWrapperMedium = css<{ label: string; maxWidth: number }>`\n  ${({ label }) =>\n    css`\n      min-width: ${pxToRem(label ? SwitchMdWithLabel : SwitchMdWithoutLabel)};\n    `}\n  ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n      width: ${pxToRem(maxWidth)};\n    `};\n`;\n\nconst SwitchLabelWrapperSmall = css<{ label: string; maxWidth: number }>`\n  ${({ label }) =>\n    css`\n      min-width: ${pxToRem(label ? SwitchSmWithLabel : SwitchSmWithoutLabel)};\n    `}\n  ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n      width: ${pxToRem(maxWidth)};\n    `};\n`;\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n// Paddings\nconst SwitchPaddingNotCheckedMedium = css`\n  padding-left: ${pxToRem(37)};\n  padding-right: ${pxToRem(10)};\n`;\n\nconst SwitchPaddingNotCheckedSmall = css`\n  padding-left: ${pxToRem(26)};\n  padding-right: ${pxToRem(5)};\n`;\n\nconst SwitchPaddingCheckedMedium = css`\n  padding-right: ${pxToRem(37)};\n  padding-left: ${pxToRem(10)};\n`;\n\nconst SwitchPaddingCheckedSmall = css`\n  padding-right: ${pxToRem(26)};\n  padding-left: ${pxToRem(5)};\n`;\n\nconst switchLabelWrapperSizes = {\n  [SwitchSizes.md]: SwitchLabelWrapperMedium,\n  [SwitchSizes.sm]: SwitchLabelWrapperSmall,\n};\n\nconst switchNotCheckedLabelPaddings = {\n  [SwitchSizes.md]: SwitchPaddingNotCheckedMedium,\n  [SwitchSizes.sm]: SwitchPaddingNotCheckedSmall,\n};\n\nconst switchCheckedLabelPaddings = {\n  [SwitchSizes.md]: SwitchPaddingCheckedMedium,\n  [SwitchSizes.sm]: SwitchPaddingCheckedSmall,\n};\n\nconst switchSizes = {\n  [SwitchSizes.md]: 'size-action-size',\n  [SwitchSizes.sm]: 'size-action-size-sm',\n};\n\nconst getSwitchLabelAfterElementSize = ({ $size, theme }) =>\n  pipe(\n    getToken(switchSizes[$size]),\n    subtract(__, 1.5 * theme.space.xs),\n    pxToRem,\n  )({ theme });\n\nconst getSwitchHeight = ({ $size, theme }) =>\n  pipe(getToken(switchSizes[$size]), pxToRem)({ theme });\n\nconst BaseLabel = styled.label`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  margin: 0;\n  border-radius: ${getRadii('round')};\n  cursor: pointer;\n`;\n\nconst Label = styled(BaseLabel)<SwitchLabelProps>`\n  height: ${getSwitchHeight};\n  background: ${getFormStyle('switchBgColor')};\n  ${({ $size }) => switchLabelWrapperSizes[$size]};\n  ${({ isDisabled }) =>\n    css`\n      color: ${getFormStyle(isDisabled ? 'disabledColor' : 'switchColor')};\n      border: ${getFormStyle('borderWidth')} solid\n        ${getFormStyle(isDisabled ? 'disabledBorderColor' : 'borderColor')};\n    `};\n`;\n\nconst LabelContent = styled.div<Omit<SwitchLabelProps, 'maxWidth'>>`\n  cursor: pointer;\n  ${({ $size }) => switchNotCheckedLabelPaddings[$size]};\n  &::after {\n    content: '';\n    position: absolute;\n    top: ${pxToRem(2)};\n    left: ${pxToRem(2)};\n    width: ${getSwitchLabelAfterElementSize};\n    height: ${getSwitchLabelAfterElementSize};\n    ${({ isDisabled }) =>\n      css`\n        background: ${getFormStyle(\n          isDisabled ? 'disabledColor' : 'switchKnobBgColor',\n        )};\n      `};\n    border-radius: ${getRadii('circle')};\n    transition: 0.3s;\n  }\n  &:active::after {\n    background-color: ${getFormStyle('hoverIndicatorColor')};\n  }\n  transition: 0.3s;\n`;\n\nconst Input = styled.input<{\n  $size?: Sizes;\n}>`\n  height: 0;\n  width: 0;\n  display: none;\n  &:checked:disabled + ${/* sc-selector */ Label} {\n    color: ${getFormStyle('activeColor')};\n    background: ${getFormStyle('disabledColor')};\n    border-color: ${getFormStyle('disabledColor')};\n  }\n\n  &:hover + ${Label} {\n    background-color: ${getFormStyle('activeBgColor')};\n  }\n  &:active + ${Label} {\n    background-color: ${getFormStyle('activeBgColor')};\n  }\n\n  &:checked + ${Label} {\n    ${LabelContent} {\n      ${({ $size }) => switchCheckedLabelPaddings[$size]};\n    }\n  }\n\n  &:checked + ${Label} {\n    color: ${getFormStyle('activeColor')};\n    background: ${getFormStyle('activeBorderColor')};\n    border-color: ${getFormStyle('activeBorderColor')};\n  }\n  &:checked + ${Label} {\n    ${/* sc-selector */ LabelContent}::after {\n      background: ${getFormStyle('activeColor')};\n      left: calc(100% - ${pxToRem(2)});\n      transform: translateX(-100%);\n    }\n  }\n  &:checked:hover + ${Label} {\n    background-color: ${getFormStyle('hoverBgColor')};\n  }\n  &:checked:active + ${Label} {\n    background-color: ${getFormStyle('pressedBgColor')};\n  }\n`;\n\nconst Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  (\n    {\n      switchId,\n      isDisabled = false,\n      size = SwitchSizes.md,\n      className,\n      ...props\n    },\n    ref,\n  ) => (\n    <SwitchWrapper className={cls(CLX_COMPONENT, className)}>\n      <Input\n        ref={ref}\n        $size={size}\n        disabled={isDisabled}\n        id={switchId}\n        type=\"checkbox\"\n        {...props}\n      />\n      <Label $size={size} htmlFor={switchId} isDisabled={isDisabled}>\n        <LabelContent $size={size} isDisabled={isDisabled} />\n      </Label>\n    </SwitchWrapper>\n  ),\n);\n\nexport default Switch;\n"],"names":["cov_21erzkgtrh","actualCoverage","SwitchSizes","md","sm","cov_1k633l33ws","path","hash","global","gcv","coverageData","coverage","SwitchMdWithLabel","s","SwitchMdWithoutLabel","SwitchSmWithLabel","SwitchSmWithoutLabel","SwitchLabelWrapperMedium","css","label","f","pxToRem","b","maxWidth","SwitchLabelWrapperSmall","SwitchPaddingCheckedMedium","SwitchPaddingNotCheckedMedium","SwitchPaddingNotCheckedSmall","SwitchPaddingCheckedSmall","switchLabelWrapperSizes","switchNotCheckedLabelPaddings","switchCheckedLabelPaddings","switchSizes","getSwitchLabelAfterElementSize","$size","theme","pipe","getToken","subtract","__","space","xs","Label","LabelContent","styled","BaseLabel","withConfig","displayName","componentId","getSwitchHeight","getFormStyle","div"],"mappings":"6lCAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAME,MAAAA,GAAAA,IAAAA,EAAc,CAAA,IAAA,CACzBC,GAAI,KACJC,GAAI,IACN,GC8BgB,SAAAC,GAAA,CAAA,IAAAC,EAAA,uFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,uFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA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"}
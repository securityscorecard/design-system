import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{r as c}from"./index-CTjT7uj6.js";import{D as m}from"./Datatable-x8kdJ1cZ.js";import{T as e}from"./Template-B5fQhUoo.js";import"./useLogger-BUVDCBjf.js";import"./index-CrKmLWnD.js";import"./constants-l-41uwkI.js";import"./space.enums-Dn0LioXL.js";import"./_isObject-BZZHHNGj.js";import"./styled-components.browser.esm-CkXiwQaI.js";import"./DSProvider-BD6Crr4Z.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-B4UkYPRv.js";import"./colors-BJBAFLAc.js";import"./IconButton-fQ2bMmdG.js";import"./index-C7IrpltL.js";import"./components-CEAZ8Niy.js";import"./index-Do5YN-r4.js";import"./Icon-D2McLPVS.js";import"./index-CajKmcpa.js";import"./index-BRV0Se7Z.js";import"./index-BpwILXOI.js";import"./Spinner-D0DPxq7I.js";import"./prop-DthtuCpe.js";import"./useSafeTranslation-DO0eKWrX.js";import"./en-US-CaArnYpN.js";import"./menuElements-DX7GXJyU.js";import"./tslib.es6-BLYux4pC.js";import"./index-CtMHODJ2.js";import"./index-CXHcUZNU.js";import"./Padbox-C9-4IgMJ.js";import"./index-BFpmPCJD.js";import"./Inline.enums-B2crYYgS.js";import"./Cluster-_Y3KuvTf.js";import"./index-BILJD4ib.js";import"./isFunction-ueona4bl.js";import"./useLocalStorageState-UxkHlwiN.js";import"./useContainerQuery-DqIcbuCK.js";import"./Skeleton-BWW78PHt.js";import"./Button-CvHd8Azw.js";import"./index--l7ovmQ3.js";import"./index-BjRuNwra.js";import"./Tooltip-BMm0xgGu.js";import"./FloatingContext-Bsi7uTe6.js";import"./index-BvVXaNp9.js";import"./CloseButton-CvqEfgDP.js";import"./index-CbtSpW2v.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-Bi71s_q_.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-D6R3DHC6.js";import"./Pill-BDiUppEK.js";import"./PillRemoveButton-COTxmups.js";const Fe={title:"components/DatatableV2/FullscreenMode",component:m,parameters:{screenshot:{skip:!0},docs:{story:{inline:!1,height:600}}}},d=e.bind({});d.args=e.args;const u=e.bind({});u.args={...e.args,enableFullScreenMode:!1};const p=e.bind({});p.args={...e.args,initialState:{isFullscreenMode:!0}};p.parameters={screenshot:{skip:!1}};const t=l=>{const[o,a]=c.useState(!1);return r.jsxs(r.Fragment,{children:[r.jsx(m,{state:{isFullscreenMode:o},manualSorting:!0,onFullscreenModeChange:a,...l}),r.jsxs("div",{children:[r.jsx("strong",{children:"Debug:"}),r.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=e.args;var s,i,n;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [isFullscreenMode, setIsFullscreenMode] = useState(false);
  return <>
      <Datatable state={{
      isFullscreenMode
    }} manualSorting onFullscreenModeChange={setIsFullscreenMode} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(isFullscreenMode, null, 2)}</pre>
      </div>
    </>;
}`,...(n=(i=t.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const be=["FullscreenModeEnabled","FullscreenModeDisabled","InitialFullscreenMode","FullscreenModeManagedState"];export{u as FullscreenModeDisabled,d as FullscreenModeEnabled,t as FullscreenModeManagedState,p as InitialFullscreenMode,be as __namedExportsOrder,Fe as default};
//# sourceMappingURL=FullscreenMode.stories-CVPb91oS.js.map

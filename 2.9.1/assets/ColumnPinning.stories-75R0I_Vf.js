import{j as i}from"./jsx-runtime-Cw0GR0a5.js";import{r as g}from"./index-CTjT7uj6.js";import{D as s}from"./Datatable-D96qhicj.js";import{T as n,c as u}from"./Template-B3FSJjDI.js";import"./useLogger-BdR6T79l.js";import"./index-ndiHb6d5.js";import"./constants-CgU6e_L6.js";import"./space.enums-aJQ33HT_.js";import"./isObject-BZZHHNGj.js";import"./slice-CaMqkvGm.js";import"./styled-components.browser.esm-CkXiwQaI.js";import"./DSProvider-DZ2BDZS9.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-VOBSdC0d.js";import"./colors-2yNNI7_i.js";import"./IconButton-CKUQpq1U.js";import"./index-C7IrpltL.js";import"./components-CjIxgO6S.js";import"./index-BifjOJLR.js";import"./Icon-C0fNGvgr.js";import"./index-BsP7FXMl.js";import"./index-BRV0Se7Z.js";import"./index-B1rSuUka.js";import"./Spinner-BzbrUblZ.js";import"./prop-CgNUfcFy.js";import"./useSafeTranslation-BFYCnF6T.js";import"./en-US-DPXU96ho.js";import"./menuElements-Ht_uLAmV.js";import"./index-C1kpn3a9.js";import"./index-Dc3BNA-e.js";import"./Padbox-DpT_ILeC.js";import"./index-FmXXYKzo.js";import"./Inline.enums-CsgpNQwN.js";import"./Cluster-BnO1HbAj.js";import"./index-CUGQ8N4L.js";import"./pluck-5zg4Xx5s.js";import"./useLocalStorageState-D2NPfI6N.js";import"./useContainerQuery-DfiLLmFV.js";import"./Skeleton-Czx0AtBC.js";import"./Button-jQCIxIJA.js";import"./index-zphH5PEn.js";import"./index-C2vIIBl6.js";import"./Tooltip-DgJ8Q0u2.js";import"./FloatingContext-C7MQzhpq.js";import"./index-lS962czg.js";import"./CloseButton-DSRlqFcT.js";import"./index-BkLmc-fh.js";import"./minus-rUvolOxF.js";import"./checkCircleSolid-D_DFWg_A.js";import"./sortable.esm-Bi71s_q_.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-_JuRKZiv.js";import"./Pill-DDsfaC4J.js";import"./PillRemoveButton-CcoG8WEs.js";const fn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}}},c=n.bind({});c.args=n.args;const d=n.bind({});d.args={...n.args,enableColumnPinning:!1};const P=n.bind({});P.args={...n.args,columns:[...u,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;t.__docgenInfo={description:"",methods:[],displayName:"ColumnPinningManagedState"};var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const Sn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{c as ColumnPinningEnabled,t as ColumnPinningManagedState,d as DisabledColumnPinning,P as DisabledColumnPinningForColumn,a as InitialColumnPinning,Sn as __namedExportsOrder,fn as default};
//# sourceMappingURL=ColumnPinning.stories-75R0I_Vf.js.map

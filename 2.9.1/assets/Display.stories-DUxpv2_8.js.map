{"version":3,"file":"Display.stories-DUxpv2_8.js","sources":["../../src/components/Display/Display.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\n\nimport { Stack } from '../layout/Stack';\nimport Display from './Display';\n\nconst meta = {\n  title: 'typography/Display',\n  component: Display,\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'The largest text on the screen is reserved for short, important text or numerals. Can be a standalone element or is used in combination with short captions for contextual outlines.',\n      },\n    },\n  },\n  argTypes: {\n    size: {\n      description: 'Selects the font size',\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      table: {\n        type: { summary: \"'sm' | 'md' | 'lg'\" },\n        defaultValue: { summary: \"'md'\" },\n      },\n    },\n    color: {\n      description: 'Selects the font color',\n      control: 'select',\n      options: ['default', 'subtle', 'success', 'warning', 'danger'],\n      table: {\n        type: {\n          summary: \"'default' | 'subtle' | 'success' | 'warning' | 'danger'\",\n        },\n        defaultValue: { summary: \"'default'\" },\n      },\n    },\n    isSubtle: {\n      description:\n        'Selects the font weight. When true Display will be rendered as medium.',\n      control: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    hasTabularNumbers: {\n      description:\n        'Toggles if numbers use the same width for every digit. This aligns numbers exactly below each other.',\n      control: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n} satisfies Meta<typeof Display>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Playground: Story = {\n  args: {\n    children: 'Playground',\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const Sizes: Story = {\n  render: (args) => (\n    <Stack gap=\"sm\">\n      <Display {...args} size=\"sm\">\n        Small\n      </Display>\n      <Display {...args} size=\"md\">\n        Medium\n      </Display>\n      <Display {...args} size=\"lg\">\n        Large\n      </Display>\n    </Stack>\n  ),\n  args: { children: 'Display size' },\n};\nexport const Colors: Story = {\n  render: (args) => (\n    <Stack gap=\"sm\">\n      <Display {...args} color=\"default\">\n        Default\n      </Display>\n      <Display {...args} color=\"subtle\">\n        Subtle\n      </Display>\n      <Display {...args} color=\"success\">\n        Success\n      </Display>\n      <Display {...args} color=\"warning\">\n        Warning\n      </Display>\n      <Display {...args} color=\"danger\">\n        Danger\n      </Display>\n    </Stack>\n  ),\n  args: { children: 'ElementLabel color' },\n};\n\nexport const ColorsDark: Story = {\n  render: Colors.render,\n  args: Colors.args,\n  decorators: [\n    (storyFn) => (\n      <div\n        className=\"dark\"\n        style={{ background: 'var(--sscds-color-background-body)' }}\n      >\n        {storyFn()}\n      </div>\n    ),\n  ],\n  name: 'Colors (Dark mode)',\n};\n\nexport const Weights: Story = {\n  render: (args) => (\n    <Stack gap=\"sm\">\n      <Display {...args} isSubtle={false}>\n        Default\n      </Display>\n      <Display {...args} isSubtle>\n        Subtle\n      </Display>\n    </Stack>\n  ),\n  args: { children: 'Display font weight' },\n};\n\nexport const TabularNumbers: Story = {\n  render: (args) => (\n    <Stack gap=\"sm\">\n      <Display {...args} hasTabularNumbers />\n      <Display {...args} hasTabularNumbers={false} />\n    </Stack>\n  ),\n  args: { children: '0123456789' },\n};\n"],"names":["component","Display","parameters","docs","description","argTypes","size","control","options","table","type","summary","defaultValue","color","isSubtle","hasTabularNumbers","Playground","args","children","Meta","screenshot","StoryObj","meta","Sizes","skip","Colors","render","jsxs","Stack","jsx","ColorsDark","storyFn","decorators","background","name","Weights"],"mappings":"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"}
{"version":3,"file":"index-B8TLSRJY.js","sources":["../../../src/components/Drawer/Drawer.enums.ts","../../../node_modules/tabbable/dist/index.esm.js","../../../node_modules/focus-trap/dist/focus-trap.esm.js","../../../node_modules/focus-trap-react/dist/focus-trap-react.js","../../../src/components/Drawer/Drawer.tsx","../../../src/components/Drawer/index.tsx"],"sourcesContent":["export const DrawerSizes = {\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n} as const;\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.6.5\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, getTabIndex, isFocusable } from 'tabbable';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), true).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r);\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0 && !trapStack[trapStack.length - 1]._isManuallyPaused()) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (// fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === void 0 ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue.apply(void 0, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, \"` appears to be an invalid selector; error=\\\"\").concat(err.message, \"\\\"\"));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus', {\n      hasFallback: true\n    });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || node && !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === void 0 ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = _getActiveElement(doc);\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = true;\n      return this._setPausedState(true, pauseOptions);\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = false;\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n      return this._setPausedState(false, unpauseOptions);\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value: function value() {\n        return state.manuallyPaused;\n      }\n    },\n    _setPausedState: {\n      value: function value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n        state.paused = paused;\n        if (paused) {\n          var onPause = getOption(options, 'onPause');\n          var onPostPause = getOption(options, 'onPostPause');\n          onPause === null || onPause === void 0 || onPause();\n          removeListeners();\n          updateObservedNodes();\n          onPostPause === null || onPostPause === void 0 || onPostPause();\n        } else {\n          var onUnpause = getOption(options, 'onUnpause');\n          var onPostUnpause = getOption(options, 'onPostUnpause');\n          onUnpause === null || onUnpause === void 0 || onUnpause();\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n          onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n        }\n        return this;\n      }\n    }\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _exec$, _exec;\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar React = require('react');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable;\n\n/**\n * The major version of React currently running.\n * @type {number}\n */\nvar reactVerMajor = parseInt((_exec$ = (_exec = /^(\\d+)\\./.exec(React.version)) === null || _exec === void 0 ? void 0 : _exec[1]) !== null && _exec$ !== void 0 ? _exec$ : 0, 10);\n\n/**\n * @type {import('../index.d.ts').FocusTrap}\n */\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _callSuper(this, FocusTrap, [props]);\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n    _defineProperty(_this, \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        }\n        // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_this);\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_this);\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_this);\n\n    // focus-trap options used internally when creating the trap\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    };\n\n    // original options provided by the consumer\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    }\n\n    // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n    _this.outsideClick = null;\n\n    // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n    _this.focusTrapElements = props.containerElements || [];\n\n    // now we remember what the currently focused element is, not relying on focus-trap\n    _this.updatePreviousElement();\n    return _this;\n  }\n\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n  _inherits(FocusTrap, _React$Component);\n  return _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate\n        // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions))\n\n        // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n        if (nodesExist) {\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      }\n      // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        }\n\n        // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            // React 19 moved the `ref` to an official prop\n            if (reactVerMajor >= 19) {\n              if (typeof child.props.ref === 'function') {\n                child.props.ref(element);\n              } else if (child.props.ref) {\n                child.props.ref.current = element;\n              }\n            } else {\n              // older versions of React had the `ref` separate from props (still works in R19\n              //  but results in a deprecation warning in Dev builds)\n              if (typeof child.ref === 'function') {\n                child.ref(element);\n              } else if (child.ref) {\n                child.ref.current = element;\n              }\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n}(React.Component); // NOTE: While React 19 REMOVED support for `propTypes`, support for `defaultProps`\n//  __for class components ONLY__ remains: \"Class components will continue to support\n//  defaultProps since there is no ES6 alternative.\"\n//  @see https://react.dev/blog/2024/04/25/react-19-upgrade-guide#removed-proptypes-and-defaultprops\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\n\n// 🔺 DEPRECATED: default export\nmodule.exports = FocusTrap;\n\n// named export\nmodule.exports.FocusTrap = FocusTrap;","import { forwardRef, useContext } from 'react';\nimport usePortal from 'react-cool-portal';\nimport styled, { css } from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\nimport { FocusTrap } from 'focus-trap-react';\n\nimport { DrawerProps } from './Drawer.types';\nimport { DrawerSizes } from './Drawer.enums';\nimport { useLockBodyScroll } from '../../hooks/useLockBodyScroll';\nimport { useOuterClick } from '../../hooks/useOuterCallback';\nimport { Inline, Surface } from '../layout';\nimport { Overlay } from '../_internal/BaseOverlay';\nimport { pxToRem } from '../../utils';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { SpaceSizes } from '../../theme';\nimport { DSContext } from '../../theme/DSProvider/DSProvider';\nimport { CloseButton } from '../CloseButton';\nimport { StretchEnum } from '../layout/Inline/Inline.enums';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { FloatingProvider } from '../../contexts/FloatingContext';\nimport ElementLabel from '../ElementLabel/ElementLabel';\n\nconst widthVariants = {\n  [DrawerSizes.md]: 480,\n  [DrawerSizes.lg]: 720,\n  [DrawerSizes.xl]: 960,\n};\n\nconst Header = styled.div`\n  border-bottom: 1px solid var(--sscds-border-color);\n  padding-inline: var(--sscds-space-dialog-content-padding);\n  padding-block: calc(var(--sscds-space-dialog-content-padding) / 2);\n`;\n\nconst noBackdropStyle = css`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: var(--sscds-depth-modal);\n`;\n\nconst SurfaceContainer = styled.div<{\n  $maxWidth: number;\n  $hasBackdrop: boolean;\n}>`\n  height: calc(100% - var(--sscds-drawer-offset) * 2);\n  max-width: ${({ $maxWidth }) => pxToRem($maxWidth)};\n  margin: var(--sscds-drawer-offset);\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n\n  ${({ $hasBackdrop }) => !$hasBackdrop && noBackdropStyle};\n`;\n\nconst BaseDrawer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n`;\n\n/* stylelint-disable */\nconst Title = styled(ElementLabel)`\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n/* stylelint-enable */\n\nconst Content = styled.div`\n  overflow-y: auto;\n  flex-grow: 2;\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Footer = styled.div`\n  border-top: 1px solid var(--sscds-border-color);\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Adornment = styled.div`\n  max-width: ${pxToRem(36)};\n  max-height: ${pxToRem(36)};\n`;\n\nconst DrawerBox = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      size,\n      adornment,\n      children,\n      footer,\n      title,\n      onClose,\n      className,\n      hasBackdrop,\n      ...props\n    },\n    ref,\n  ) => {\n    const hasFooter = isNotUndefined(footer);\n    const hasAdornment = isNotUndefined(adornment);\n\n    return (\n      <SurfaceContainer\n        $hasBackdrop={hasBackdrop}\n        $maxWidth={widthVariants[size]}\n        role=\"dialog\"\n        style={{\n          '--sscds-drawer-offset': 'var(--sscds-space-6x)',\n        }}\n      >\n        <Surface\n          elevation={5}\n          radius=\"lg\"\n          style={{ display: 'flex', width: '100%' }}\n          hasBorder\n        >\n          <BaseDrawer\n            ref={ref}\n            aria-labelledby=\"ds-drawer-title\"\n            className={cls(CLX_COMPONENT, className)}\n            {...props}\n          >\n            <Header>\n              <Inline align=\"center\" stretch={StretchEnum.start}>\n                <Inline align=\"center\" gap={SpaceSizes.md}>\n                  {hasAdornment && <Adornment>{adornment}</Adornment>}\n                  <TitleWrapper>\n                    <Title id=\"ds-drawer-title\" size=\"md\">\n                      {title}\n                    </Title>\n                  </TitleWrapper>\n                </Inline>\n                <CloseButton\n                  marginCompensation={SpaceSizes.md}\n                  onClose={onClose}\n                />\n              </Inline>\n            </Header>\n            <Content>{children}</Content>\n            {hasFooter && <Footer>{footer}</Footer>}\n          </BaseDrawer>\n        </Surface>\n      </SurfaceContainer>\n    );\n  },\n);\n\nconst Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      title,\n      onClose,\n      footer,\n      size = DrawerSizes.md,\n      adornment,\n      hasBackdrop = true,\n      clickOutsideToHide = false,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const { portalsContainerId } = useContext(DSContext);\n    const { Portal } = usePortal({\n      containerId: portalsContainerId,\n      internalShowHide: false,\n      autoRemoveContainer: false,\n      clickOutsideToHide: hasBackdrop || clickOutsideToHide,\n      escToHide: true,\n      onHide: onClose,\n    });\n    const drawerRef = useOuterClick<HTMLDivElement>(onClose);\n\n    const drawerProps = {\n      size,\n      ref:\n        hasBackdrop || clickOutsideToHide\n          ? mergeRefs<HTMLDivElement>(drawerRef, ref)\n          : ref,\n      adornment,\n      footer,\n      children,\n      title,\n      onClose,\n      hasBackdrop,\n      ...props,\n    };\n\n    useLockBodyScroll({ enabled: hasBackdrop });\n\n    return (\n      <FloatingProvider>\n        <Portal>\n          <FocusTrap\n            focusTrapOptions={{\n              initialFocus: false,\n              fallbackFocus: () => {\n                const drawer = document.querySelector('[role=\"dialog\"]');\n                return drawer as HTMLElement;\n              },\n              clickOutsideDeactivates: hasBackdrop || clickOutsideToHide,\n              escapeDeactivates: true,\n              allowOutsideClick: true,\n            }}\n          >\n            {hasBackdrop ? (\n              <Overlay data-testid=\"dialog-overlay\" placement=\"right\">\n                <DrawerBox {...drawerProps} />\n              </Overlay>\n            ) : (\n              <DrawerBox {...drawerProps} />\n            )}\n          </FocusTrap>\n        </Portal>\n      </FloatingProvider>\n    );\n  },\n);\n\nexport default Drawer;\n","export * as DrawerEnums from './Drawer.enums';\nexport { default as Drawer } from './Drawer';\nexport * from './Drawer.types';\n"],"names":["cov_mlje7zhi5","actualCoverage","DrawerSizes","md","lg","xl","candidateSelectors","candidateSelector","NoElement","matches","getRootNode","element","_element$getRootNode","isInert","node","lookUp","_node$getAttribute","inertAtt","inert","result","isContentEditable","_node$getAttribute2","attValue","getCandidates","el","includeContainer","filter","candidates","getCandidatesIteratively","elements","options","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","hasTabIndex","getTabIndex","getSortOrderTabIndex","isScope","tabIndex","sortOrderedTabbables","a","b","isInput","isHiddenInput","isDetailsWithSummary","r","child","getCheckedRadio","nodes","form","i","isTabbableRadio","radioScope","queryRadios","name","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","width","height","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","acc","sortable","tabbable","container","focusable","isTabbable","focusableCandidateSelector","isFocusable","_arrayLikeToArray","e","n","_arrayWithoutHoles","_defineProperty","t","_toPropertyKey","_iterableToArray","_nonIterableSpread","ownKeys","o","_objectSpread2","_toConsumableArray","_unsupportedIterableToArray","_toPrimitive","activeFocusTraps","trapStack","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","isKeyForward","isKeyBackward","delay","fn","valueOrHandler","value","_len","params","_key","getActualTarget","event","internalTrapStack","createFocusTrap","userOptions","doc","config","state","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","composedPath","tabbableNodes","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","posTabIndexesFound","forward","nodeIdx","group","g","_getActiveElement","activeElement","_tryFocus","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","target","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","checkFocusIn","targetContained","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","checkKeyNav","checkTabKey","checkEscapeKey","checkClick","addListeners","removeListeners","checkDomRemoval","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","updateObservedNodes","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","pauseOptions","unpauseOptions","containerElements","elementsAsArray","paused","onPause","onPostPause","onUnpause","onPostUnpause","_typeof","_exec$","_exec","_classCallCheck","_defineProperties","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","_assertThisInitialized","_inherits","_setPrototypeOf","React","require$$0","_require","require$$1","_require2","require$$2","reactVerMajor","FocusTrap","_React$Component","props","_this","_this$internalOptions","_this$getDocument","focusTrapOptions","currentDocument","allowDeactivation","_this2","returnFocusNode","canReturnFocus","_this2$internalOption","preventScroll","nodesExist","prevProps","hasActivated","hasDeactivated","hasPaused","hasUnpaused","_this3","callbackRef","childWithRef","focusTrapReactModule","FocusTrap_1","cov_b5nebovok","path","hash","global","gcv","coverageData","coverage","hasBackdrop","widthVariants","s","Header","styled","div","withConfig","displayName","componentId","noBackdropStyle","css","SurfaceContainer","$maxWidth","f","pxToRem","$hasBackdrop","BaseDrawer","TitleWrapper","children","Content","Footer","Adornment","DrawerBox","forwardRef","adornment","title","onClose","footer","hasFooter","isNotUndefined","portalsContainerId","jsx","size","role","style","clickOutsideToHide","useLockBodyScroll","hasAdornment","Title","id","drawer","CloseButton","marginCompensation","SpaceSizes","cov_1flzw6jyb2"],"mappings":"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A,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAA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","x_google_ignoreList":[1,2,3]}
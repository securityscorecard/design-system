{"version":3,"file":"Select.stories-DoJotDlH.js","sources":["../../../src/components/forms/Select/Select.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { OptionsType } from 'react-select';\n\nimport Select from './Select';\nimport { Option, SelectProps } from './Select.types';\nimport { Inline, Padbox, Stack } from '../../layout';\nimport { Pill } from '../../Pill';\nimport { PillColors } from '../../Pill/Pill.enums';\nimport { Heading } from '../../Heading';\nimport { Text } from '../../Text';\nimport { Label } from '../Label';\nimport { Button } from '../../Button';\n\nconst options = [\n  { value: 'HR', label: 'Croatia', isDisabled: true },\n  { value: 'CU', label: 'Cuba' },\n  { value: 'CW', label: 'Cura\\u00e7ao' },\n  { value: 'CY', label: 'Cyprus' },\n  { value: 'CZ', label: 'Czech Republic' },\n  { value: 'DK', label: 'Denmark' },\n];\n\nconst groupedOptions = [\n  { label: 'United States', value: 'US' },\n  {\n    label: 'Europe',\n    options: [\n      { value: 'HR', label: 'Croatia', isDisabled: true },\n      { value: 'CZ', label: 'Czech Republic' },\n      { value: 'DK', label: 'Denmark' },\n    ],\n  },\n  {\n    label: 'Islands',\n    options: [\n      { value: 'CU', label: 'Cuba' },\n      { value: 'CW', label: 'Cura\\u00e7ao' },\n      { value: 'CY', label: 'Cyprus' },\n    ],\n  },\n  { label: 'Canada', value: 'CA' },\n];\n\nconst disabledOptions = [\n  { value: 'HR', label: 'Croatia', isDisabled: true },\n  { value: 'CY', label: 'Cyprus', isDisabled: true },\n  { value: 'CU', label: 'Cuba' },\n  { value: 'CZ', label: 'Czech Republic' },\n];\n\nconst longOptions = [\n  { value: '01', label: '123456789012345678901234567890' },\n  { value: '02', label: '12345678901234567890' },\n  { value: '03', label: '1234567890' },\n  ...options,\n];\n\nexport default {\n  title: 'components/forms/Select/Select',\n  component: Select,\n  parameters: {\n    docs: {\n      description: {\n        component: `\n\\`\\`\\`js\nimport { Select } from '@securityscorecard/design-system';\nimport Pill from '../../Pill/Pill';\n\\`\\`\\`\n      `,\n      },\n    },\n    a11y: {\n      config: {\n        rules: [\n          { id: 'color-contrast', enabled: false },\n          { id: 'label', enabled: false },\n          { id: 'scrollable-region-focusable', enabled: false },\n        ],\n      },\n    },\n  },\n  argTypes: {\n    options: {\n      table: {\n        type: {\n          detail: `\n[\n  {\n    label: string,\n    value: string,\n    isDisabled?: boolean,\n  }\n\n  OR\n\n  {\n    label: string,\n    options: {\n      label: string,\n      value: string,\n      isDisabled?: boolean,\n    }\n  }\n]\n          `,\n        },\n      },\n    },\n    defaultValue: {\n      table: {\n        type: {\n          detail: `\n{\n  label: string,\n  value: string,\n  isDisabled?: boolean,\n}\n\nOR\n\n[\n  {\n    label: string,\n    value: string,\n    isDisabled?: boolean,\n  }\n]\n          `,\n        },\n      },\n    },\n    isLoading: {\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    isMulti: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    defaultIsMenuOpen: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n  },\n} as Meta;\n\ntype Story<Multi extends boolean = true> = StoryFn<SelectProps<Multi>>;\n\nconst SelectTemplate: Story = (args) => {\n  return <Select {...args} aria-label=\"Select\" isMenuPositionRelative />;\n};\n\nexport const Playground: Story<false> = SelectTemplate.bind({});\nPlayground.args = {\n  options,\n  placeholder: 'Select country...',\n};\n\nexport const Default = SelectTemplate.bind({});\nDefault.args = {\n  options,\n};\n\nexport const WithDefaultValue = SelectTemplate.bind({});\nWithDefaultValue.args = {\n  ...Default.args,\n  defaultValue: options[1],\n};\n\nexport const WithPlaceholder = SelectTemplate.bind({});\nWithPlaceholder.args = {\n  ...Default.args,\n  placeholder: 'Select country...',\n};\n\nexport const Focus = SelectTemplate.bind({});\nFocus.args = {\n  ...Default.args,\n  className: 'focus',\n};\n\nexport const Invalid = SelectTemplate.bind({});\nInvalid.args = {\n  ...Default.args,\n  isInvalid: true,\n};\n\nexport const Disabled = SelectTemplate.bind({});\nDisabled.args = {\n  ...Default.args,\n  isDisabled: true,\n  defaultValue: [options[1]],\n  isMulti: true,\n};\n\nexport const Loading = SelectTemplate.bind({});\nLoading.args = {\n  ...Default.args,\n  isLoading: true,\n};\n\nexport const Clearable = SelectTemplate.bind({});\nClearable.args = {\n  ...WithDefaultValue.args,\n  isClearable: true,\n};\n\nexport const Opened = SelectTemplate.bind({});\nOpened.args = {\n  ...Default.args,\n  defaultIsMenuOpen: true,\n};\n\nexport const OptionsGroup = SelectTemplate.bind({});\nOptionsGroup.args = {\n  options: groupedOptions,\n  defaultIsMenuOpen: true,\n  isClearable: true,\n};\n\nexport const DisabledOptions = SelectTemplate.bind({});\nDisabledOptions.args = {\n  options: disabledOptions,\n  defaultIsMenuOpen: true,\n};\n\nexport const MultiSelect: Story = (args) => (\n  <Stack gap=\"md\">\n    <Select {...args} isClearable />\n    <Select {...args} defaultInputValue=\"Cu\" />\n    <Select\n      {...args}\n      defaultInputValue=\"Cu\"\n      defaultValue={[options[1]]}\n      isClearable\n    />\n    <Select\n      {...args}\n      defaultValue={[options[1], options[2]]}\n      defaultIsMenuOpen\n    />\n  </Stack>\n);\nMultiSelect.args = {\n  ...OptionsGroup.args,\n  isMenuPositionRelative: true,\n  isMulti: true,\n};\n\nexport const NoOptionFound = SelectTemplate.bind({});\nNoOptionFound.args = {\n  ...Opened.args,\n  defaultInputValue: 'foo',\n  isClearable: true,\n};\n\nexport const CustomNoOptionFound = SelectTemplate.bind({});\nCustomNoOptionFound.args = {\n  ...NoOptionFound.args,\n  noOptionsMessage: () => 'You know nothing, Jon Snow',\n};\n\nexport const CustomMenuActions = SelectTemplate.bind({});\nCustomMenuActions.args = {\n  ...Opened.args,\n  options: groupedOptions,\n  menuActions: [\n    {\n      label: 'Action A',\n      name: 'Action A',\n      onClick: action('click-action-a'),\n    },\n    {\n      label: 'Action B',\n      name: 'Action B',\n      onClick: action('click-action-b'),\n    },\n  ],\n};\n\nexport const PillTruncation: Story = (args) => (\n  <Stack gap=\"md\">\n    <Heading size=\"h3\">Default truncation N=16</Heading>\n    <Select {...args} />\n    <Heading size=\"h3\">Custom truncation N=25</Heading>\n    <Select {...args} maxPillLabelLength={25} />\n    <Heading size=\"h3\">Custom truncation N=5</Heading>\n    <Select {...args} maxPillLabelLength={5} />\n  </Stack>\n);\nPillTruncation.args = {\n  ...MultiSelect.args,\n  options: longOptions,\n  defaultValue: [longOptions[2], longOptions[1], longOptions[0]],\n};\n\nexport const PillWrapping: Story = (args) => (\n  <div style={{ width: '200px' }}>\n    <Select {...args} />\n  </div>\n);\nPillWrapping.args = {\n  ...MultiSelect.args,\n  color: PillColors.gray,\n  options: longOptions,\n  defaultValue: [longOptions[2], longOptions[1]],\n};\n\nexport const MaxVisibleItem: Story = (args) => (\n  <div>\n    <Select {...args} />\n  </div>\n);\nMaxVisibleItem.args = {\n  ...MultiSelect.args,\n  options: longOptions,\n  defaultValue: [\n    longOptions[0],\n    longOptions[1],\n    longOptions[2],\n    longOptions[5],\n  ],\n  isClearable: false,\n  isMulti: true,\n  maxVisibleItem: 3,\n};\n\nexport const CustomOptionLabel: Story = (args) => (\n  <Select\n    formatOptionLabel={(data) => (\n      <Inline align=\"center\" gap=\"xs\">\n        <span>({data.value})</span>\n        <span>{data.label}</span>\n      </Inline>\n    )}\n    {...args}\n  />\n);\nCustomOptionLabel.args = {\n  ...MultiSelect.args,\n  defaultValue: [options[1], options[2]],\n};\n\nexport const CustomMultiValueLabel: Story = (args) => (\n  <Select\n    formatOptionLabel={(data, meta) => {\n      const renderMultiValueLabel = meta.context === 'value';\n\n      return renderMultiValueLabel ? (\n        <Inline align=\"center\" gap=\"xs\">\n          <span>({data.value})</span>\n          <span>{data.label}</span>\n        </Inline>\n      ) : (\n        <span>{data.label}</span>\n      );\n    }}\n    {...args}\n  />\n);\nCustomMultiValueLabel.args = {\n  ...Default.args,\n  isMenuPositionRelative: true,\n  isMulti: true,\n  defaultIsMenuOpen: true,\n};\n\nconst MyMenuList = ({ children }) => {\n  return (\n    <div>\n      <Text>Custom MenuList</Text>\n      {children}\n    </div>\n  );\n};\n\nexport const WithCustomComponents = SelectTemplate.bind({});\nWithCustomComponents.args = {\n  options,\n  components: {\n    MenuList: MyMenuList,\n  },\n};\n\nexport const CustomGroupLabel: Story = (args) => (\n  <Select\n    formatGroupLabel={(group) => (\n      <Inline gap=\"md\" justify=\"space-between\">\n        <Text isBold>{group.label}</Text>\n        <Pill label={group.options.length.toString()} />\n      </Inline>\n    )}\n    {...args}\n  />\n);\nCustomGroupLabel.args = {\n  ...MultiSelect.args,\n};\n\nconst filterOptions = (inputValue: string) => {\n  return options.filter((i) =>\n    i.label.toLowerCase().includes(inputValue.toLowerCase()),\n  );\n};\n\nconst promiseOptions = (inputValue: string): Promise<Option[]> =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(filterOptions(inputValue));\n    }, 1000);\n  });\n\nexport const AsyncSelect: Story<false> = () => {\n  return (\n    <Stack gap=\"md\">\n      <Select\n        loadOptions={promiseOptions}\n        placeholder=\"Single select (async)\"\n        cacheOptions\n        defaultOptions\n        isAsync\n      />\n      <Select\n        loadOptions={promiseOptions}\n        placeholder=\"Multi select (async)\"\n        cacheOptions\n        defaultOptions\n        isAsync\n        isMulti\n      />\n    </Stack>\n  );\n};\n\nAsyncSelect.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const MultiSelectWithControlledValue: Story = (args) => {\n  const [selectedOptions, setSelectedOptions] = useState<OptionsType<Option>>([\n    options[1],\n    options[2],\n  ]);\n\n  return (\n    <Stack gap=\"md\">\n      <Select\n        {...args}\n        closeMenuOnSelect={false}\n        value={selectedOptions}\n        menuIsOpen\n        onChange={(values) => {\n          setSelectedOptions(values);\n        }}\n      />\n\n      <Padbox>\n        <Label>Selected Values</Label>\n        <Stack gap=\"md\">\n          {selectedOptions.map((option) => (\n            <Inline key={option.value} gap=\"sm\">\n              <Label style={{ width: '100px' }}>{option.label}</Label>\n              <Button\n                variant=\"text\"\n                onClick={() =>\n                  setSelectedOptions((prev) =>\n                    prev.filter((o) => o.value !== option.value),\n                  )\n                }\n              >\n                Remove\n              </Button>\n            </Inline>\n          ))}\n        </Stack>\n      </Padbox>\n    </Stack>\n  );\n};\nMultiSelectWithControlledValue.args = {\n  ...OptionsGroup.args,\n  isMenuPositionRelative: true,\n  isMulti: true,\n};\nMultiSelectWithControlledValue.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const DarkMode: Story = (args) => <Select {...args} />;\nDarkMode.args = {\n  ...OptionsGroup.args,\n  isMenuPositionRelative: true,\n  isMulti: true,\n  defaultValue: [options[4]],\n  isClearable: true,\n  menuActions: [\n    {\n      label: 'Action A',\n      name: 'Action A',\n      onClick: action('click-action-a'),\n    },\n  ],\n};\nDarkMode.parameters = {\n  themes: {\n    themeOverride: 'Dark',\n  },\n};\n"],"names":["label","isDisabled","value","groupedOptions","options","disabledOptions","Select_stories","title","component","Select","description","a11y","rules","id","enabled","longOptions","argTypes","type","detail","isLoading","control","table","summary","defaultValue","isMulti","defaultIsMenuOpen","SelectTemplate","args","Playground","bind","placeholder","Default","WithDefaultValue","WithPlaceholder","Focus","isInvalid","Disabled","Loading","StoryFn","Clearable","isClearable","Opened","className","Invalid","MultiSelect","jsxs","Stack","jsx","OptionsGroup","isMenuPositionRelative","NoOptionFound","DisabledOptions","noOptionsMessage","CustomMenuActions","menuActions","action","defaultInputValue","Heading","name","PillWrapping","PillTruncation","Story","color","PillColors","gray","width","MaxVisibleItem","maxVisibleItem","CustomOptionLabel","data","CustomMultiValueLabel","meta","context","children","WithCustomComponents","components","MenuList","MyMenuList","Text","includes","setTimeout","resolve","filterOptions","CustomGroupLabel","group","Pill","length","toString","screenshot","inputValue","filter","i","toLowerCase","promiseOptions","option","AsyncSelect","DarkMode","parameters","skip","MultiSelectWithControlledValue","setSelectedOptions","useState","themes","themeOverride"],"mappings":"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"}
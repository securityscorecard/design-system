{"version":3,"file":"Banner-CbnyRipz.js","sources":["../../../src/components/Banner/Banner.enums.ts","../../../src/components/Banner/Banner.tsx"],"sourcesContent":["export const BannerVariants = {\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  success: 'success',\n} as const;\n","import { type MouseEvent, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { isNonEmptyArray, noop } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { BannerContentProps, BannerProps } from './Banner.types';\nimport {\n  AbsoluteLinkActionKind,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport { BannerVariants } from './Banner.enums';\nimport { Button } from '../Button';\nimport { Inline, Padbox, Stack } from '../layout';\nimport { Text } from '../Text';\nimport { CloseButton } from '../CloseButton';\nimport { BaseToastBanner } from '../_internal/BaseToastBanner';\nimport { baseToastBannerColorVariants } from '../_internal/BaseToastBanner/BaseToastBanner';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { useContainerQuery } from '../../hooks/useContainerQuery';\n\nconst bannerBorderColor = {\n  [BannerVariants.info]: 'var(--sscds-color-border-info)',\n  [BannerVariants.warn]: 'var(--sscds-color-border-warning)',\n  [BannerVariants.error]: 'var(--sscds-color-border-danger)',\n  [BannerVariants.success]: 'var(--sscds-color-border-success)',\n};\n\nconst StyledPadbox = styled(Padbox)<{ $variant?: BannerProps['variant'] }>`\n  background-color: ${({ $variant }) => baseToastBannerColorVariants[$variant]};\n  border-radius: var(--sscds-radii-surface-md);\n  border: 1px solid ${({ $variant }) => bannerBorderColor[$variant]};\n`;\n\nconst ContentWrapper = styled(Padbox)`\n  padding-left: 0rem;\n`;\n\nconst CHANGE_LAYOUT_BREAKPOINT = 'change-banner-layout';\n\nconst BannerContent = ({ children, actions, isInline }: BannerContentProps) => (\n  <>\n    <Text as=\"div\" style={{ maxWidth: '115ch' }}>\n      {children}\n    </Text>\n    {isNonEmptyArray(actions) && (\n      <Inline\n        gap=\"md\"\n        style={{ marginBlock: isInline ? '-0.375rem' : undefined }}\n      >\n        {actions.map((action) => (\n          <Button\n            key={action.name}\n            href={(action as AbsoluteLinkActionKind<[MouseEvent]>).href}\n            name={action.name}\n            style={{ height: '2rem' }}\n            to={(action as RelativeLinkActionKind<[MouseEvent]>).to}\n            variant=\"outline\"\n            onClick={action.onClick}\n          >\n            {action.label}\n          </Button>\n        ))}\n      </Inline>\n    )}\n  </>\n);\n\nconst Banner = ({\n  children,\n  variant = BannerVariants.info,\n  actions,\n  isDismissable = true,\n  onClose = noop,\n  className,\n  changeLayoutBreakpoint = 960,\n  ...props\n}: BannerProps) => {\n  const changeLayoutQuery = useMemo(\n    () => ({\n      [CHANGE_LAYOUT_BREAKPOINT]: { minWidth: changeLayoutBreakpoint },\n    }),\n    [changeLayoutBreakpoint],\n  );\n  const [query, containerRef] = useContainerQuery(changeLayoutQuery);\n  const isInline = query[CHANGE_LAYOUT_BREAKPOINT];\n  return (\n    <StyledPadbox\n      ref={containerRef}\n      $variant={variant}\n      className={cls(CLX_COMPONENT, className)}\n      {...props}\n    >\n      <BaseToastBanner hasBackground={false} variant={variant}>\n        <ContentWrapper paddingSize=\"md\">\n          <Inline align=\"flex-start\" gap=\"xl\" stretch={1}>\n            {isInline ? (\n              <Inline align=\"flex-start\" gap=\"md\" justify=\"space-between\">\n                <BannerContent actions={actions} isInline>\n                  {children}\n                </BannerContent>\n              </Inline>\n            ) : (\n              <Stack align=\"center\" gap=\"md\">\n                <BannerContent actions={actions}>{children}</BannerContent>\n              </Stack>\n            )}\n            {isDismissable && (\n              <CloseButton\n                aria-label=\"Close banner\"\n                marginCompensation=\"md\"\n                style={{ marginBlock: '0.125rem' }}\n                onClose={onClose}\n              />\n            )}\n          </Inline>\n        </ContentWrapper>\n      </BaseToastBanner>\n    </StyledPadbox>\n  );\n};\n\nBanner.displayName = 'Banner';\n\nexport default Banner;\n"],"names":["cov_fqjbavy1o","actualCoverage","BannerVariants","info","warn","error","success","cov_2aow7x83jh","path","hash","global","gcv","coverageData","coverage","bannerBorderColor","s","StyledPadbox","styled","Padbox","withConfig","displayName","componentId","$variant","f","baseToastBannerColorVariants","ContentWrapper","CHANGE_LAYOUT_BREAKPOINT","BannerContent","children","actions","isInline","jsxs","Fragment","jsx","Text","as","style","maxWidth","undefined","marginBlock","b","map","action","Button","href","name","className","Banner","variant","isDismissable"],"mappings":"ujDAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,EAAME,MAAAA,GAAAA,EAAAA,EAAAA,OAAiB,CAC5BC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,SACX,GCsBA,SAAAC,GAAA,CAAA,IAAAC,EAAA,iFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,iFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,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"}
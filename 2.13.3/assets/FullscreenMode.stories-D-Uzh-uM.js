import{j as e}from"./jsx-runtime-CfatFE5O.js";import{r as c}from"./index-ClcD9ViR.js";import{D as p}from"./Datatable-CY3pJogs.js";import{a as d,T as r}from"./argTypes-CGY1KX4p.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLogger-CGEbE2mZ.js";import"./index-CUb24YOv.js";import"./constants-C4Oh6sKJ.js";import"./space.enums-FzolKu9U.js";import"./_isObject-BZZHHNGj.js";import"./styled-components.browser.esm-6IU7b-y2.js";import"./DSProvider-Cqa5do1Y.js";import"./index-_KdZNTQd.js";import"./theme-B4UkYPRv.js";import"./colors-BJBAFLAc.js";import"./PaginationToolbar-puo24fTf.js";import"./SelectionToolbar-B-gmUSrD.js";import"./index-DYDjgMG1.js";import"./Icon-CHceuV7K.js";import"./index-CeOnF3dB.js";import"./index-DbwGX_n3.js";import"./index-DxcpycWO.js";import"./index-UOk5nvl2.js";import"./index-BaexK_kB.js";import"./Padbox-DmYWNoOJ.js";import"./index-CLVl6jk_.js";import"./prop-C6y-wj7q.js";import"./Inline.enums-BdnhnZ8J.js";import"./Cluster-CGQQQZ4I.js";import"./index-CpAvg4Hc.js";import"./Button-vEOnW8Bm.js";import"./components-MIUzfLU3.js";import"./index-CGIPeC-W.js";import"./Spinner-CScYiCuC.js";import"./useSafeTranslation-BH9xR3W8.js";import"./en-US-DVFKJdgt.js";import"./pluck-DtgIh6Gb.js";import"./IconButton-CUW5D67R.js";import"./useContainerQuery-uyIEPHxz.js";import"./Skeleton-RJ8AjUwu.js";import"./useLocalStorageState-UxkHlwiN.js";import"./index-DTMAbG_k.js";import"./index-CiMTWSno.js";import"./Tooltip-BJtTNnrF.js";import"./FloatingContext-f-xOTKfR.js";import"./index-B2iyLVXu.js";import"./CloseButton-Cw8Fr_ZE.js";import"./index-Ccg6HrRD.js";import"./isFunction-DJDWul57.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-C-iNasD-.js";import"./modifiers.esm-ByjRBgE8.js";import"./index-xJp9Kd2E.js";import"./index-C-FffhfA.js";import"./Pill-v3oAvX7G.js";import"./PillRemoveButton-DgC9NddM.js";const fr={title:"components/DatatableV2/FullscreenMode",component:p,parameters:{screenshot:{skip:!0},docs:{story:{inline:!1,height:600}}},argTypes:d},u=r.bind({});u.args=r.args;const g=r.bind({});g.args={...r.args,enableFullScreenMode:!1};const a=r.bind({});a.args={...r.args,initialState:{isFullscreenMode:!0}};a.parameters={screenshot:{skip:!1}};const t=m=>{const[o,l]=c.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(p,{state:{isFullscreenMode:o},manualSorting:!0,onFullscreenModeChange:l,...m}),e.jsxs("div",{children:[e.jsx("strong",{children:"Debug:"}),e.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=r.args;var s,i,n;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [isFullscreenMode, setIsFullscreenMode] = useState(false);
  return <>
      <Datatable state={{
      isFullscreenMode
    }} manualSorting onFullscreenModeChange={setIsFullscreenMode} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(isFullscreenMode, null, 2)}</pre>
      </div>
    </>;
}`,...(n=(i=t.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const Sr=["FullscreenModeEnabled","FullscreenModeDisabled","InitialFullscreenMode","FullscreenModeManagedState"];export{g as FullscreenModeDisabled,u as FullscreenModeEnabled,t as FullscreenModeManagedState,a as InitialFullscreenMode,Sr as __namedExportsOrder,fr as default};
//# sourceMappingURL=FullscreenMode.stories-D-Uzh-uM.js.map

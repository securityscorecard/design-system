{"version":3,"file":"RowOnClick.stories-qvmgr6Tv.js","sources":["../../../src/components/DatatableV2/stories/RowOnClick.stories.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Meta } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport { Drawer } from '../../Drawer';\nimport Datatable from '../Datatable';\nimport Template, { Story } from './Template';\nimport { DataSource } from '../mocks/data';\nimport { Stack } from '../../layout';\nimport { DatatableInstance, DatatableRow } from '../Datatable.types';\nimport argTypes from './argTypes';\n\nexport default {\n  title: 'components/DatatableV2/RowOnClick',\n  component: Datatable,\n  parameters: {\n    screenshot: { skip: true },\n  },\n  argTypes,\n} as Meta<typeof Datatable>;\n\nexport const RowOnClickEnabled: Story = Template.bind({});\nRowOnClickEnabled.args = {\n  ...Template.args,\n  onRowClick: ({ row, table }) => action('row action')({ row, table }),\n  enableRowActions: true,\n  rowActions: [\n    {\n      iconName: 'eye-slash',\n      label: 'Make private',\n      onClick:\n        ({ row, table }) =>\n        (event) =>\n          action('rowsAction button')({ row, table, event }),\n    },\n  ],\n};\n\nexport const RowOnClickDisabled: Story = Template.bind({});\nRowOnClickDisabled.args = {\n  ...Template.args,\n};\n\nexport const ActiveRow: Story = Template.bind({});\nActiveRow.args = {\n  ...RowOnClickEnabled.args,\n  initialState: {\n    ...RowOnClickEnabled.args.initialState,\n    activeRowId: 'e23968c3-3f19-44b2-aee9-c4a1d7c326ee',\n  },\n};\nActiveRow.parameters = {\n  screenshot: { skip: false },\n};\n\nexport const ActiveRowManagedState: Story = (args) => {\n  const [activeRowId, setActiveRowId] = useState(\n    'e23968c3-3f19-44b2-aee9-c4a1d7c326ee',\n  );\n\n  return (\n    <>\n      <Datatable\n        state={{ activeRowId }}\n        onActiveRowIdChange={setActiveRowId}\n        {...args}\n      />\n      <div>\n        <strong>Debug:</strong>\n        <pre>{JSON.stringify(activeRowId, null, 2)}</pre>\n      </div>\n    </>\n  );\n};\nActiveRowManagedState.args = RowOnClickEnabled.args;\n\nconst useDatatableKeyboardNav = ({\n  row,\n  table,\n}: {\n  row: DatatableRow<DataSource>;\n  table: DatatableInstance<DataSource>;\n}) => {\n  const { flatRows = [] } = table.getSortedRowModel?.() ?? {};\n  const [rowIndex, setRowIndex] = useState(\n    flatRows.findIndex?.((flatRow) => flatRow.id === row.id),\n  );\n  useEffect(() => {\n    setRowIndex(flatRows?.findIndex?.((flatRow) => flatRow.id === row.id));\n  }, [flatRows, row.id]);\n\n  useEffect(() => {\n    const keyboardNav = (e: KeyboardEvent) => {\n      if (e.key === 'ArrowUp') {\n        setRowIndex((prev) => (prev - 1 < 0 ? 0 : prev - 1));\n        table.setActiveRowId(flatRows[rowIndex - 1 >= 0 ? rowIndex - 1 : 0].id);\n      }\n      if (e.key === 'ArrowDown') {\n        setRowIndex((prev) =>\n          prev + 1 >= flatRows.length ? flatRows.length - 1 : prev + 1,\n        );\n        table.setActiveRowId(\n          flatRows[\n            rowIndex < flatRows.length - 1 ? rowIndex + 1 : flatRows.length - 1\n          ].id,\n        );\n      }\n    };\n\n    document.addEventListener('keyup', keyboardNav);\n\n    return () => {\n      document.removeEventListener('keyup', keyboardNav);\n    };\n  }, [flatRows, flatRows.length, table, rowIndex]);\n\n  return { rows: flatRows, rowIndex };\n};\nconst renderKeyValue = ([key, value]) => {\n  if (typeof value === 'object') {\n    return (\n      <Stack gap=\"sm\">\n        <div>{key}</div>\n        {Object.entries(value).map(renderKeyValue)}\n      </Stack>\n    );\n  }\n\n  return (\n    <div key={key}>\n      {key}: {value.toString()}\n    </div>\n  );\n};\nconst DataDrawer = ({\n  row,\n  table,\n  onClose,\n}: {\n  row: DatatableRow<DataSource>;\n  table: DatatableInstance<DataSource>;\n  onClose: () => void;\n}) => {\n  const { rows, rowIndex } = useDatatableKeyboardNav({ row, table });\n\n  return (\n    <Drawer\n      hasBackdrop={false}\n      size=\"md\"\n      title={rows[rowIndex].original.organization.name}\n      onClose={onClose}\n    >\n      <Stack gap=\"sm\">\n        {Object.entries(rows[rowIndex].original).map(renderKeyValue)}\n      </Stack>\n    </Drawer>\n  );\n};\n\nexport const OpenDrawerOnRowClick: Story = (args) => {\n  const [activeRowId, setActiveRowId] = useState('');\n  const [drawerData, setDrawerData] = useState<{\n    row: DatatableRow<DataSource>;\n    table: DatatableInstance<DataSource>;\n  } | null>(null);\n\n  const handleDrawerClose = useCallback(() => {\n    setActiveRowId('');\n    setDrawerData(null);\n  }, [setDrawerData, setActiveRowId]);\n\n  return (\n    <>\n      <Datatable\n        state={{ activeRowId }}\n        onActiveRowIdChange={setActiveRowId}\n        onRowClick={(props) => {\n          if (props.row.id === activeRowId) {\n            setDrawerData(null);\n          } else {\n            setDrawerData(props);\n          }\n        }}\n        {...args}\n      />\n      {drawerData !== null && (\n        <DataDrawer\n          row={drawerData.row}\n          table={drawerData.table}\n          onClose={handleDrawerClose}\n        />\n      )}\n    </>\n  );\n};\nOpenDrawerOnRowClick.args = Template.args;\n"],"names":["component","RowOnClick_stories","parameters","screenshot","skip","argTypes","RowOnClickEnabled","Template","bind","args","onRowClick","row","table","action","rowActions","label","enableRowActions","iconName","event","onClick","RowOnClickDisabled","ActiveRow","initialState","activeRowId","ActiveRowManagedState","setActiveRowId","useState","jsxs","Fragment","jsx","Datatable","JSON","stringify","useDatatableKeyboardNav","flatRows","getSortedRowModel","rowIndex","setRowIndex","useEffect","findIndex","flatRow","id","keyboardNav","e","key","prev","length","document","renderKeyValue","value","removeEventListener","rows","Stack","onClose","toString","original","organization","name","Object","entries","map","OpenDrawerOnRowClick","setDrawerData"],"mappings":"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"}
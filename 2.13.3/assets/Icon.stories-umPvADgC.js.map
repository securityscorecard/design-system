{"version":3,"file":"Icon.stories-umPvADgC.js","sources":["../../../src/components/Icon/Icon.stories.tsx"],"sourcesContent":["import { Meta, StoryFn } from '@storybook/react';\n\nimport Icon from './Icon';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { generateControl } from '../../utils/tests/storybook';\nimport { Inline, Stack } from '../layout';\n\nexport default {\n  title: 'components/Icon',\n  component: Icon,\n  argTypes: {\n    name: {\n      ...generateControl('select', SSCIconNames),\n    },\n  },\n} as Meta<typeof Icon>;\n\ntype Story = StoryFn<typeof Icon>;\n\nexport const Playground: Story = (args) => <Icon {...args} />;\nPlayground.args = {\n  name: 'wrench',\n  color: 'neutral.900',\n  size: 'xl',\n};\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const Color: Story = (args) => <Icon {...args} />;\nColor.args = {\n  name: 'error-circle',\n  color: 'error.500',\n  size: 'xl',\n};\n\nexport const Size: Story = (args) => (\n  <Inline gap=\"md\">\n    <Icon {...args} size=\"sm\" type=\"ssc\" />\n    <Icon {...args} size=\"md\" type=\"ssc\" />\n    <Icon {...args} size=\"lg\" type=\"ssc\" />\n    <Icon {...args} size=\"xl\" type=\"ssc\" />\n  </Inline>\n);\nSize.args = {\n  name: 'eye',\n};\n\nexport const Rotation: Story = (args) => (\n  <Inline gap=\"md\">\n    <Icon {...args} />\n    <Icon rotation={90} {...args} />\n    <Icon rotation={180} {...args} />\n    <Icon rotation={270} {...args} />\n  </Inline>\n);\nRotation.args = {\n  name: 'long-arrow-left',\n  size: 'xl',\n};\n\nexport const Flip: Story = (args) => (\n  <Inline gap=\"md\">\n    <Icon {...args} />\n    <Icon flip=\"horizontal\" {...args} />\n    <Icon flip=\"vertical\" {...args} />\n    <Icon flip=\"both\" {...args} />\n  </Inline>\n);\nFlip.args = {\n  name: 'upload',\n  size: 'xl',\n};\n\nexport const UnorderedList: Story = (args) => (\n  <Stack as=\"ul\" className=\"fa-ul\" gap=\"sm\">\n    <li>\n      <Icon {...args} /> list item\n    </li>\n    <li>\n      <Icon {...args} /> list item\n    </li>\n    <li>\n      <Icon {...args} /> list item\n    </li>\n    <li>\n      <Icon {...args} /> list item\n    </li>\n  </Stack>\n);\nUnorderedList.args = {\n  name: 'check',\n  listItem: true,\n  color: 'success.500',\n};\n"],"names":["component","Icon_stories","argTypes","name","Icon","generateControl","SSCIconNames","Meta","Playground","args","jsx","screenshot","skip","parameters","Color","Story","color","size","Size","jsxs","Inline","Rotation","Flip","UnorderedList","Stack","listItem"],"mappings":"82BASEA,MAAeC,GAAA,CACfC,MAAAA,kBACEC,UAAMC,EACJF,SAAkB,CACpBC,KAAA,CACF,GAAAE,EAAA,SAAAC,CAAA,CACGC,CAEL,CAEA,EAIQC,EAAAC,GAAAC,EAAAA,IAAAN,EAAA,CAAA,GAAAK,EAAA,EACRD,EAACC,KAAA,CACSN,KAAA,SACRQ,MAAAA,cAAcC,KAAI,IAAO,EAC3BJ,EAACK,WAAA,CAEDF,WAAaG,CAAAA,KAAOC,EAASN,CAC7BK,EAEEE,MAAkBF,EAAAL,GAAAC,EAAAA,IAAAN,EAAA,CAAA,GAAAK,EAAA,EAClBQ,EAAIR,KAAE,CACPN,KAAA,eAEDa,MAAaE,YAEbD,KAAK,IACL,EAEUC,MAAAA,EAAeT,GACvBU,EAAA,KAAAC,EAAA,CAAQ,IACT,KACG,SAAA,CAAAV,MAACD,GAAO,GAAAA,EAAA,KAAA,KAAA,KAAA,MAAA,QACVN,EAAM,CAAA,GAAAM,EAAA,KAAA,KAAA,KAAA,MAAA,QACPL,EAAA,CAAA,GAAAK,EAAA,KAAA,KAAA,KAAA,MAAA,QAEDL,EAAaiB,CAAAA,GAAAA,EAAAA,KAAUN,KAASN,KAAI,MACjC,CAAA,EACH,EAEAS,EAAKT,KAAa,CACdN,KAAK,KACT,EAGyBkB,MAAAA,EAAAZ,GACvBQ,EAAAA,KAAAA,EAAAA,CAAM,IAAA,KACP,SAAA,CAAAP,EAAAA,IAAAN,EAAA,CAAA,GAAAK,EAAA,EAEDC,EAAA,IAAAN,EAAA,CAAakB,SAAMP,GAASN,GAAAA,CAC1B,CAAA,EACGC,EAAA,IAAAN,EAAA,CAAK,SAAS,IAAAK,GAAAA,CAAA,CAAA,EACdC,EAAA,IAAAN,EAAA,CAAK,SAAiB,IAAKK,GAAAA,CAAAA,CAAAA,CAAAA,EAC5B,EAEJY,OACC,CACGlB,uBACFA,KAAM,IACNc,EAGWM,MAAAA,EAAeR,GAE5BI,EAAA,KAAAC,EAAA,CAAO,IAAA,KACP,SAAA,CAAAV,EAAAA,IAAAN,EAAA,CAAW,GAAKK,EAAAA,WACR,KAAA,aAAAA,GAAAA,CAAA,CAAA,EACHC,EAAA,IAAAN,EAAA,CAAE,KAAA,WAAAK,GAAAA,CAAA,CAAA,EACPC,EAAA,IAAAN,EAAA,CAAW,KAAKK,OAAQA,GAAAA,CAAA,CAAA,CAAA,EACxB,EAEAa,EAAAb,KAAY,CACZN,KAAQ,SACRc,KAAO,IACP,EAGCM,MAAAA,KACYJ,EAAA,KAAAK,EAAA,CAAA,GAAA,eAAQ,QAAA,IAAA,KACnBrB,SAAAA,CAAAA,OAAAA,KACAsB,CAAAA,SAAAA,CAAAA,EAAAA,IAAAA,EAAAA,CAAchB,GAAAA,EAAA,EAAA,YAAA,EACdO,SACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"SemanticModal-BNIfDTHt.js","sources":["../../../src/components/SemanticModal/SemanticModal.enums.ts","../../../src/components/SemanticModal/SemanticModal.tsx"],"sourcesContent":["export const SemanticModalVariants = {\n  success: 'success',\n  warn: 'warn',\n  error: 'error',\n  ban: 'ban',\n} as const;\n","import { type ComponentProps, type MouseEvent, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\n\nimport type { SemanticModalVariants } from './SemanticModal.enums';\nimport { SemanticModalProps } from './SemanticModal.types';\nimport { Modal } from '../Modal';\nimport { Icon } from '../Icon';\nimport {\n  AbsoluteLinkActionKind,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport { pxToRem } from '../../utils';\nimport { Center, Inline, Stack } from '../layout';\nimport { SpaceSizes } from '../../theme';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Text } from '../Text';\nimport Button from '../ButtonV2/Button';\n\nconst colorVariants: Record<\n  keyof typeof SemanticModalVariants,\n  ComponentProps<typeof Icon>['color']\n> = {\n  success: 'var(--sscds-color-icon-success)',\n  warn: 'var(--sscds-color-icon-warning)',\n  error: 'var(--sscds-color-icon-danger)',\n  ban: 'var(--sscds-color-icon-danger)',\n};\n\nconst iconVariants = {\n  success: SSCIconNames.checkCircleLight,\n  warn: SSCIconNames.exclCircleLight,\n  error: SSCIconNames.exclTriangleLight,\n  ban: SSCIconNames.banLight,\n};\n\nconst StyledModal = styled(Modal)`\n  .sscds-modal-content {\n    margin-top: var(--sscds-space-negative-6x);\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  font-size: ${pxToRem(40)};\n`;\n\nconst SemanticModal = forwardRef<HTMLDivElement, SemanticModalProps>(\n  (\n    {\n      title,\n      message,\n      actions,\n      onClose,\n      variant = 'success',\n      primaryButtonColor = 'primary',\n      isPrimaryButtonLoading = false,\n      loadingText = '',\n    },\n    ref,\n  ) => {\n    const [dismissAction, mainAction] = actions ?? [];\n\n    return (\n      <StyledModal ref={ref} size=\"sm\" onClose={onClose}>\n        <Center isTextCentered>\n          <Stack gap=\"6x\">\n            <div>\n              <StyledIcon\n                color={colorVariants[variant]}\n                name={iconVariants[variant]}\n              />\n            </div>\n            <Stack gap=\"2x\">\n              <Text as=\"div\" size=\"h5\" isBold>\n                {title}\n              </Text>\n              <Text as=\"div\" size=\"md\" variant=\"subtle\">\n                {message}\n              </Text>\n            </Stack>\n            {isNotUndefined(dismissAction) && (\n              <Inline gap={SpaceSizes.md} justify=\"center\">\n                <Button\n                  as={\n                    isNotUndefined(dismissAction?.as)\n                      ? dismissAction.as\n                      : undefined\n                  }\n                  href={\n                    (dismissAction as AbsoluteLinkActionKind<[MouseEvent]>).href\n                  }\n                  name={dismissAction.name}\n                  to={\n                    (dismissAction as RelativeLinkActionKind<[MouseEvent]>).to\n                  }\n                  variant=\"subtle\"\n                  onClick={dismissAction.onClick}\n                >\n                  {dismissAction.label as string}\n                </Button>\n\n                {isNotUndefined(mainAction) && (\n                  <Button\n                    as={\n                      isNotUndefined(mainAction?.as) ? mainAction.as : undefined\n                    }\n                    href={\n                      (mainAction as AbsoluteLinkActionKind<[MouseEvent]>).href\n                    }\n                    isLoading={isPrimaryButtonLoading}\n                    loadingText={loadingText}\n                    name={mainAction.name}\n                    to={(mainAction as RelativeLinkActionKind<[MouseEvent]>).to}\n                    variant={\n                      primaryButtonColor === 'primary' ? 'base' : 'danger'\n                    }\n                    onClick={mainAction.onClick}\n                  >\n                    {mainAction.label as string}\n                  </Button>\n                )}\n              </Inline>\n            )}\n          </Stack>\n        </Center>\n      </StyledModal>\n    );\n  },\n);\n\nexport default SemanticModal;\n"],"names":["cov_zlsldahxo","actualCoverage","SemanticModalVariants","success","warn","error","ban","cov_1gupot0mlv","path","hash","global","gcv","coverageData","coverage","colorVariants","s","exclTriangleLight","iconVariants","SSCIconNames","checkCircleLight","exclCircleLight","banLight","title","actions","StyledIcon","styled","Icon","withConfig","displayName","componentId","pxToRem","SemanticModal","forwardRef","message","onClose","variant","b","primaryButtonColor","isPrimaryButtonLoading"],"mappings":"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"}
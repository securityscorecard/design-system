import{j as i}from"./jsx-runtime-Nms4Y4qS.js";import{r as g}from"./index-BwDkhjyp.js";import{D as s}from"./Datatable-BS1XgIyB.js";import{T as n,c as u}from"./Template-BTSJr8QW.js";import"./_commonjsHelpers-BosuxZz1.js";import"./useLogger-BV2AIPN5.js";import"./index-DseqSOhp.js";import"./constants-C4Oh6sKJ.js";import"./space.enums-FzolKu9U.js";import"./_isObject-BZZHHNGj.js";import"./styled-components.browser.esm-Dp0SDG1F.js";import"./DSProvider-CJQA90er.js";import"./extends-CF3RwP-h.js";import"./index-DhoXBIRq.js";import"./theme-B4UkYPRv.js";import"./colors-BJBAFLAc.js";import"./PaginationToolbar-D3QXQDb_.js";import"./menuElements-DjMq89b2.js";import"./index-nYlI4MS_.js";import"./Icon-BDYv1UkU.js";import"./index-CajKmcpa.js";import"./index-Dk74W0Oi.js";import"./index-CVyJwDg7.js";import"./index-BeaoyfpW.js";import"./index-B9Ea3eoS.js";import"./Padbox-D7p1agbO.js";import"./index-CHCeFjJF.js";import"./prop-C6y-wj7q.js";import"./Inline.enums-Cxnp2INc.js";import"./Cluster-x6SODxoc.js";import"./index-iel8gM5l.js";import"./IconButton-G79IfSWP.js";import"./components-KPog_F_-.js";import"./index-BZ_qC4EF.js";import"./Spinner-CMiMP2Eh.js";import"./useSafeTranslation-D7WzaY-Y.js";import"./en-US-wky7Us-i.js";import"./Button-CXTuE1Mx.js";import"./pluck-DtgIh6Gb.js";import"./useContainerQuery-BBrWYpwZ.js";import"./Skeleton-4tPyiyJG.js";import"./useLocalStorageState-UxkHlwiN.js";import"./index-Tm3zSpl6.js";import"./index-BPKnG4rV.js";import"./Tooltip-arLSrIhq.js";import"./FloatingContext-Cr2ZSxO5.js";import"./index-DQm2UIbK.js";import"./CloseButton-DAl5F0pU.js";import"./index-BAFidxi4.js";import"./isFunction-DJDWul57.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-CHKde6Px.js";import"./modifiers.esm-CDknwSvc.js";import"./index-xJp9Kd2E.js";import"./index-CSt5TfZv.js";import"./Pill-BDPtuStQ.js";import"./PillRemoveButton-BRdfmSP3.js";const xn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}}},c=n.bind({});c.args=n.args;const d=n.bind({});d.args={...n.args,enableColumnPinning:!1};const P=n.bind({});P.args={...n.args,columns:[...u,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const Dn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{c as ColumnPinningEnabled,t as ColumnPinningManagedState,d as DisabledColumnPinning,P as DisabledColumnPinningForColumn,a as InitialColumnPinning,Dn as __namedExportsOrder,xn as default};
//# sourceMappingURL=ColumnPinning.stories-BS42CB9Y.js.map

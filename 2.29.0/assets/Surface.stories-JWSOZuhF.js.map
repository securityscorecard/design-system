{"version":3,"file":"Surface.stories-JWSOZuhF.js","sources":["../../../src/components/layout/Surface/Surface.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport Surface from './Surface';\nimport { Padbox, Stack } from '../index';\nimport { H5 } from '../../Heading';\nimport { Text } from '../../Text';\n\nconst meta = {\n  title: 'layout/Surface',\n  component: Surface,\n} satisfies Meta<typeof Surface>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nconst Child = () => (\n  <Stack gap=\"sm\">\n    <H5>Hello user!</H5>\n    <Text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n      pharetra magna lectus, a congue ex blandit vel. Donec id mi commodo eros\n      porta tempus. Vivamus et elit ut leo tincidunt vehicula non a dolor.\n      Suspendisse placerat turpis nisl, quis gravida sem semper et.\n    </Text>\n  </Stack>\n);\n\nexport const Playground: Story = {\n  args: {\n    children: (\n      <Padbox paddingSize=\"md\">\n        <Child />\n      </Padbox>\n    ),\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const Background: Story = {\n  render: (args) => {\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} background=\"default\" />\n        <Surface {...args} background=\"dynamic\" />\n        <Surface {...args} background=\"transparent\" />\n      </Stack>\n    );\n  },\n  args: Playground.args,\n  parameters: {\n    backgrounds: { default: 'grey' },\n  },\n};\n\nexport const BorderRadius: Story = {\n  render: (args) => {\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} radius=\"none\" />\n        <Surface {...args} radius=\"sm\" />\n        <Surface {...args} radius=\"md\" />\n        <Surface {...args} radius=\"lg\" />\n      </Stack>\n    );\n  },\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    hasBorder: true,\n  },\n};\n\nexport const Elevation: Story = {\n  render: (args) => {\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} elevation={1} />\n        <Surface {...args} elevation={2} />\n        <Surface {...args} elevation={3} />\n        <Surface {...args} elevation={4} />\n        <Surface {...args} elevation={5} />\n      </Stack>\n    );\n  },\n  args: {\n    ...Playground.args,\n    hasBorder: true,\n  },\n};\n\nexport const Bordered: Story = {\n  args: {\n    ...Playground.args,\n    hasBorder: true,\n  },\n};\n\nexport const DynamicBackgroundOnLight: Story = {\n  render: (args) => (\n    <Surface {...args}>\n      <Padbox paddingSize=\"md\">\n        <Child />\n        <Surface {...args}>\n          <Padbox paddingSize=\"md\">\n            <Child />\n            <Surface {...args}>\n              <Padbox paddingSize=\"md\">\n                <Child />\n              </Padbox>\n            </Surface>\n          </Padbox>\n        </Surface>\n      </Padbox>\n    </Surface>\n  ),\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    hasBorder: true,\n  },\n};\n\nexport const DynamicBackgroundOnDark: Story = {\n  render: (args) => (\n    <Surface {...args}>\n      <Padbox paddingSize=\"md\">\n        <Child />\n        <Surface {...args}>\n          <Padbox paddingSize=\"md\">\n            <Child />\n            <Surface {...args}>\n              <Padbox paddingSize=\"md\">\n                <Child />\n              </Padbox>\n            </Surface>\n          </Padbox>\n        </Surface>\n      </Padbox>\n    </Surface>\n  ),\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    hasBorder: true,\n  },\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["component","Surface","Meta","Child","jsxs","Stack","jsx","Playground","args","children","Padbox","Background","parameters","screenshot","skip","backgrounds","BorderRadius","Story","default","background","Elevation","hasBorder","render","DynamicBackgroundOnLight","Bordered","DynamicBackgroundOnDark","themes","themeOverride"],"mappings":"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"}
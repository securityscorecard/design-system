{"version":3,"file":"Breadcrumbs-BFps-wrT.js","sources":["../../../src/components/Breadcrumbs/BreadcrumbItem.tsx","../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\n\nimport { BreadcrumbItemProps } from './Breadcrumbs.types';\nimport { Text } from '../Text';\nimport { Link } from '../Link';\nimport { Icon } from '../Icon';\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconLink = styled(Link)`\n  &:hover {\n    color: var(--sscds-color-icon-subtle);\n  }\n`;\n\nconst BreadcrumbItem = ({\n  children,\n  isSelected = false,\n  to = undefined,\n  href = undefined,\n  iconName,\n  iconType = 'ssc',\n  ...props\n}: BreadcrumbItemProps) => {\n  const hasIcon = isNotUndefined(iconName);\n\n  return (\n    <ListItem>\n      {isSelected ? (\n        <Text aria-current=\"page\" variant=\"subtle\">\n          {children}\n        </Text>\n      ) : hasIcon ? (\n        <IconLink\n          color=\"secondary\"\n          href={href}\n          to={to}\n          {...props}\n          aria-label={children}\n        >\n          <Icon name={iconName} size=\"sm\" type={iconType} />\n        </IconLink>\n      ) : (\n        <Link color=\"secondary\" href={href} to={to} {...props}>\n          {children}\n        </Link>\n      )}\n    </ListItem>\n  );\n};\n\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n\nexport default BreadcrumbItem;\n","import * as React from 'react';\nimport { slice } from 'ramda';\nimport styled from 'styled-components';\nimport { isNilOrEmpty, isNotNilOrEmpty } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport type {\n  BreadcrumbItemProps,\n  BreadcrumbsProps,\n} from './Breadcrumbs.types';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { Icon } from '../Icon';\nimport { DropdownMenu } from '../_internal/BaseDropdownMenu';\nimport { ActionKinds } from '../../types/action.types';\nimport { ColorTypes, SpaceSizes } from '../../theme';\nimport { Inline } from '../layout';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { IconLink } from './BreadcrumbItem';\n\nconst BreadcrumbsWrapper = styled.nav`\n  display: flex;\n`;\n\nconst InlineOrderedList = styled(Inline)`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst itemsAfterCollapse = 3;\nconst itemsBeforeCollapse = 1;\n\n// Build list of breadcrumbs interspersing a separator\nconst insertSeparators = (items: React.ReactElement[]) => {\n  return items.reduce((prev, current, index) => {\n    if (index < items.length - 1) {\n      return [\n        ...prev,\n        current,\n        <Icon\n          // eslint-disable-next-line react/no-array-index-key\n          key={`separator-${index}`}\n          color={ColorTypes.neutral600}\n          name={SSCIconNames.angleRight}\n          size=\"sm\"\n          hasFixedSize\n        />,\n      ];\n    }\n\n    return [...prev, current];\n  }, []);\n};\n\nconst renderDropdown = (actions: ActionKinds<React.MouseEvent[]>[]) => (\n  <li key=\"breadcrumbs-dropdown\">\n    <DropdownMenu\n      actions={actions}\n      paneWidth={270}\n      placement=\"bottom-start\"\n      aria-hidden\n    >\n      <IconLink aria-label=\"Open breadcrumbs menu\" color=\"secondary\">\n        <Icon name=\"ellipsis-h\" size=\"sm\" />\n      </IconLink>\n    </DropdownMenu>\n  </li>\n);\n\n// this renders the list of items only when the count of the actions is bigger than 2\nconst renderItemsBeforeAndAfter = (\n  allItems: React.ReactNode[],\n  allDropdownActions: ActionKinds<React.MouseEvent[]>[],\n) => {\n  const dropdown = renderDropdown(allDropdownActions);\n  return [\n    ...slice(0, itemsBeforeCollapse, allItems),\n    dropdown,\n    ...slice(allItems.length - itemsAfterCollapse, allItems.length, allItems),\n  ];\n};\n\nconst Breadcrumbs = ({ children, className, ...props }: BreadcrumbsProps) => {\n  const allItems = React.Children.map(children, (breadcrumbItem) => {\n    if (!React.isValidElement(breadcrumbItem)) {\n      return null;\n    }\n\n    return React.cloneElement(\n      breadcrumbItem as React.ReactElement<BreadcrumbItemProps>,\n      {\n        isSelected:\n          isNilOrEmpty(breadcrumbItem.props.to) &&\n          isNilOrEmpty(breadcrumbItem.props.href),\n        ...props,\n      },\n    );\n  });\n\n  const allDropdownActions = slice(\n    itemsBeforeCollapse,\n    -Math.abs(itemsAfterCollapse),\n  )(\n    React.Children.toArray(children).map((breadcrumbItem) => {\n      if (!React.isValidElement(breadcrumbItem)) {\n        return null;\n      }\n      return {\n        label: breadcrumbItem.props.children,\n        name: breadcrumbItem.props.children,\n        ...(isNotNilOrEmpty(breadcrumbItem.props.to) && {\n          to: breadcrumbItem.props.to,\n        }),\n        ...(isNotNilOrEmpty(breadcrumbItem.props.href) && {\n          href: breadcrumbItem.props.href,\n        }),\n      };\n    }),\n  );\n\n  return (\n    <BreadcrumbsWrapper\n      aria-label=\"Breadcrumb\"\n      className={cls(CLX_COMPONENT, className)}\n    >\n      <InlineOrderedList\n        align=\"center\"\n        as=\"ol\"\n        gap={SpaceSizes.xs}\n        justify=\"center\"\n      >\n        {insertSeparators(\n          allDropdownActions.length < 2\n            ? allItems\n            : renderItemsBeforeAndAfter(allItems, allDropdownActions),\n        )}\n      </InlineOrderedList>\n    </BreadcrumbsWrapper>\n  );\n};\n\nexport default Breadcrumbs;\n"],"names":["iconName","ListItem","cov_1jwd6ytd22","s","styled","li","withConfig","displayName","componentId","IconLink","Link","isSelected","b","to","href","iconType","BreadcrumbItem","cov_1iqcgoy7zu","path","hash","global","gcv","coverageData","coverage","actualCoverage","BreadcrumbsWrapper","nav","InlineOrderedList","Inline","itemsAfterCollapse","neutral600","insertSeparators","items","f","reduce","prev","current","index","length","jsx","Icon","color","ColorTypes","name","SSCIconNames","angleRight","size","hasFixedSize","renderDropdown","actions","children","DropdownMenu","paneWidth","placement","renderItemsBeforeAndAfter","allItems","allDropdownActions","dropdown","slice","itemsBeforeCollapse"],"mappings":"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OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GA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"}
{"version":3,"file":"storybook-D0JVylcB.js","sources":["../../../node_modules/ramda/es/values.js","../../../src/utils/tests/storybook.ts"],"sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import { keys, values, zipObj } from 'ramda';\n\nexport const generateControl = <\n  K extends string | number,\n  V extends string | number,\n>(\n  type: string,\n  options: Record<K, V>,\n): {\n  options: V[];\n  control: { type: string; labels: Record<V, K> };\n} => ({\n  options: values(options),\n  control: {\n    type,\n    labels: zipObj(values(options), keys(options)),\n  },\n});\n"],"names":["values","_curry1","obj","props","keys","len","vals","idx","cov_26ql7x7thy","s","options","generateControl","type"],"mappings":"sIAoBA,IAAIA,EAEJC,EAAQ,SAAgBC,EAAK,CAM3B,QALIC,EAAQC,EAAKF,CAAG,EAChBG,EAAMF,EAAM,OACZG,EAAO,CAAA,EACPC,EAAM,EAEHA,EAAMF,GACXC,EAAKC,CAAG,EAAIL,EAAIC,EAAMI,CAAG,CAAC,EAC1BA,GAAO,EAGT,OAAOD,CACT,CAAC,4pCClCoCE,EAAAC,EAAAA,EAYnCC,CAAAA,YAAuBC,CAIvBC,EACFF","x_google_ignoreList":[0]}
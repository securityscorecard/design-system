{"version":3,"file":"SemanticModal-vwnh0AJh.js","sources":["../../../src/components/SemanticModal/SemanticModal.enums.ts","../../../src/components/SemanticModal/SemanticModal.tsx"],"sourcesContent":["export const SemanticModalVariants = {\n  success: 'success',\n  warn: 'warn',\n  error: 'error',\n  ban: 'ban',\n} as const;\n","import { type MouseEvent, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\n\nimport { SemanticModalVariants } from './SemanticModal.enums';\nimport { RenderButtonProps, SemanticModalProps } from './SemanticModal.types';\nimport { Modal, ModalEnums } from '../Modal';\nimport { Button, ButtonEnums } from '../Button';\nimport { Icon } from '../Icon';\nimport {\n  AbsoluteLinkActionKind,\n  ActionKinds,\n  RelativeLinkActionKind,\n} from '../../types/action.types';\nimport { getColor, pxToRem } from '../../utils';\nimport { Center, Inline, Padbox, Stack } from '../layout';\nimport { Color, SpaceSizes } from '../../theme';\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { H4 } from '../Heading';\nimport { Text } from '../Text';\n\nconst colorVariants: Record<keyof typeof SemanticModalVariants, Color> = {\n  [SemanticModalVariants.success]: 'success.500',\n  [SemanticModalVariants.warn]: 'warning.500',\n  [SemanticModalVariants.error]: 'error.500',\n  [SemanticModalVariants.ban]: 'error.500',\n};\n\nconst iconVariants = {\n  [SemanticModalVariants.success]: SSCIconNames.checkCircle,\n  [SemanticModalVariants.warn]: SSCIconNames.exclTriangle,\n  [SemanticModalVariants.error]: SSCIconNames.error,\n  [SemanticModalVariants.ban]: SSCIconNames.ban,\n};\n\nconst StyledIcon = styled(Icon)<{ $variant?: SemanticModalProps['variant'] }>`\n  color: ${({ $variant }) => getColor(colorVariants[$variant])};\n  font-size: ${pxToRem(48)};\n`;\n\nconst renderButton = ({\n  action,\n  color,\n  isLoading,\n  loadingText,\n  variant,\n}: RenderButtonProps) => (\n  <Button\n    key={action.name}\n    color={color}\n    href={(action as AbsoluteLinkActionKind<[MouseEvent]>).href}\n    isLoading={isLoading}\n    loadingText={loadingText}\n    name={action.name}\n    to={(action as RelativeLinkActionKind<[MouseEvent]>).to}\n    variant={variant}\n    onClick={action.onClick}\n  >\n    {action.label}\n  </Button>\n);\n\nconst SemanticModal = forwardRef<HTMLDivElement, SemanticModalProps>(\n  (\n    {\n      title,\n      message,\n      actions,\n      onClose,\n      variant = SemanticModalVariants.success,\n      primaryButtonColor = ButtonEnums.ButtonColors.primary,\n      isPrimaryButtonLoading = false,\n      loadingText = '',\n    },\n    ref,\n  ) => {\n    return (\n      <Modal ref={ref} size={ModalEnums.ModalSizes.sm} onClose={onClose}>\n        <Center isTextCentered>\n          <Stack gap={SpaceSizes.lg}>\n            <div>\n              <StyledIcon $variant={variant} name={iconVariants[variant]} />\n            </div>\n            <Stack gap={SpaceSizes.md}>\n              <H4>{title}</H4>\n              <Text as=\"div\" size=\"md\">\n                {message}\n              </Text>\n              <Padbox paddingSize={SpaceSizes.md}>\n                <Inline gap={SpaceSizes.md} justify=\"center\">\n                  {actions.map(\n                    (action: ActionKinds<[MouseEvent]>, index: number) =>\n                      isNotUndefined(action) &&\n                      renderButton({\n                        action,\n                        variant:\n                          index === 0\n                            ? ButtonEnums.ButtonVariants.outline\n                            : ButtonEnums.ButtonVariants.solid,\n                        color:\n                          index === 0\n                            ? ButtonEnums.ButtonColors.primary\n                            : primaryButtonColor,\n                        isLoading: index === 0 ? false : isPrimaryButtonLoading,\n                        loadingText,\n                      }),\n                  )}\n                </Inline>\n              </Padbox>\n            </Stack>\n          </Stack>\n        </Center>\n      </Modal>\n    );\n  },\n);\n\nexport default SemanticModal;\n"],"names":["cov_zlsldahxo","actualCoverage","SemanticModalVariants","success","warn","error","ban","cov_1gupot0mlv","path","hash","global","gcv","coverageData","coverage","colorVariants","s","checkCircle","exclTriangle","iconVariants","SSCIconNames","color","isLoading","renderButton","action","title","message","actions","onClose","primary","SemanticModal","forwardRef"],"mappings":"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"}
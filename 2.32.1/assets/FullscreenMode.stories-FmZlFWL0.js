import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{r as c}from"./index-C6mWTJJr.js";import{D as m}from"./Datatable-CE78aihF.js";import{a as d,T as r}from"./argTypes-CW70O5S9.js";import"./_commonjsHelpers-BosuxZz1.js";import"./useLogger-D6HktrB1.js";import"./index-BzkxN2vn.js";import"./constants-l-41uwkI.js";import"./space.enums-DGrZwzIk.js";import"./_isObject-dmcfxmtS.js";import"./styled-components.browser.esm-DdpL0cfT.js";import"./DSProvider-0V0etiPX.js";import"./index-CWFZYRor.js";import"./theme-Dt5JqxPR.js";import"./colors-BJBAFLAc.js";import"./PaginationToolbar-DK0Ydi9M.js";import"./SelectionToolbar-Cpbf0zfO.js";import"./index-CzFpmkVR.js";import"./Icon-D9Bd8CnO.js";import"./index-DRm3KUNF.js";import"./index-Dk74W0Oi.js";import"./index-CVyJwDg7.js";import"./index-CABfzxjM.js";import"./index-CRnaouss.js";import"./Padbox-CMSZZGn9.js";import"./index-C8Uj0hRh.js";import"./prop-gA1VFyoz.js";import"./Inline-WQsFVyS5.js";import"./Inline.enums-KPT5jvjq.js";import"./Cluster-C53_rRpf.js";import"./index-p3Ne9M6I.js";import"./Button-I8Y2XdcJ.js";import"./components-C9sJjMsI.js";import"./index-DOkAu5-S.js";import"./Spinner-Frn9DgHt.js";import"./useSafeTranslation-RSFuNJC9.js";import"./en-US-D2DA8Sg-.js";import"./pluck-B5Qa9yNi.js";import"./IconButton-Dt6UXVFt.js";import"./useContainerQuery-J3pQj2z2.js";import"./Skeleton-C3OdMv_p.js";import"./useLocalStorageState-UxkHlwiN.js";import"./Paragraph-CsW7DeuJ.js";import"./index-CZnLRAtc.js";import"./Tooltip-DJK58tJC.js";import"./FloatingContext-Bl8tl6Fh.js";import"./ElementLabel-B8jQdsnd.js";import"./index-CV-r94w-.js";import"./ControlledDropdown-BvnoebAE.js";import"./index-DYWQy94d.js";import"./isFunction-B5WoXTNq.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./usePopper-BmgVlhkC.js";import"./useOuterCallback-B34oUwCq.js";import"./noop-CGDyLuY9.js";import"./mergeRefs-C43w_hK8.js";import"./Dropdown-DrVS-_Bd.js";import"./objectWithoutPropertiesLoose-Dsqj8S3w.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./sortable.esm-DCMymTJo.js";import"./modifiers.esm-D9hq2467.js";import"./index-xJp9Kd2E.js";import"./index-B0HbwT1s.js";import"./Pill-Dx7-VHbt.js";import"./PillRemoveButton-d8NE9DkX.js";const Or={title:"components/DatatableV2/FullscreenMode",component:m,parameters:{screenshot:{skip:!0},docs:{story:{inline:!1,height:600}}},argTypes:d},u=r.bind({});u.args=r.args;const g=r.bind({});g.args={...r.args,enableFullScreenMode:!1};const n=r.bind({});n.args={...r.args,initialState:{isFullscreenMode:!0}};n.parameters={screenshot:{skip:!1}};const t=a=>{const[o,l]=c.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(m,{state:{isFullscreenMode:o},manualSorting:!0,onFullscreenModeChange:l,...a}),e.jsxs("div",{children:[e.jsx("strong",{children:"Debug:"}),e.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=r.args;var i,s,p;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:`args => {
  const [isFullscreenMode, setIsFullscreenMode] = useState(false);
  return <>
      <Datatable state={{
      isFullscreenMode
    }} manualSorting onFullscreenModeChange={setIsFullscreenMode} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(isFullscreenMode, null, 2)}</pre>
      </div>
    </>;
}`,...(p=(s=t.parameters)==null?void 0:s.docs)==null?void 0:p.source}}};const Tr=["FullscreenModeEnabled","FullscreenModeDisabled","InitialFullscreenMode","FullscreenModeManagedState"];export{g as FullscreenModeDisabled,u as FullscreenModeEnabled,t as FullscreenModeManagedState,n as InitialFullscreenMode,Tr as __namedExportsOrder,Or as default};
//# sourceMappingURL=FullscreenMode.stories-FmZlFWL0.js.map

{"version":3,"file":"trim-39gE4VMH.js","sources":["../../../node_modules/ramda/es/trim.js"],"sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;"],"names":["ws","zeroWidth","hasProtoTrim","trim","_curry1","str","beginRx","endRx"],"mappings":"4CACA,IAAIA,EAAK;AAAA,2CACLC,EAAY,IACZC,EAAe,OAAO,OAAO,UAAU,MAAS,WAiBhDC,EAAO,CAACD,GAEZF,EAAG,KAAI,GAAM,CAEbC,EAAU,KAAM,EAEhBG,EAAQ,SAAcC,EAAK,CACzB,IAAIC,EAAU,IAAI,OAAO,KAAON,EAAK,KAAOA,EAAK,IAAI,EACjDO,EAAQ,IAAI,OAAO,IAAMP,EAAK,KAAOA,EAAK,KAAK,EACnD,OAAOK,EAAI,QAAQC,EAAS,EAAE,EAAE,QAAQC,EAAO,EAAE,CACnD,CAAC,EAEDH,EAAQ,SAAcC,EAAK,CACzB,OAAOA,EAAI,MACb,CAAC","x_google_ignoreList":[0]}
import{j as e}from"./jsx-runtime-CfatFE5O.js";import{r as c}from"./index-ClcD9ViR.js";import{D as m}from"./Datatable-CbbsOUJe.js";import{T as r}from"./Template-BasqZflr.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLogger-CA2WAjqk.js";import"./index-D7OXBHVI.js";import"./constants-C4Oh6sKJ.js";import"./space.enums-FzolKu9U.js";import"./_isObject-BZZHHNGj.js";import"./styled-components.browser.esm-6IU7b-y2.js";import"./DSProvider-Cqa5do1Y.js";import"./index-_KdZNTQd.js";import"./theme-B4UkYPRv.js";import"./colors-BJBAFLAc.js";import"./PaginationToolbar-xmN6WiMq.js";import"./menuElements-BYhuLLKf.js";import"./index-C8h7t8oK.js";import"./Icon-Dys2AeEE.js";import"./index-CajKmcpa.js";import"./index-DbwGX_n3.js";import"./index-DxcpycWO.js";import"./index-7cJ2juxC.js";import"./index-N2e0qnpI.js";import"./Padbox-CBhO8TxM.js";import"./index-BtznGf-c.js";import"./prop-C6y-wj7q.js";import"./Inline.enums-nLI0iivB.js";import"./Cluster-wkODOmrt.js";import"./index-CpAvg4Hc.js";import"./IconButton-Cd40Tx_f.js";import"./components-BlntQQgH.js";import"./index-BsiwOcqW.js";import"./Spinner-DA8xU7I2.js";import"./useSafeTranslation-D0Mz5J_m.js";import"./en-US-DVFKJdgt.js";import"./Button-BfyVdgm0.js";import"./pluck-DtgIh6Gb.js";import"./useContainerQuery-uyIEPHxz.js";import"./Skeleton-xb3ufhUt.js";import"./useLocalStorageState-UxkHlwiN.js";import"./index-CXhmAfct.js";import"./index-Al6z2MCl.js";import"./Tooltip-eZWLkn5m.js";import"./FloatingContext-f-xOTKfR.js";import"./index-8Dw_EHst.js";import"./CloseButton-CJqflljN.js";import"./index-BgMjzImo.js";import"./isFunction-DJDWul57.js";import"./minus-C2f59QhV.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-C-iNasD-.js";import"./modifiers.esm-ByjRBgE8.js";import"./index-xJp9Kd2E.js";import"./index-K53_VLVp.js";import"./Pill-D8fkm8BA.js";import"./PillRemoveButton-D_m0G_lu.js";const br={title:"components/DatatableV2/FullscreenMode",component:m,parameters:{screenshot:{skip:!0},docs:{story:{inline:!1,height:600}}}},d=r.bind({});d.args=r.args;const u=r.bind({});u.args={...r.args,enableFullScreenMode:!1};const p=r.bind({});p.args={...r.args,initialState:{isFullscreenMode:!0}};p.parameters={screenshot:{skip:!1}};const t=l=>{const[o,a]=c.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx(m,{state:{isFullscreenMode:o},manualSorting:!0,onFullscreenModeChange:a,...l}),e.jsxs("div",{children:[e.jsx("strong",{children:"Debug:"}),e.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=r.args;var s,i,n;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [isFullscreenMode, setIsFullscreenMode] = useState(false);
  return <>
      <Datatable state={{
      isFullscreenMode
    }} manualSorting onFullscreenModeChange={setIsFullscreenMode} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(isFullscreenMode, null, 2)}</pre>
      </div>
    </>;
}`,...(n=(i=t.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const fr=["FullscreenModeEnabled","FullscreenModeDisabled","InitialFullscreenMode","FullscreenModeManagedState"];export{u as FullscreenModeDisabled,d as FullscreenModeEnabled,t as FullscreenModeManagedState,p as InitialFullscreenMode,fr as __namedExportsOrder,br as default};
//# sourceMappingURL=FullscreenMode.stories-YVD483QP.js.map

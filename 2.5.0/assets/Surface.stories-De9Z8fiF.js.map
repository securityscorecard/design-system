{"version":3,"file":"Surface.stories-De9Z8fiF.js","sources":["../../../src/components/layout/Surface/Surface.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport Surface from './Surface';\nimport { Padbox, Stack } from '../index';\nimport { H5 } from '../../Heading';\nimport { Text } from '../../Text';\n\nconst meta = {\n  title: 'layout/Surface',\n  component: Surface,\n  args: {\n    mode: 'light',\n  },\n} satisfies Meta<typeof Surface>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nconst Child = () => (\n  <Stack gap=\"sm\">\n    <H5>Hello user!</H5>\n    <Text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n      pharetra magna lectus, a congue ex blandit vel. Donec id mi commodo eros\n      porta tempus. Vivamus et elit ut leo tincidunt vehicula non a dolor.\n      Suspendisse placerat turpis nisl, quis gravida sem semper et.\n    </Text>\n  </Stack>\n);\n\nexport const Playground: Story = {\n  args: {\n    mode: 'light',\n    background: 'default',\n    radius: 'sm',\n    elevation: 0,\n    hasBorder: false,\n    children: (\n      <Padbox paddingSize=\"md\">\n        <Child />\n      </Padbox>\n    ),\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const Background: Story = {\n  render: (args) => {\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} background=\"white\" />\n        <Surface {...args} background=\"dynamic\" />\n        <Surface {...args} background=\"transparent\" />\n      </Stack>\n    );\n  },\n  args: Playground.args,\n  parameters: {\n    backgrounds: { default: 'grey' },\n  },\n};\n\nexport const BorderRadius: Story = {\n  render: (args) => {\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} radius=\"none\" />\n        <Surface {...args} radius=\"sm\" />\n        <Surface {...args} radius=\"md\" />\n        <Surface {...args} radius=\"lg\" />\n      </Stack>\n    );\n  },\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    hasBorder: true,\n  },\n};\n\nexport const Elevation: Story = {\n  render: (args) => {\n    const elevation = args.elevation ?? 1;\n    return (\n      <Stack gap=\"lgPlus\">\n        <Surface {...args} elevation={elevation} />\n        <Surface {...args} elevation={elevation + 1} />\n        <Surface {...args} elevation={elevation + 2} />\n      </Stack>\n    );\n  },\n  args: {\n    ...Playground.args,\n    background: 'white',\n    hasBorder: true,\n    elevation: 1,\n  },\n};\n\nexport const Bordered: Story = {\n  args: {\n    ...Playground.args,\n    background: 'white',\n    hasBorder: true,\n  },\n};\n\nexport const DynamicBackgroundOnLight: Story = {\n  render: (args) => (\n    <Surface {...args}>\n      <Padbox paddingSize=\"md\">\n        <Child />\n        <Surface {...args}>\n          <Padbox paddingSize=\"md\">\n            <Child />\n            <Surface {...args}>\n              <Padbox paddingSize=\"md\">\n                <Child />\n              </Padbox>\n            </Surface>\n          </Padbox>\n        </Surface>\n      </Padbox>\n    </Surface>\n  ),\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    mode: 'light',\n    hasBorder: true,\n  },\n};\n\nexport const DynamicBackgroundOnDark: Story = {\n  render: (args) => (\n    <Surface {...args}>\n      <Padbox paddingSize=\"md\">\n        <Child />\n        <Surface {...args}>\n          <Padbox paddingSize=\"md\">\n            <Child />\n            <Surface {...args}>\n              <Padbox paddingSize=\"md\">\n                <Child />\n              </Padbox>\n            </Surface>\n          </Padbox>\n        </Surface>\n      </Padbox>\n    </Surface>\n  ),\n  args: {\n    ...Playground.args,\n    background: 'dynamic',\n    mode: 'dark',\n    hasBorder: true,\n  },\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["component","Surface","args","mode","Meta","Child","jsxs","Stack","jsx","radius","elevation","Playground","parameters","screenshot","skip","hasBorder","children","Padbox","Background","backgrounds","BorderRadius","Story","default","background","Elevation","render","Bordered","DynamicBackgroundOnDark","themes","themeOverride"],"mappings":"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"}
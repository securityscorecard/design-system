{"version":3,"file":"index-Nbgc27zk.js","sources":["../../../src/components/layout/Container/Container.tsx","../../../src/components/layout/Container/index.ts","../../../src/components/layout/Row/Row.tsx","../../../src/components/layout/Row/index.ts","../../../src/components/layout/Col/Col.tsx","../../../src/components/layout/Col/index.ts","../../../src/components/layout/Cluster/index.ts","../../../src/components/layout/Grid/index.ts","../../../src/components/layout/Center/Center.tsx","../../../src/components/layout/Center/index.ts","../../../src/components/layout/index.ts"],"sourcesContent":["import styled from 'styled-components';\n\nimport { pxToRem } from '../../../utils';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst Container = styled.div.attrs({ className: CLX_LAYOUT })`\n  margin: 0 auto;\n  width: ${({ theme }) => pxToRem(theme.layout.containerWidth)};\n`;\n\nexport default Container;\n","export { default as Container } from './Container';\n","import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst StyledRow = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  min-width: 0;\n  flex-wrap: wrap;\n  margin-inline: calc(var(--sscds-space-grid-gutter) / -2);\n  display: flex;\n`;\n\nconst Row = ({ children }: { children: ReactNode }) => (\n  <StyledRow className={CLX_LAYOUT}>{children}</StyledRow>\n);\n\nexport default Row;\n","export { default as Row } from './Row';\n","import styled from 'styled-components';\n\nimport { ColProps } from './Col.types';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nconst StyledCol = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  min-width: 0;\n  margin-inline-start: var(--sscds-col-margin-start);\n  padding-inline: calc(var(--sscds-space-grid-gutter) / 2);\n  flex: 1 1 auto;\n  max-width: var(--sscds-col-width);\n`;\n\nconst Col = ({ children, cols = 'auto', offset = 0 }: ColProps) => (\n  <StyledCol\n    className={CLX_LAYOUT}\n    style={{\n      '--sscds-col-margin-start': `calc(100% / 12 * ${offset})`,\n      '--sscds-col-width':\n        cols === 'auto' ? 'auto' : `calc(${cols} / 12 * 100%)`,\n    }}\n  >\n    {children}\n  </StyledCol>\n);\n\nexport default Col;\n","export { default as Col } from './Col';\nexport * from './Col.types';\n","export { default as Cluster } from './Cluster';\n","export { default as Grid } from './Grid';\n","import styled from 'styled-components';\nimport { includes } from 'ramda';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { getSpace, pxToRem } from '../../../utils';\nimport { SpaceSize } from '../../../theme/space.types';\nimport { SpaceSizes } from '../../../theme/space.enums';\nimport { CLX_LAYOUT } from '../../../theme/constants';\n\nexport interface CenterProps {\n  /**\n   * Maximal content width\n   */\n  maxWidth?: number;\n  /**\n   * Gutters arround content. Gutters are not counted in maximal content width.\n   */\n  gutters?: SpaceSize;\n  /**\n   * Centers all children inside component\n   */\n  areChildrenCentered?: boolean;\n  /**\n   * Centers text in component\n   */\n  isTextCentered?: boolean;\n  className?: string;\n}\n\nconst Center = styled.div\n  .withConfig<CenterProps>({\n    shouldForwardProp: (prop) =>\n      !includes(prop, [\n        'maxWidth',\n        'gutters',\n        'areChildrenCentered',\n        'isTextCentered',\n      ]),\n  })\n  .attrs((props) => ({\n    ...props,\n    className: cls(CLX_LAYOUT, props?.className),\n  }))<CenterProps>`\n  box-sizing: content-box;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${({ maxWidth, theme }) =>\n    pxToRem(isNotUndefined(maxWidth) ? maxWidth : theme.layout.containerWidth)};\n  ${({ gutters, theme }) => {\n    const size = getSpace(gutters, { theme });\n\n    return `\n      padding-left: ${size};\n      padding-right: ${size};\n    `;\n  }};\n\n  ${({ areChildrenCentered }) =>\n    areChildrenCentered &&\n    `\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n  `};\n\n  ${({ isTextCentered }) => isTextCentered && `text-align: center;`};\n`;\n\nCenter.defaultProps = {\n  gutters: SpaceSizes.none,\n  areChildrenCentered: false,\n  isTextCentered: false,\n};\n\nexport default Center;\n","export { default as Center } from './Center';\n","// Layout grid components\nexport * from './Container';\nexport * from './Row';\nexport * from './Col';\n\n// Layout primitives\nexport * from './Padbox';\nexport * from './Stack';\nexport * from './Inline';\nexport * from './Cluster';\nexport * from './Grid';\nexport * from './Center';\nexport * from './Surface';\n"],"names":["Container","cov_2jhwgg4153","s","styled","div","attrs","className","CLX_LAYOUT","withConfig","displayName","componentId","theme","f","pxToRem","layout","containerWidth","cov_1mw5eysza5","actualCoverage","StyledRow","cov_1xvj58x38w","cov_24jju7o8th","StyledCol","cov_ppdqoz5y7","Col","children","cols","b","offset","jsx","style","cov_9ot3h7xxm","cov_t5lx9gxok","cov_8dn0lhdcz","cov_myf1mn332","path","hash","global","gcv","coverageData","coverage","Center","shouldForwardProp","prop","includes","props","none","cls","cov_9blvo65xi","cov_1dcuh009i"],"mappings":"omDAK2DA,MAAAA,GAAAC,IAAAC,EAAA,CAAA,IAAAC,EAAAC,IAAAC,MAAA,CAAAC,UAAAC,CAAA,CAAA,EAAAC,WAAA,CAAAC,YAAAC,YAAAA,YAAEC,aAAAA,CAAAA,EAAAA,CAAAA,uBAAAA,GAAAA,EAAAA,CAAAA,CAAAA,MAAAA,CAAA,KAAAV,EAAAW,EAAAA,EAAAX,CAAAA,IAAAA,EAAAC,EAAAA,EAAAW,CAAAA,IAAAA,EAAAF,EAAAG,OAAAC,cAAA,EAAA,GAEzCd,EAAA,EAAAC,6qCCPpB,OAAAc,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,msCCK4B,MAAAE,GAAAC,EAAA,EAAAjB,EAAAC,CAAAA,IAAAA,EAAAC,IAAAI,WAAAC,CAAAA,YAAAC,iBAAAA,YAAAS,cAAAA,CAAAA,EAAAA,CAAAA,iIAAAA,CAAAA,GAAAA,EAAAjB,EAAAA,u3BCL5B,OAAAkB,EAAA,UAAA,CAAA,OAAAH,CAAA,EAAAA,CAAA,CAAAG,EAAA,mvDCK4B,MAAAC,GAAAC,EAAA,EAAApB,OAAAC,EAAAC,IAAAI,YAAAC,YAAA,iBAAAC,YAAA,cAAA,CAAA,EAAA,CAAA,sMAAA,CAAA,GAAAY,IAAApB,EAuB5B,CAAA,IAAA,MAAAqB,EAAAA,CAAA,CAAAC,SAAAA,EAAAC,KAAAA,GAAAH,EAAAI,EAAAA,kBAAAC,OAAAA,GAAAL,EAAAI,EAAAA,YAAA,KAAAJ,EAAA,EAAAV,EAAAU,CAAAA,IAAAA,IAAApB,EAAA,CAAA,IAAA0B,EAAAA,IAAAP,GAAAf,UAAAC,EAAAsB,MAAA,oxCC5BA,OAAAC,EAAA,UAAA,CAAA,OAAAb,CAAA,EAAAA,CAAA,CAAAa,EAAA,y6CCAA,OAAAC,EAAA,UAAA,CAAA,OAAAd,CAAA,EAAAA,CAAA,CAAAc,EAAA,6jLCAA,OAAAC,EAAA,UAAA,CAAA,OAAAf,CAAA,EAAAA,CAAA,CAAAe,EAAA,EC2EA,SAAAC,GAAA,CAAA,IAAAC,EAAA,wFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,wFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,GAAA,C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"}
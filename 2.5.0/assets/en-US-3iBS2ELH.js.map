{"version":3,"file":"en-US-3iBS2ELH.js","sources":["../../../node_modules/react-i18next/dist/es/unescape.js","../../../node_modules/react-i18next/dist/es/defaults.js","../../../node_modules/react-i18next/dist/es/i18nInstance.js","../../../node_modules/react-i18next/dist/es/context.js","../../../src/locales/en-US.ts"],"sourcesContent":["const matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nconst htmlEntities = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n  '&nbsp;': ' ',\n  '&#160;': ' ',\n  '&copy;': '©',\n  '&#169;': '©',\n  '&reg;': '®',\n  '&#174;': '®',\n  '&hellip;': '…',\n  '&#8230;': '…',\n  '&#x2F;': '/',\n  '&#47;': '/'\n};\nconst unescapeHtmlEntity = m => htmlEntities[m];\nexport const unescape = text => text.replace(matchHtmlEntity, unescapeHtmlEntity);","import { unescape } from './unescape.js';\nlet defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true,\n  unescape\n};\nexport const setDefaults = (options = {}) => {\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n};\nexport const getDefaults = () => defaultOptions;","let i18nInstance;\nexport const setI18n = instance => {\n  i18nInstance = instance;\n};\nexport const getI18n = () => i18nInstance;","import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      this.usedNamespaces[ns] ??= true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};","/* eslint-disable filenames/match-exported */\nconst locale = {\n  loading: 'Loading',\n  'filters.apply': 'Apply',\n  'filters.close': 'Close',\n  'filters.cancel': 'Cancel',\n  'filters.removeRule': 'Remove',\n  'filters.clearRules': 'Clear all criteria',\n  'filters.unappliedFilters': 'You have unapplied filters',\n  'filters.addRule': 'Add criteria',\n  'filters.whereOperator': 'Where',\n  'filters.andOperator': 'And',\n  'filters.orOperator': 'Or',\n  'filters.count.placeholder': 'Count',\n  'filters.count.error': 'Use only integers',\n  'filters.input.placeholder': 'String',\n  'filters.integer.placeholder': 'Integer',\n  'filters.integer.error': 'Use only integers',\n  'filters.number.placeholder': 'Number',\n  'filters.number.error': 'Use only numbers',\n  'filters.tagsInput.placeholder': 'Enter value',\n} as const;\nexport default locale;\n"],"names":["matchHtmlEntity","htmlEntities","unescapeHtmlEntity","m","unescape","text","defaultOptions","setDefaults","options","getDefaults","i18nInstance","setI18n","instance","getI18n","I18nContext","createContext","ReportNamespaces","namespaces","ns","_a","cov_23b75gfsn2","path","hash","global","gcv","coverageData","coverage","actualCoverage","locale","s","loading"],"mappings":"wCAAA,MAAMA,EAAkB,oGAClBC,EAAe,CACnB,QAAS,IACT,QAAS,IACT,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,QAAS,IACT,SAAU,IACV,QAAS,IACT,SAAU,IACV,QAAS,IACT,SAAU,IACV,SAAU,IACV,SAAU,IACV,SAAU,IACV,QAAS,IACT,SAAU,IACV,WAAY,IACZ,UAAW,IACX,SAAU,IACV,QAAS,GACX,EACMC,EAAqBC,GAAKF,EAAaE,CAAC,EACjCC,EAAWC,GAAQA,EAAK,QAAQL,EAAiBE,CAAkB,ECvBhF,IAAII,EAAiB,CACnB,SAAU,kBACV,cAAe,GACf,oBAAqB,GACrB,2BAA4B,GAC5B,mBAAoB,GACpB,2BAA4B,CAAC,KAAM,SAAU,IAAK,GAAG,EACrD,YAAa,GACb,SAAAF,CACF,EACY,MAACG,EAAc,CAACC,EAAU,KAAO,CAC3CF,EAAiB,CACf,GAAGA,EACH,GAAGE,CACP,CACA,EACaC,EAAc,IAAMH,ECjBjC,IAAII,EACQ,MAACC,EAAUC,GAAY,CACjCF,EAAeE,CACjB,EACaC,EAAU,IAAMH,ECChBI,EAAcC,EAAAA,cAAgB,EACpC,MAAMC,CAAiB,CAC5B,aAAc,CACZ,KAAK,eAAiB,EACvB,CACD,kBAAkBC,EAAY,CAC5BA,EAAW,QAAQC,GAAM,QACvBC,EAAA,KAAK,gBAALD,KAAAC,EAAAD,GAA4B,GAClC,CAAK,CACF,CACD,mBAAoB,CAClB,OAAO,OAAO,KAAK,KAAK,cAAc,CACvC,CACH,CCDE,SAAAE,GAAA,CAAA,IAAAC,EAAA,qEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,qEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,UAAA,GAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,eAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,oEAAA,EAAA,MAAA,CAAA,SAAA,SAAA,EAAA,SAAA,sXAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,KAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAAD,OAAAA,EAAAA,UAAAO,CAAAA,OAAAA,CAAAA,EAAAA,CAAAP,CAAAA,EAhBa,EACJ,MAAAQ,GAAAR,EAAA,EAAAS,EAAA,CAAA,IAAA,CACTC,QAAiB,UACjB,gBAAiB,QACjB,gBAAkB,QAClB,iBAAsB,SACtB,qBAAsB,SACtB,qBAA4B,qBAC5B,2BAAmB,6BACnB,kBAAyB,eACzB,wBAAuB,QACvB,sBAAsB,MACtB,qBAA6B,KAC7B,4BAAuB,QACvB,sBAA6B,oBAC7B,4BAA+B,SAC/B,8BAAyB,UACzB,wBAA8B,oBAC9B,6BAAwB,SACxB,uBAAiC,mBACnC,gCAAA,aACA","x_google_ignoreList":[0,1,2,3]}
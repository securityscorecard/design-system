{"version":3,"file":"Button.stories-D7ruGQtX.js","sources":["../../../src/components/Button/Button.stories.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\n\nimport { SSCIconNames } from '../../theme/icons/icons.enums';\nimport { generateControl } from '../../utils/tests/storybook';\nimport { Inline, Stack } from '../layout';\nimport Button from './Button';\nimport { ButtonProps } from './Button.types';\nimport { ButtonColors, ButtonVariants } from './Button.enums';\nimport { SpaceSizes } from '../../theme';\n\nexport default {\n  title: 'components/Button',\n  component: Button,\n  argTypes: {\n    to: { control: { disable: true } },\n    href: { control: { disable: true } },\n    as: { control: { disable: true } },\n    margin: { control: { disable: true } },\n    children: {\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    variant: {\n      ...generateControl('select', ButtonVariants),\n    },\n    color: {\n      ...generateControl('select', ButtonColors),\n    },\n    iconName: {\n      ...generateControl('select', SSCIconNames),\n      description: '(Deprecated) Use iconStart property instead',\n    },\n    iconType: {\n      ...generateControl('select', { ssc: 'ssc', far: 'far', fab: 'fab' }),\n      description: '(Deprecated) Use iconStart property instead',\n    },\n    iconStart: {\n      control: {\n        type: 'object',\n      },\n      table: {\n        type: {\n          summary: 'BaseIcon',\n          detail: `{\n  name: SSCIcons | (string & {});\n  type?: 'ssc' | 'far' | 'fab';\n}`,\n        },\n      },\n    },\n    iconEnd: {\n      control: {\n        type: 'object',\n      },\n      table: {\n        type: {\n          summary: 'BaseIcon',\n          detail: `{\n  name: SSCIcons | (string & {});\n  type?: 'ssc' | 'far' | 'fab';\n}`,\n        },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `Parameters \"iconName\" and \"iconType\" are deprecated. These are kept for backward compatibility. You should define the icon using\n        \\`\\`\\`iconStart={{iconName, iconType}}\\`\\`\\` to define the icon before text or with \\`\\`\\`iconEnd={{iconName, iconType}}\\`\\`\\` to place icon after text`,\n      },\n    },\n  },\n} as Meta;\n\nexport const Playground: StoryFn<ButtonProps> = (args) => <Button {...args} />;\nPlayground.args = {\n  children: 'Playground Button',\n  variant: ButtonVariants.solid,\n  color: ButtonColors.primary,\n};\nPlayground.parameters = {\n  screenshot: { skip: true },\n};\n\nexport const SolidButtons: StoryFn = () => (\n  <Stack gap={SpaceSizes.lg}>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"primary\" variant=\"solid\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"primary\" variant=\"solid\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"primary\" variant=\"solid\">\n        Active Button\n      </Button>\n      <Button color=\"primary\" variant=\"solid\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"danger\" variant=\"solid\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"danger\" variant=\"solid\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"danger\" variant=\"solid\">\n        Active Button\n      </Button>\n      <Button color=\"danger\" variant=\"solid\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n  </Stack>\n);\n\nexport const OutlineButtons: StoryFn = () => (\n  <Inline gap={SpaceSizes.md}>\n    <Button color=\"primary\" variant=\"outline\">\n      Button\n    </Button>\n    <Button className=\"hover\" color=\"primary\" variant=\"outline\">\n      Hovered Button\n    </Button>\n    <Button className=\"active\" color=\"primary\" variant=\"outline\">\n      Active Button\n    </Button>\n    <Button color=\"primary\" variant=\"outline\" isDisabled>\n      Disabled Button\n    </Button>\n  </Inline>\n);\n\nexport const TextButtons: StoryFn = () => (\n  <Stack gap={SpaceSizes.lg}>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"primary\" variant=\"text\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"primary\" variant=\"text\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"primary\" variant=\"text\">\n        Active Button\n      </Button>\n      <Button color=\"primary\" variant=\"text\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"secondary\" variant=\"text\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"secondary\" variant=\"text\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"secondary\" variant=\"text\">\n        Active Button\n      </Button>\n      <Button color=\"secondary\" variant=\"text\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"danger\" variant=\"text\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"danger\" variant=\"text\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"danger\" variant=\"text\">\n        Active Button\n      </Button>\n      <Button color=\"danger\" variant=\"text\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n  </Stack>\n);\n\nexport const GhostButtons: StoryFn = () => (\n  <Stack gap={SpaceSizes.lg}>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"primary\" variant=\"ghost\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"primary\" variant=\"ghost\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"primary\" variant=\"ghost\">\n        Active Button\n      </Button>\n      <Button color=\"primary\" variant=\"ghost\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"secondary\" variant=\"ghost\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"secondary\" variant=\"ghost\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"secondary\" variant=\"ghost\">\n        Active Button\n      </Button>\n      <Button color=\"secondary\" variant=\"ghost\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n    <Inline gap={SpaceSizes.md}>\n      <Button color=\"danger\" variant=\"ghost\">\n        Button\n      </Button>\n      <Button className=\"hover\" color=\"danger\" variant=\"ghost\">\n        Hovered Button\n      </Button>\n      <Button className=\"active\" color=\"danger\" variant=\"ghost\">\n        Active Button\n      </Button>\n      <Button color=\"danger\" variant=\"ghost\" isDisabled>\n        Disabled Button\n      </Button>\n    </Inline>\n  </Stack>\n);\n\nexport const LoadingButtons: StoryFn = () => (\n  <Inline gap={SpaceSizes.md}>\n    <Button color=\"primary\" variant=\"solid\" isLoading>\n      Button\n    </Button>\n\n    <Button color=\"primary\" variant=\"outline\" isLoading>\n      Button\n    </Button>\n\n    <Button color=\"primary\" variant=\"text\" isLoading>\n      Button\n    </Button>\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"solid\"\n      isLoading\n    />\n\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"outline\"\n      isLoading\n    />\n\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"text\"\n      isLoading\n    />\n  </Inline>\n);\n\nexport const ButtonsWithIconOverview: StoryFn = () => (\n  <Inline gap={SpaceSizes.md}>\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"solid\"\n    >\n      Button\n    </Button>\n    <Button\n      aria-label=\"Wrench solid icon button\"\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"solid\"\n    />\n    <Button\n      color=\"primary\"\n      iconEnd={{ name: SSCIconNames.wrench, type: 'ssc' }}\n      variant=\"solid\"\n    >\n      Button\n    </Button>\n    <Button\n      color=\"primary\"\n      iconEnd={{ name: SSCIconNames.cog, type: 'ssc' }}\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"solid\"\n    >\n      Button\n    </Button>\n\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"outline\"\n    >\n      Button\n    </Button>\n    <Button\n      aria-label=\"Wrench outline icon button\"\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"outline\"\n    />\n    <Button\n      color=\"primary\"\n      iconEnd={{ name: SSCIconNames.wrench, type: 'ssc' }}\n      variant=\"outline\"\n    >\n      Button\n    </Button>\n\n    <Button\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"text\"\n    >\n      Button\n    </Button>\n    <Button\n      aria-label=\"Wrench text icon button\"\n      color=\"primary\"\n      iconStart={{ name: SSCIconNames.wrench }}\n      variant=\"text\"\n    />\n    <Button\n      aria-label=\"Wrench text icon button\"\n      color=\"primary\"\n      iconEnd={{ name: SSCIconNames.wrench, type: 'ssc' }}\n      variant=\"text\"\n    >\n      Button\n    </Button>\n    <Button\n      aria-label=\"Wrench text icon button\"\n      color=\"primary\"\n      iconName={SSCIconNames.wrench}\n      iconType=\"ssc\"\n      variant=\"text\"\n    />\n  </Inline>\n);\n\nexport const ExpandedButtons: StoryFn = () => (\n  <Stack gap={SpaceSizes.lg}>\n    <Button variant=\"solid\" isExpanded>\n      Full width button\n    </Button>\n    <Button variant=\"outline\" isExpanded>\n      Full width button\n    </Button>\n    <Button variant=\"text\" isExpanded>\n      Full width button\n    </Button>\n  </Stack>\n);\n"],"names":["component","Button_stories","argTypes","to","Button","control","disable","href","as","type","table","summary","generateControl","ButtonVariants","margin","ButtonColors","iconName","SSCIconNames","children","ssc","far","fab","variant","detail","description","iconType","docs","iconEnd","Playground","args","jsx","solid","primary","parameters","screenshot","skip","SolidButtons","jsxs","Stack","SpaceSizes","lg","md","Inline","OutlineButtons","TextButtons","GhostButtons","LoadingButtons","name","wrench","cog"],"mappings":"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"}
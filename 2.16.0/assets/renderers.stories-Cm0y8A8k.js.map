{"version":3,"file":"renderers.stories-Cm0y8A8k.js","sources":["../../../src/components/_internal/BaseTable/renderers/renderers.stories.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Meta, StoryFn } from '@storybook/react';\nimport { Row } from 'react-table';\nimport { MemoryRouter } from 'react-router-dom';\nimport { equals, F as stubFalse } from 'ramda';\nimport { action } from '@storybook/addon-actions';\n\nimport { composeQuery } from '../mocks/columns';\nimport { BaseTableContainer, StyledBaseTable } from '../BaseTable.styles';\nimport CellRenderer from './CellRenderer';\nimport { CellRendererProps } from './renderers.types';\nimport { CellTypes } from './renderers.enums';\nimport { abbreviateNumber } from '../../../../utils';\n\nexport default {\n  title: 'tests/Datatable/Table/renderers',\n  component: CellRenderer,\n  decorators: [\n    (storyFn) => (\n      <MemoryRouter>\n        <div style={{ width: '400px', margin: '0 auto' }}>\n          <BaseTableContainer tabIndex={0}>\n            <StyledBaseTable>\n              <tbody>\n                <tr>\n                  <td className=\"ds-table-cell\">{storyFn()}</td>\n                </tr>\n              </tbody>\n            </StyledBaseTable>\n          </BaseTableContainer>\n        </div>\n      </MemoryRouter>\n    ),\n  ],\n  parameters: {\n    viewMode: 'story',\n    docs: { disable: true },\n    previewTabs: { 'storybook/docs/panel': { hidden: true } },\n  },\n} as Meta;\n\ntype CellRendererData = {\n  column1: string;\n  column2: string[];\n};\n\nconst LinkComponent = ({\n  to,\n  children,\n  className,\n}: {\n  to: string;\n  className: string;\n  children: ReactNode;\n}) => (\n  <a className={className} href={to}>\n    {children}\n  </a>\n);\n\ntype Story = StoryFn<CellRendererProps<CellRendererData>>;\n\n/**\n *  DEFAULT RENDERER\n */\nexport const Default: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDefault.args = {\n  value: 'value',\n  column: {\n    cellType: CellTypes.text,\n    nullCondition: stubFalse,\n  },\n  row: {\n    original: { column1: 'value', column2: ['value1', 'value2'] },\n  } as Row<CellRendererData>,\n};\n\nexport const WithNullValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nWithNullValue.args = {\n  ...Default.args,\n  value: 'unknown',\n  column: {\n    ...Default.args.column,\n    nullCondition: equals('unknown'),\n  },\n};\n\nexport const WithCustomNullValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nWithCustomNullValue.args = {\n  ...WithNullValue.args,\n  column: {\n    ...WithNullValue.args.column,\n    nullConditionValue: 'NaN',\n  },\n};\n\nexport const NullValueWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nNullValueWithTooltip.args = {\n  ...WithCustomNullValue.args,\n  column: {\n    ...WithCustomNullValue.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\n\n/**\n *  TEXT RENDERER\n */\nexport const TextWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nTextWithTooltip.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const TextWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nTextWithCustomFormatter.args = {\n  ...Default.args,\n  value: 123456789,\n  column: {\n    ...Default.args.column,\n    cellFormatter: (val) => abbreviateNumber(val),\n  },\n};\n\n/**\n *  MULTIVALUE RENDERER\n */\nexport const MultiValue: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValue.args = {\n  ...Default.args,\n  value: ['value1', 'value2', 'value3', 'value4', 'value5'],\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.multiValue,\n  },\n};\nexport const MultiValueWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithOnClick.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const MultiValueWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithAbsoluteLink.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const MultiValueWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithRelativeLink.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const MultiValueWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithTooltip.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Pill value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const MultiValueWithDisabledDisplayLimit: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithDisabledDisplayLimit.args = {\n  ...MultiValue.args,\n  column: {\n    ...MultiValue.args.column,\n    multiValueDisplayLimit: 0,\n  },\n};\nexport const MultiValueWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nMultiValueWithCustomFormatter.args = {\n  ...MultiValue.args,\n  value: [1235678, 987654, 654213],\n  column: {\n    ...MultiValue.args.column,\n    cellFormatter: (val) => abbreviateNumber(val),\n  },\n};\n\n/**\n *  LINK RENDERER\n */\nexport const LinkWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithOnClick.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.link,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const LinkWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithAbsoluteLink.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const LinkWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithRelativeLink.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const LinkWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithTooltip.args = {\n  ...LinkWithOnClick.args,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const LinkWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nLinkWithCustomFormatter.args = {\n  ...LinkWithOnClick.args,\n  value: 123456789,\n  column: {\n    ...LinkWithOnClick.args.column,\n    cellFormatter: (val) => abbreviateNumber(val),\n  },\n};\n\n/**\n *  DISCRETE LINK RENDERER\n */\nexport const DiscreteLinkWithOnClick: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithOnClick.args = {\n  ...Default.args,\n  column: {\n    ...Default.args.column,\n    cellType: CellTypes.discreteLink,\n    cellOnClick: action('onCellValueClick'),\n  },\n};\nexport const DiscreteLinkWithAbsoluteLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithAbsoluteLink.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellHrefComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n  },\n};\nexport const DiscreteLinkWithRelativeLink: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithRelativeLink.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellToComposer: (val, row) => `?value=${val}&${composeQuery(row)}`,\n    cellLinkComponent: LinkComponent,\n  },\n};\nexport const DiscreteLinkWithTooltip: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithTooltip.args = {\n  ...DiscreteLinkWithOnClick.args,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellTooltipPopupComposer: (val, row) => (\n      <div>\n        Value: {val}\n        <br />\n        Row data: <br />\n        <pre>{JSON.stringify(row, null, 2)}</pre>\n      </div>\n    ),\n  },\n};\nexport const DiscreteLinkWithCustomFormatter: Story = (args) => (\n  <CellRenderer<CellRendererData> {...args} />\n);\nDiscreteLinkWithCustomFormatter.args = {\n  ...DiscreteLinkWithOnClick.args,\n  value: 123456789,\n  column: {\n    ...DiscreteLinkWithOnClick.args.column,\n    cellFormatter: (val) => abbreviateNumber(val),\n  },\n};\n"],"names":["component","renderers_stories","decorators","CellRenderer","width","margin","MemoryRouter","jsx","BaseTableContainer","StyledBaseTable","storyFn","parameters","viewMode","disable","previewTabs","hidden","LinkComponent","to","children","className","Default","args","column","nullCondition","value","row","original","CellTypes","text","column1","stubFalse","column2","WithNullValue","equals","nullConditionValue","WithCustomNullValue","cellTooltipPopupComposer","NullValueWithTooltip","val","JSON","stringify","TextWithTooltip","Story","cellFormatter","abbreviateNumber","TextWithCustomFormatter","multiValue","MultiValue","MultiValueWithAbsoluteLink","cellHrefComposer","cellType","MultiValueWithOnClick","cellToComposer","cellLinkComponent","action","composeQuery","MultiValueWithDisabledDisplayLimit","multiValueDisplayLimit","MultiValueWithTooltip","LinkWithAbsoluteLink","LinkWithRelativeLink","LinkWithOnClick","link","DiscreteLinkWithOnClick","LinkWithTooltip","LinkWithCustomFormatter"],"mappings":"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"}
{"version":3,"file":"forms.stories-B9f8ttyM.js","sources":["../../../src/components/forms/forms.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport {\n  Checkbox,\n  Error,\n  Input,\n  Label,\n  Note,\n  Radio,\n  Select,\n  Switch,\n  TextArea,\n} from './index';\nimport { Inline, Stack } from '../layout';\nimport { HintTooltip } from '../HintTooltip';\n\nconst meta = {\n  title: 'components/forms/Example',\n  tags: ['!dev'],\n} satisfies Meta<typeof Label>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nconst options = [\n  { value: 'HR', label: 'Croatia' },\n  { value: 'CU', label: 'Cuba' },\n  { value: 'CW', label: 'Cura\\u00e7ao' },\n  { value: 'CY', label: 'Cyprus' },\n  { value: 'CZ', label: 'Czech Republic' },\n  { value: 'DK', label: 'Denmark' },\n];\n\nexport const Default: Story = {\n  render: () => (\n    <form>\n      <Stack gap=\"md\">\n        <Stack>\n          <Label>Your Name</Label>\n\n          <Input type=\"text\" isInvalid />\n\n          <Error>This field is required</Error>\n        </Stack>\n\n        <Stack>\n          <Label>Your Country</Label>\n\n          <Select options={options} />\n\n          <Note>Where you currently live</Note>\n        </Stack>\n\n        <Stack>\n          <Label>I am</Label>\n\n          <Stack gap=\"xs\">\n            <Radio label=\"Human\" name=\"species\" radioId=\"human\" value=\"human\" />\n\n            <Radio\n              label=\"Animal\"\n              name=\"species\"\n              radioId=\"animal\"\n              value=\"animal\"\n            />\n          </Stack>\n        </Stack>\n\n        <Stack>\n          <Label>My hobbies</Label>\n\n          <Stack gap=\"xs\">\n            <Checkbox\n              checkboxId=\"reading\"\n              label=\"Reading\"\n              name=\"hobbies\"\n              value=\"reading\"\n            />\n\n            <Checkbox\n              checkboxId=\"sleeping\"\n              label=\"Sleeping\"\n              name=\"hobbies\"\n              value=\"sleeping\"\n            />\n\n            <Checkbox\n              checkboxId=\"programming\"\n              label=\"Programming\"\n              name=\"hobbies\"\n              value=\"programming\"\n            />\n\n            <Checkbox\n              checkboxId=\"testing\"\n              label=\"Testing\"\n              name=\"hobbies\"\n              value=\"testing\"\n            />\n          </Stack>\n        </Stack>\n\n        <Stack justify=\"flex-start\">\n          <Label>Do you want to make your profile public?</Label>\n\n          <Switch switchId=\"public\" />\n        </Stack>\n\n        <Stack>\n          <Label>Your message to us</Label>\n\n          <TextArea maxLength={140} />\n        </Stack>\n      </Stack>\n    </form>\n  ),\n  parameters: {\n    screenshot: {\n      skip: true,\n    },\n  },\n};\n\nexport const StackedFormField: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithHint: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">\n        Input field label{' '}\n        <HintTooltip placement=\"top\">Hint tooltip content</HintTooltip>\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithNote: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" />\n      <Note>Short description for additional information</Note>\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithError: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" isInvalid />\n      <Error>Description of error</Error>\n    </div>\n  ),\n};\n\nexport const InlinedFormField: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithHint: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label{' '}\n        <HintTooltip placement=\"top\">Hint tooltip content</HintTooltip>\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithNote: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <div>\n        <Input id=\"input-id\" type=\"text\" />\n        <Note>Short description for additional information</Note>\n      </div>\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithError: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <div>\n        <Input id=\"input-id\" type=\"text\" isInvalid />\n        <Error>Description of error</Error>\n      </div>\n    </Inline>\n  ),\n};\n"],"names":["meta","value","label","options","Default","Story","render","jsx","jsxs","Stack","Label","Input","Error","Select","Note","Radio","Checkbox","StackedFormField","StackedFormFieldWithHint","StackedFormFieldWithNote","TextArea","StackedFormFieldWithError","parameters","screenshot","skip","InlinedFormFieldWithHint","InlinedFormFieldWithNote","InlinedFormFieldWithError"],"mappings":"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"}
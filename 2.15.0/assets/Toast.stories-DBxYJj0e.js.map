{"version":3,"file":"Toast.stories-DBxYJj0e.js","sources":["../../../src/components/Toast/Toast.stories.tsx"],"sourcesContent":["import { action } from '@storybook/addon-actions';\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { Inline, Stack } from '../layout';\nimport { SpaceSizes } from '../../theme';\nimport Toast from './Toast';\nimport { ToastVariants } from './Toast.enums';\nimport { generateControl } from '../../utils/tests/storybook';\nimport Button from '../ButtonV2/Button';\n\nconst longContent = (\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla posuere velit\n    magna, id scelerisque neque tristique sit amet. Nam mollis odio enim, sit\n    amet auctor arcu elementum ut. Ut eget iaculis tortor.\n  </p>\n);\n\n/**\n * ```js\n * import { Toast } from '@securityscorecard/design-system';\n * ```\n */\n\nconst meta = {\n  title: 'components/Toast',\n  component: Toast,\n  args: {\n    onClose: action('close-toast'),\n  },\n  argTypes: {\n    variant: {\n      ...generateControl('select', ToastVariants),\n      description: 'Color variant of the toast notification',\n      table: {\n        type: {\n          summary: \"'success' | 'info' | 'warn' | 'error' | 'loading'\",\n        },\n      },\n    },\n    onClose: {\n      description: 'Callback triggered on close button click',\n    },\n  },\n  parameters: {\n    docs: {\n      story: { inline: false, height: 250 },\n    },\n  },\n} satisfies Meta<typeof Toast>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Playground: Story = {\n  args: {\n    children: (\n      <Stack gap={SpaceSizes.sm} justify=\"flex-start\">\n        <p>This is a notification.</p>\n        <Button size=\"sm\" variant=\"subtle\">\n          Action\n        </Button>\n      </Stack>\n    ),\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const LongContent: Story = {\n  args: {\n    children: (\n      <Stack gap={SpaceSizes.sm} justify=\"flex-start\">\n        {longContent}\n        <Button size=\"sm\" variant=\"subtle\">\n          Action\n        </Button>\n      </Stack>\n    ),\n  },\n};\n\nexport const WithTwoActions: Story = {\n  args: {\n    children: (\n      <Stack gap={SpaceSizes.sm} justify=\"flex-start\">\n        {longContent}\n        <Inline gap={SpaceSizes.mdPlus}>\n          <Button size=\"sm\" variant=\"subtle\">\n            Action A\n          </Button>\n          <Button size=\"sm\" variant=\"subtle\">\n            Action B\n          </Button>\n        </Inline>\n      </Stack>\n    ),\n  },\n};\n\nexport const WithCustomWidth: Story = {\n  args: {\n    ...LongContent.args,\n    width: 470,\n  },\n};\n\nexport const VariantInfo: Story = {\n  args: {\n    children: (\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non massa\n        a lacus posuere.\n      </p>\n    ),\n    variant: 'info',\n  },\n};\n\nexport const VariantSuccess: Story = {\n  args: {\n    ...VariantInfo.args,\n    variant: 'success',\n  },\n};\n\nexport const VariantWarn: Story = {\n  args: {\n    ...VariantInfo.args,\n    variant: 'warn',\n  },\n};\n\nexport const VariantError: Story = {\n  args: {\n    ...VariantInfo.args,\n    variant: 'error',\n  },\n};\n\nexport const VariantLoading: Story = {\n  args: {\n    ...VariantInfo.args,\n    variant: 'loading',\n  },\n};\n\nexport const ColorsDark: Story = {\n  args: { ...Playground.args, isStandalone: false },\n  render: (args) => (\n    <Stack gap=\"md\">\n      <Toast {...args} variant=\"info\" />\n      <Toast {...args} variant=\"success\" />\n      <Toast {...args} variant=\"warn\" />\n      <Toast {...args} variant=\"error\" />\n      <Toast {...args} variant=\"loading\" />\n    </Stack>\n  ),\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["longContent","jsx","meta","action","title","argTypes","Toast","variant","onClose","description","table","type","summary","ToastVariants","parameters","docs","story","inline","height","component","Meta","args","children","SpaceSizes","sm","skip","LongContent","jsxs","Stack","WithTwoActions","Inline","mdPlus","Button","WithCustomWidth","width","VariantInfo","VariantWarn","VariantSuccess","VariantLoading","ColorsDark","isStandalone","themes","themeOverride"],"mappings":"unDAaA,MAAAA,EACAC,EAAA,IAAA,IAAA,CAAA,SAKA,+MAAA,CAAA,EASWC,GAAEC,CACXC,MAAC,mBACDC,UAAUC,EACRC,KAAAA,CACEC,QAAkBL,EAAA,aAAS,CAC3BM,EACAC,SAAO,CACLC,QAAM,CACJC,GAAAA,EAAS,SAAAC,CAAA,EACXJ,YAAA,0CACFC,MAAA,CACDC,KAAA,CACDH,QAAS,mDACPC,CACF,CACD,EACDK,QAAY,CACVC,YAAM,0CACJC,CAASC,EAAeC,WAAM,CAAMH,KAAA,CACtCC,MAAA,CAAAC,OAAA,GAAAC,OAAA,GAAA,EAAAT,YAAA,CAAAU,UAAA,uEAAA,CACF,CACUC,CAEZ,IASiC,CACjCC,KAAA,CACAC,mBACa,IAAAC,EAAAC,GAAA,QAAA,aAEV,SAAA,CAAAvB,EAAAA,IAAA,KAAA,SAAA,yBAAA,CAAA,QACDa,EAAY,CAAA,KAAA,KAAA,QAAA,SAAA,SACIW,SAAAA,CAAAA,EAAW,CAE5B,EAEDX,WAAaY,CACXL,WAAM,CAAAI,KAAA,EAAA,CACJH,CAEJ,EAEAI,EAAA,CACAL,KAAQ,CACRC,SAEEK,EAAAA,KAAAC,EAAA,CAAA,IAAAL,EAAAC,GAAA,QAAA,aACDxB,SAAAA,CAAAA,QAEY6B,EAAAA,CAAAA,KAAAA,KAAAA,QAAqB,SAAG,SAEjCP,SAAAA,CAAAA,EAEJ,CAEU,CACV,IAE4C,CAC5CD,KAAA,CACAC,SACAK,EAAAA,KAAAC,EAAA,CAAgB,IAAAL,EAAAC,GAAA,QAAA,aACHxB,SAAAA,CAAAA,EAEX2B,EAAA,KAAAG,EAAA,CAAA,IAAAP,EAAAQ,OACD,SAAA,CAAA9B,MAAA+B,EAAA,CAAA,KAAA,KAAA,QAAA,SAAA,SAGO,WAAA,QACDN,EAAW,CAAA,KAAK,KAAA,QAAA,SAAA,SAErB,WAAA,CAAA,EACD,CAAA,EAED,EAIA,EAGKO,EAAA,CACD1B,KAAAA,CACF,GAAAmB,EAAAL,KACDa,MAAA,GAED,CACEb,EAEWc,EAAA,CACXd,KAAA,CACDC,SAEMrB,EAAAA,IAAA,IAAA,CAAMmC,SAGT7B,2FAAAA,CAAAA,EAEHA,QAAA,MAED,CACEc,EAEWgB,EAAA,CACXhB,KAAA,CACD,GAAAc,EAAAd,KAEDd,QAAa+B,SACXjB,GAGAe,EAAA,CACDf,KAAA,CAED,GAAOc,EAAMI,KACXlB,QAAM,OAAsBmB,IAEX,CACbnB,MACA,GAACc,OACD5B,QAAO,OACP,CACN,EAGc+B,EAAA,CACVG,KAAAA,CACEC,GAAAA,EAAarB,KACfd,QAAA,SACF,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
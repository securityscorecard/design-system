{"version":3,"file":"DSThemeOverride-B9a0qK5v.js","sources":["../../../docs/theme/DSThemeOverride.mdx"],"sourcesContent":["import { Meta, Source, Story } from '@storybook/blocks';\n\nimport { DarkMode } from '../../src/components/Text/Text.stories';\n\n<Meta title=\"theme/DSThemeOverride\" />\n\n# DSThemeOverride\n\nThe `DSThemeOverride` component empowers users with the ability to locally control and personalize the\nvisual appearance of components within their applications. By utilizing the `overrides` property,\nthis component enables dynamic alterations to the default theme object. This means that users can\neffortlessly customize the styling of individual components without the need for extensive global\ntheme modifications. Whether it's tweaking colors, adjusting spacing, or fine-tuning typography, the\n`DSThemeOverride` component offers a seamless way to achieve a bespoke look and feel for specific\nelements, all while maintaining the broader design consistency of the application.\n\n## Overrides vs. extension\n\nThe `DSThemeOverride` component will strictly allowing local override of the theme. If you need to\nextend the default theme with new values you have to pass those to the `DSProvider` component and its\n`theme` property.\n\n## How to use\n\nThe `overrides` property accept either a function that returns the subset of the default theme or\nthe subset itself. The function accepts the default theme object as the first argument which allows\nyou to assign any value to the overriden object.\n\n```jsx\nconst DarkBox = ({ children }) => (\n  <DSThemeOverride\n    overrides={(theme) => ({\n      colors: {\n        text: {\n          primary: theme.colors.neutral[0],\n          secondary: theme.colors.neutral[500],\n          danger: '#fd4a4a',\n        },\n      },\n    })}\n  >\n    {children}\n  </DSThemeOverride>\n);\n```\n\n## Example\n\n<div style={{display: 'flex', justifyContent: 'center'}}>\n  {/* <Story id=\"components-typography-text--dark-mode\" /> is deprecated, please migrate it to <Story of={referenceToStory} /> see: https://storybook.js.org/migration-guides/7.0 */}\n\n  <Story of={DarkMode} />\n</div>\n\n<Source of={DarkMode} type=\"dynamic\" />\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Story","DarkMode","Source","MDXContent","MDXLayout"],"mappings":"8iDAKA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,CAClB,KAAM,OACN,GAAI,KACJ,GAAI,KACJ,EAAG,IACH,IAAK,MACL,GAAGC,EAAoB,EACvB,GAAGF,EAAM,UACb,EACE,OAAOG,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,uBACR,CAAA,EAAG;AAAA,EAAMD,MAAKJ,EAAY,GAAI,CAC7B,GAAI,kBACJ,SAAU,iBACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,OAAQI,MAAKJ,EAAY,KAAM,CACxC,SAAU,iBACX,CAAA,EAAG;AAAA,8EAAmKI,MAAKJ,EAAY,KAAM,CAC5L,SAAU,WACX,CAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAA4TI,MAAKJ,EAAY,KAAM,CACrV,SAAU,iBACX,CAAA,EAAG;AAAA,mFAAsK,CAC3K,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,yBACJ,SAAU,yBACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,OAAQI,MAAKJ,EAAY,KAAM,CACxC,SAAU,iBACX,CAAA,EAAG;AAAA,yEAA0JI,MAAKJ,EAAY,KAAM,CACnL,SAAU,YACX,CAAA,EAAG;AAAA,EAAwBI,MAAKJ,EAAY,KAAM,CACjD,SAAU,OACX,CAAA,EAAG,YAAY,CACjB,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,aACJ,SAAU,YACX,CAAA,EAAG;AAAA,EAAME,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,OAAQI,MAAKJ,EAAY,KAAM,CACxC,SAAU,WACX,CAAA,EAAG;AAAA;AAAA,iDAA2O,CAChP,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,IAAK,CAC9B,SAAUI,EAAAA,IAAKJ,EAAY,KAAM,CAC/B,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,UACJ,SAAU,SAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAAC,MAAO,CACpB,MAAO,CACL,QAAS,OACT,eAAgB,QACjB,EACD,SAAUA,EAAI,IAACE,EAAO,CACpB,GAAIC,CACZ,CAAO,CACP,CAAK,EAAG;AAAA,EAAMH,EAAI,IAACI,EAAQ,CACrB,GAAID,EACJ,KAAM,SACZ,CAAK,CAAC,CACN,CAAG,CACH,CACe,SAASE,GAAWV,EAAQ,GAAI,CAC7C,KAAM,CAAC,QAASW,CAAS,EAAI,CAC3B,GAAGT,EAAoB,EACvB,GAAGF,EAAM,UACb,EACE,OAAOW,EAAYN,EAAI,IAACM,EAAW,CACjC,GAAGX,EACH,SAAUK,EAAI,IAACN,EAAmB,CAChC,GAAGC,CACT,CAAK,CACL,CAAG,EAAID,EAAkBC,CAAK,CAC9B"}
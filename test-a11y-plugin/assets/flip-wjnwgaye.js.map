{"version":3,"file":"flip-wjnwgaye.js","sources":["../../node_modules/ramda/es/flip.js"],"sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;"],"names":["flip","_curry1","fn","curryN","b","args"],"mappings":"6FAuBG,IAACA,EAEJC,EAAQ,SAAcC,EAAI,CACxB,OAAOC,EAAOD,EAAG,OAAQ,SAAU,EAAGE,EAAG,CACvC,IAAIC,EAAO,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,EAClD,OAAAA,EAAK,CAAC,EAAID,EACVC,EAAK,CAAC,EAAI,EACHH,EAAG,MAAM,KAAMG,CAAI,CAC9B,CAAG,CACH,CAAC","x_google_ignoreList":[0]}
import{j as i}from"./jsx-runtime-Nms4Y4qS.js";import{a as C}from"./chunk-454WOBUV-DWuJqIWT.js";import{g as j}from"./storybook-DyKsesZd.js";import{U as m,a as p}from"./UserAvatar-DIvvj7uQ.js";import"./Surface-Cs7tekjF.js";import"./Padbox-BrtZqAZY.js";import"./Stack-B_iJg7G-.js";import{I as y}from"./Inline-Cavohj9s.js";import"./Cluster-f2eLrBJy.js";import{S as h}from"./space-B9R18Mwn.js";import"./DSProvider-DzIDhM_J.js";import"./theme-BW2FcxSF.js";import"./index-DFvsTZbx.js";import"./index-BwDkhjyp.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-D8aEg3BZ.js";import"./zipObj-D5WCOpKt.js";import"./index-Dk74W0Oi.js";import"./index-CVyJwDg7.js";import"./Button.enums-b_k9EAqq.js";import"./BaseButton-IeCCn510.js";import"./Icon-B7DxM8PH.js";import"./useLogger-D4I9buOf.js";import"./require-router-link-m162i5rV.js";import"./react-router-dom-gpQgZfeg.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./extends-CF3RwP-h.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-QRY9P8Qv.js";import"./Spinner-DLDOSOzx.js";import"./prop-3Huj0iT1.js";import"./isNotNull-C0-yEnlk.js";import"./noop-Bk6XfTLC.js";import"./take-B9V3Rq9C.js";import"./trim-C3a3l8W7.js";import"./flex.types-q2tZp175.js";import"./index-DhoXBIRq.js";import"./colors-DAn332pn.js";const ur={title:"components/UserAvatar",component:m,argTypes:{size:{...j("select",p)}}},n=o=>i.jsx(m,{...o}),r=n.bind({});r.args={label:"AB",size:p.md};r.parameters={screenshot:{skip:!0}};const e=o=>i.jsxs(y,{align:"center",gap:h.lg,children:[i.jsx(m,{...o,size:p.sm}),i.jsx(m,{...o,size:p.md})]});e.args={label:r.args.label};const t=n.bind({});t.args={label:"cdab long text with spaces"};const a=n.bind({});a.args={...r.args,isInverted:!0,onClick:C("onClick")};a.parameters={backgrounds:{default:"primary",values:[{name:"primary",value:"#4d29d4"}]}};const s=n.bind({});s.args={...r.args,onClick:C("onClick")};s.parameters={screenshot:{skip:!0}};e.__docgenInfo={description:"",methods:[],displayName:"DifferentSizes"};var c,l,d;r.parameters={...r.parameters,docs:{...(c=r.parameters)==null?void 0:c.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(d=(l=r.parameters)==null?void 0:l.docs)==null?void 0:d.source}}};var g,u,v;e.parameters={...e.parameters,docs:{...(g=e.parameters)==null?void 0:g.docs,source:{originalSource:`args => <Inline align="center" gap={SpaceSizes.lg}>
    <UserAvatar {...args} size={UserAvatarSizes.sm} />
    <UserAvatar {...args} size={UserAvatarSizes.md} />
  </Inline>`,...(v=(u=e.parameters)==null?void 0:u.docs)==null?void 0:v.source}}};var z,A,S;t.parameters={...t.parameters,docs:{...(z=t.parameters)==null?void 0:z.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(S=(A=t.parameters)==null?void 0:A.docs)==null?void 0:S.source}}};var f,U,x;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(x=(U=a.parameters)==null?void 0:U.docs)==null?void 0:x.source}}};var b,I,k;s.parameters={...s.parameters,docs:{...(b=s.parameters)==null?void 0:b.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(k=(I=s.parameters)==null?void 0:I.docs)==null?void 0:k.source}}};const vr=["Playground","DifferentSizes","NormalizeText","InvertedColors","InteractiveAvatar"];export{e as DifferentSizes,s as InteractiveAvatar,a as InvertedColors,t as NormalizeText,r as Playground,vr as __namedExportsOrder,ur as default};

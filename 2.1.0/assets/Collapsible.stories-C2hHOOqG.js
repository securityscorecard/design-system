import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{r as j}from"./index-CTjT7uj6.js";import{a as _}from"./chunk-454WOBUV-DWuJqIWT.js";import{C as a}from"./Collapsible-CwAMRZ4r.js";import{B as I}from"./Button-CgUf0TwU.js";import{S as y}from"./Snippet-kcbmYTWe.js";import"./Surface-CvF-S7pg.js";import"./Padbox-CsIyVOa3.js";import{S as P}from"./Stack-vWwwEz_d.js";import"./Inline-CNottUT6.js";import"./Cluster-BOKWm1iB.js";import"./v4-D8aEg3BZ.js";import"./space-BY85GhUc.js";import"./index-C7IrpltL.js";import"./extends-CF3RwP-h.js";import"./DSProvider-eD554_K8.js";import"./index-DIVhMF2i.js";import"./theme-DztFT9GZ.js";import"./colors-DAn332pn.js";import"./Icon-DSPfH_8v.js";import"./index-DFvsTZbx.js";import"./index-BRV0Se7Z.js";import"./useLogger-CziYgifR.js";import"./Text-CQej7zPl.js";import"./BaseButton-Bl-0NeNF.js";import"./require-router-link-EREg1Bbm.js";import"./react-router-dom-BO_MR9e_.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-C9Yu1wmA.js";import"./Spinner-b5BYo8Sk.js";import"./prop-Cw0eZkJ_.js";import"./isNotNull-D2Wrs3cn.js";import"./noop-CRTpovv1.js";import"./ErrorBoundary-C_ITmIZo.js";import"./Link-CjFXlB6o.js";import"./BaseLink-C32xmWCG.js";import"./flip-Dpb57Bs1.js";import"./flex.types-BrkCVx66.js";const ue={component:a,title:"components/Collapsible"},t=o=>r.jsx(a,{...o});t.args={title:"playground",subject:"Collapsible",children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pharetra magna lectus, a congue ex blandit vel. Donec id mi commodo eros porta tempus"};t.parameters={screenshot:{skip:!0}};const e=o=>r.jsx(a,{...o});e.args={subject:"Website does not implement X-XSS-Protection Best Practices",title:"Resolve or Comment",onOpen:_("onOpen"),children:"You have 256 findings related to Website does not implement X-XSS-Protection Best Practices"};const p=o=>r.jsx(a,{...o});p.args={...e.args,defaultIsOpen:!0};const s=o=>{const[n,l]=j.useState(!0);return r.jsxs(P,{gap:"md",children:[r.jsx(a,{isOpen:n,onOpenChange:i=>l(i),...o}),r.jsx(I,{variant:"outline",onClick:()=>{l(i=>!i)},children:"Toggle"}),r.jsx(y,{children:`{
          isOpen: ${n},
        }`})]})};s.args=e.args;s.parameters={screenshot:{skip:!0}};t.__docgenInfo={description:"",methods:[],displayName:"Playground"};e.__docgenInfo={description:"",methods:[],displayName:"DefaultCollapsible"};p.__docgenInfo={description:"",methods:[],displayName:"OpenedCollapsible"};s.__docgenInfo={description:"",methods:[],displayName:"ControlledCollapsible"};var m,c,d;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:"args => <Collapsible {...args} />",...(d=(c=t.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var u,g,C;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:"args => <Collapsible {...args} />",...(C=(g=e.parameters)==null?void 0:g.docs)==null?void 0:C.source}}};var b,O,S;p.parameters={...p.parameters,docs:{...(b=p.parameters)==null?void 0:b.docs,source:{originalSource:"args => <Collapsible {...args} />",...(S=(O=p.parameters)==null?void 0:O.docs)==null?void 0:S.source}}};var f,h,x;s.parameters={...s.parameters,docs:{...(f=s.parameters)==null?void 0:f.docs,source:{originalSource:`args => {
  const [isOpen, setIsOpen] = useState(true);
  return <Stack gap="md">
      <Collapsible isOpen={isOpen} onOpenChange={open => setIsOpen(open)} {...args} />

      <Button variant="outline" onClick={() => {
      setIsOpen(prev => !prev);
    }}>
        Toggle
      </Button>
      <Snippet>
        {\`{
          isOpen: \${isOpen},
        }\`}
      </Snippet>
    </Stack>;
}`,...(x=(h=s.parameters)==null?void 0:h.docs)==null?void 0:x.source}}};const ge=["Playground","DefaultCollapsible","OpenedCollapsible","ControlledCollapsible"];export{s as ControlledCollapsible,e as DefaultCollapsible,p as OpenedCollapsible,t as Playground,ge as __namedExportsOrder,ue as default};

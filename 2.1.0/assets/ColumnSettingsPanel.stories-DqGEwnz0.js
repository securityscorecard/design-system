import{j as n}from"./jsx-runtime-Nms4Y4qS.js";import{r as S}from"./index-BwDkhjyp.js";import{D as a}from"./Datatable-CUEcp2i-.js";import{T as t}from"./Template-DdIjOLPX.js";import"./_commonjsHelpers-BosuxZz1.js";import"./useLogger-D4I9buOf.js";import"./space-B9R18Mwn.js";import"./DSProvider-DzIDhM_J.js";import"./extends-CF3RwP-h.js";import"./index-DhoXBIRq.js";import"./theme-BW2FcxSF.js";import"./colors-DAn332pn.js";import"./menuElements-HsU9kfTS.js";import"./Icon-B7DxM8PH.js";import"./index-DFvsTZbx.js";import"./index-Dk74W0Oi.js";import"./index-CVyJwDg7.js";import"./tslib.es6-BLYux4pC.js";import"./Surface-Cs7tekjF.js";import"./flex.types-q2tZp175.js";import"./prop-3Huj0iT1.js";import"./Padbox-BrtZqAZY.js";import"./Stack-B_iJg7G-.js";import"./Inline-Cavohj9s.js";import"./Cluster-f2eLrBJy.js";import"./Text-C1sA-5dj.js";import"./pluck-CCxX0LJC.js";import"./useLocalStorageState-CgPcEN2x.js";import"./useContainerQuery-BBpl-5uo.js";import"./Paragraph-DD2XWiUD.js";import"./spacing.types-QRY9P8Qv.js";import"./Skeleton-BoUdprqo.js";import"./Tooltip-BAcCN_rY.js";import"./FloatingContext-nGTlWJDF.js";import"./Button-CKE-X77u.js";import"./BaseButton-IeCCn510.js";import"./require-router-link-m162i5rV.js";import"./react-router-dom-gpQgZfeg.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./Spinner-DLDOSOzx.js";import"./isNotNull-C0-yEnlk.js";import"./noop-Bk6XfTLC.js";import"./CloseButton-CuyKiBXp.js";import"./sortable.esm-DD_xGjRI.js";import"./modifiers.esm-CDknwSvc.js";import"./index-xJp9Kd2E.js";import"./Pill-CwiyUbuD.js";import"./PillRemoveButton-MEfwPxhp.js";import"./PillLabel-DJNPzf-i.js";import"./gt-CQw4D1xu.js";const dt={title:"components/DatatableV2/ColumnSettingsPanel",component:a,parameters:{screenshot:{skip:!0}}},d=t.bind({});d.args=t.args;const c=t.bind({});c.args={...t.args,enableHiding:!1,enableColumnPinning:!1};const m=t.bind({});m.args={...t.args,enableHiding:!1,initialState:{showColumnSettings:!0}};m.parameters={screenshot:{skip:!1}};const l=t.bind({});l.args={...t.args,enableColumnPinning:!1,initialState:{showColumnSettings:!0}};l.parameters={screenshot:{skip:!1}};const p=t.bind({});p.args={...t.args,initialState:{showColumnSettings:!0}};p.parameters={screenshot:{skip:!1}};const e=g=>{const[i,u]=S.useState(!0);return n.jsxs(n.Fragment,{children:[n.jsx(a,{state:{showColumnSettings:i},onShowColumnSettings:u,...g}),n.jsxs("div",{children:[n.jsx("strong",{children:"Debug:"}),n.jsx("pre",{children:JSON.stringify(i,null,2)})]})]})};e.args=t.args;e.__docgenInfo={description:"",methods:[],displayName:"ColumnSettingsPanelManagedState"};var o,s,r;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`args => {
  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);
  return <>
      <Datatable state={{
      showColumnSettings
    }} onShowColumnSettings={setShowColumnSettings} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>
      </div>
    </>;
}`,...(r=(s=e.parameters)==null?void 0:s.docs)==null?void 0:r.source}}};const ct=["ColumnSettingsPanelEnabled","DisabledColumnSettingsPanel","DisabledColumnHidingInSettingsPanel","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState"];export{d as ColumnSettingsPanelEnabled,e as ColumnSettingsPanelManagedState,m as DisabledColumnHidingInSettingsPanel,l as DisabledColumnPinningInSettingsPanel,c as DisabledColumnSettingsPanel,p as InitialColumnSettingsPanel,ct as __namedExportsOrder,dt as default};

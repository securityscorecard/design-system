import{j as a}from"./jsx-runtime-Cw0GR0a5.js";import{R as s}from"./index-CTjT7uj6.js";import{s as l,E as o,r as t,j as y}from"./space-BY85GhUc.js";import{P as p}from"./index-BRV0Se7Z.js";import{c as I}from"./index-C7IrpltL.js";import{I as b}from"./Input-BtOZIwxI.js";import{P as g}from"./Password-65KzSUZy.js";import{S as C}from"./Select-COyzZzGC.js";import"./CreatableSelect-D23fXLUV.js";import{I as d}from"./Icon-DSPfH_8v.js";import"./Surface-CvF-S7pg.js";import{P as x}from"./Padbox-CsIyVOa3.js";import"./Stack-vWwwEz_d.js";import{I as S}from"./Inline-CNottUT6.js";import"./Cluster-BOKWm1iB.js";import{B as w}from"./Button-CgUf0TwU.js";import{S as G}from"./SearchBar-Dg-JDwAb.js";import{u as T}from"./useLogger-CziYgifR.js";import{p as m}from"./prop-Cw0eZkJ_.js";const _=l(S).withConfig({displayName:"InputGroup__InputGroupContainer",componentId:"sc-18cez2f-0"})(["border:"," solid ",";border-radius:",";.ssc__control{border:0px;box-shadow:none;}& > &{border:none;border-radius:0px;}& > *,input:not([id^='react-select']){border:none;box-shadow:none;border-radius:0px;}& > *{","}& > *:first-child{border-radius:"," 0 0 "," !important;}& > *:last-child,& > *:last-child input[type='password'],& > *:last-child input[type='search']{border-right:0px !important;border-radius:0 "," "," 0 !important;}"],o("borderWidth"),o("borderColor"),t("default"),e=>e.hasDivider&&`border-right: ${o("borderWidth")(e)} solid ${o("borderColor")(e)};`,t("default"),t("default"),t("default"),t("default")),N=l(x).withConfig({displayName:"InputGroup__IconContainer",componentId:"sc-18cez2f-1"})(["display:flex;align-items:center;"]),n=({children:e,hasDivider:c,className:u,...i})=>{const{error:f}=T("InputGroup"),h=[C,b,d,w,g,n,G];return s.Children.forEach(e,r=>{h.includes(m("type",r))||f("Only Select, Input, InputGroup, Icon, Button, SearchBar and Password are valid childs of InputGroup")}),a.jsx(_,{className:I(y,u),hasDivider:c,...i,stretch:i.stretch||"start",children:s.Children.map(e,r=>m("type",r)===d?a.jsx(N,{paddingSize:"sm",children:r}):r)})};n.propTypes={hasDivider:p.bool,className:p.string};const V=n;n.__docgenInfo={description:"",methods:[],displayName:"InputGroup",props:{gap:{required:!1,tsType:{name:"ReturnType",elements:[{name:"createSpace"}],raw:"ReturnType<typeof createSpace>"},description:"Whitespace between each child of the Inline"},justify:{required:!1,tsType:{name:"Property.JustifyContent"},description:"Horizontal alignment of elements inside Inline"},align:{required:!1,tsType:{name:"Property.AlignItems"},description:"Vertical alignment of elements inside Inline"},stretch:{required:!1,tsType:{name:"union",raw:"number | Stretch",elements:[{name:"number"},{name:"unknown[union]",raw:"(typeof StretchEnum)[keyof typeof StretchEnum]"}]},description:"Child or children to fill available space"},className:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}},hasDivider:{description:"",type:{name:"bool"},required:!1}}};export{V as I};

import{j as e}from"./jsx-runtime-Nms4Y4qS.js";import{r as N}from"./index-BwDkhjyp.js";import{a as l}from"./chunk-454WOBUV-DWuJqIWT.js";import"./Surface-Cs7tekjF.js";import"./Padbox-BrtZqAZY.js";import{S as O}from"./Stack-B_iJg7G-.js";import{I as z}from"./Inline-Cavohj9s.js";import"./Cluster-f2eLrBJy.js";import{B as g}from"./Button-CKE-X77u.js";import{S as d}from"./SearchBar-Bv5RW7j4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./v4-D8aEg3BZ.js";import"./space-B9R18Mwn.js";import"./index-Dk74W0Oi.js";import"./index-CVyJwDg7.js";import"./flex.types-q2tZp175.js";import"./useLogger-D4I9buOf.js";import"./DSProvider-DzIDhM_J.js";import"./extends-CF3RwP-h.js";import"./index-DhoXBIRq.js";import"./theme-BW2FcxSF.js";import"./colors-DAn332pn.js";import"./prop-3Huj0iT1.js";import"./BaseButton-IeCCn510.js";import"./Icon-B7DxM8PH.js";import"./index-DFvsTZbx.js";import"./require-router-link-m162i5rV.js";import"./react-router-dom-gpQgZfeg.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-QRY9P8Qv.js";import"./Spinner-DLDOSOzx.js";import"./isNotNull-C0-yEnlk.js";import"./noop-Bk6XfTLC.js";import"./Input-CwSx1PX_.js";import"./isNonEmptyString-Dt8hjEzN.js";import"./isFunction-Wst0ouRg.js";import"./pluck-CCxX0LJC.js";import"./both-CuwR4I11.js";import"./isNotEmpty-DVMo52u6.js";import"./isNotNilOrEmpty-Drr4-pBH.js";import"./isNilOrEmpty-CUDYV7wl.js";import"./isNil-Bk-kOnIJ.js";const Pr={title:"components/forms/SearchBar",component:d,argTypes:{defaultValue:{control:{type:"text"},table:{type:{summary:"string"}}},value:{control:{type:"text"},table:{type:{summary:"string"}}},onChange:{control:{disable:!0}}}},o=p=>e.jsx(d,{...p}),r=o.bind({});r.args={onChange:l("onChange"),onClear:l("onClear"),onSearch:l("onSearch")};r.parameters={screenshot:{skip:!0}};const m=o.bind({}),s=o.bind({});s.args={...r.args,defaultValue:"some default search query"};const c=o.bind({});c.args={isDisabled:!0};const n=o.bind({});n.args={value:"search query",isSearching:!0};const a=o.bind({});a.args={hasDebouncedSearch:!0,debounceTime:300};a.parameters={screenshot:{skip:!0}};const t=p=>{const[R,i]=N.useState(""),w=()=>new Promise(u=>{setTimeout(()=>{u()},2e3)});return e.jsxs(O,{gap:"sm",children:[e.jsx(d,{...p,value:R,onChange:u=>{i(u.target.value)},onClear:()=>i(""),onSearch:w}),e.jsxs(z,{gap:"md",children:[e.jsx(g,{onClick:()=>i("controlledValue1"),children:"Set query"}),e.jsx(g,{onClick:()=>i(""),children:"Reset query"})]})]})};t.parameters={screenshot:{skip:!0}};t.__docgenInfo={description:"",methods:[],displayName:"ControlledInput"};var h,S,y;r.parameters={...r.parameters,docs:{...(h=r.parameters)==null?void 0:h.docs,source:{originalSource:"args => <SearchBar {...args} />",...(y=(S=r.parameters)==null?void 0:S.docs)==null?void 0:y.source}}};var f,B,b;m.parameters={...m.parameters,docs:{...(f=m.parameters)==null?void 0:f.docs,source:{originalSource:"args => <SearchBar {...args} />",...(b=(B=m.parameters)==null?void 0:B.docs)==null?void 0:b.source}}};var C,x,k;s.parameters={...s.parameters,docs:{...(C=s.parameters)==null?void 0:C.docs,source:{originalSource:"args => <SearchBar {...args} />",...(k=(x=s.parameters)==null?void 0:x.docs)==null?void 0:k.source}}};var D,q,v;c.parameters={...c.parameters,docs:{...(D=c.parameters)==null?void 0:D.docs,source:{originalSource:"args => <SearchBar {...args} />",...(v=(q=c.parameters)==null?void 0:q.docs)==null?void 0:v.source}}};var j,I,Q;n.parameters={...n.parameters,docs:{...(j=n.parameters)==null?void 0:j.docs,source:{originalSource:"args => <SearchBar {...args} />",...(Q=(I=n.parameters)==null?void 0:I.docs)==null?void 0:Q.source}}};var V,P,T;a.parameters={...a.parameters,docs:{...(V=a.parameters)==null?void 0:V.docs,source:{originalSource:"args => <SearchBar {...args} />",...(T=(P=a.parameters)==null?void 0:P.docs)==null?void 0:T.source}}};var _,W,E;t.parameters={...t.parameters,docs:{...(_=t.parameters)==null?void 0:_.docs,source:{originalSource:`args => {
  const [query, setQuery] = useState('');
  const handleSearch = (): Promise<void> => {
    return new Promise(resolve => {
      setTimeout(() => {
        resolve();
      }, 2000);
    });
  };
  return <Stack gap="sm">
      <SearchBar {...args} value={query} onChange={e => {
      setQuery(e.target.value);
    }} onClear={() => setQuery('')} onSearch={handleSearch} />
      <Inline gap="md">
        <Button onClick={() => setQuery('controlledValue1')}>Set query</Button>
        <Button onClick={() => setQuery('')}>Reset query</Button>
      </Inline>
    </Stack>;
}`,...(E=(W=t.parameters)==null?void 0:W.docs)==null?void 0:E.source}}};const Tr=["Playground","DefaultState","WithDefaultValue","Disabled","Searching","WithDebouncedSearch","ControlledInput"];export{t as ControlledInput,m as DefaultState,c as Disabled,r as Playground,n as Searching,a as WithDebouncedSearch,s as WithDefaultValue,Tr as __namedExportsOrder,Pr as default};

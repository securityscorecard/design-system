import{j as s}from"./jsx-runtime-Cw0GR0a5.js";import{I as e}from"./IconWrapper-alBLEXTh.js";import"./Surface-CvF-S7pg.js";import"./Padbox-CsIyVOa3.js";import"./Stack-vWwwEz_d.js";import{I as x}from"./Inline-CNottUT6.js";import"./Cluster-BOKWm1iB.js";import{S as u}from"./Icon-DSPfH_8v.js";import{g as y}from"./storybook-ByffxkSu.js";import"./index-CTjT7uj6.js";import"./space-BY85GhUc.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./flex.types-BrkCVx66.js";import"./useLogger-CziYgifR.js";import"./DSProvider-eD554_K8.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-DztFT9GZ.js";import"./colors-DAn332pn.js";import"./prop-Cw0eZkJ_.js";import"./index-DFvsTZbx.js";import"./zipObj-C9fmdzRH.js";const F={title:"components/IconWrapper",component:e,argTypes:{name:{...y("select",u)}}},a=r=>s.jsx(e,{...r});a.args={name:"cog"};a.parameters={screenshot:{skip:!0}};const o=r=>s.jsxs(x,{gap:"md",children:[s.jsx(e,{...r,size:"xs",type:"ssc"}),s.jsx(e,{...r,size:"sm",type:"ssc"}),s.jsx(e,{...r,size:"md",type:"ssc"}),s.jsx(e,{...r,size:"lg",type:"ssc"}),s.jsx(e,{...r,size:"xl",type:"ssc"})]});o.args=a.args;const p=r=>s.jsxs(x,{gap:"md",children:[s.jsx(e,{...r,variant:"default"}),s.jsx(e,{...r,variant:"subtle"}),s.jsx(e,{...r,variant:"strong"})]});p.args={...a.args,size:"xl",type:"ssc"};a.__docgenInfo={description:"",methods:[],displayName:"Playground"};o.__docgenInfo={description:"",methods:[],displayName:"Sizes"};p.__docgenInfo={description:"",methods:[],displayName:"Variants"};var t,n,i;a.parameters={...a.parameters,docs:{...(t=a.parameters)==null?void 0:t.docs,source:{originalSource:"args => <IconWrapper {...args} />",...(i=(n=a.parameters)==null?void 0:n.docs)==null?void 0:i.source}}};var m,c,d;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`args => <Inline gap="md">
    <IconWrapper {...args} size="xs" type="ssc" />
    <IconWrapper {...args} size="sm" type="ssc" />
    <IconWrapper {...args} size="md" type="ssc" />
    <IconWrapper {...args} size="lg" type="ssc" />
    <IconWrapper {...args} size="xl" type="ssc" />
  </Inline>`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var g,l,I;p.parameters={...p.parameters,docs:{...(g=p.parameters)==null?void 0:g.docs,source:{originalSource:`args => <Inline gap="md">
    <IconWrapper {...args} variant="default" />
    <IconWrapper {...args} variant="subtle" />
    <IconWrapper {...args} variant="strong" />
  </Inline>`,...(I=(l=p.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const G=["Playground","Sizes","Variants"];export{a as Playground,o as Sizes,p as Variants,G as __namedExportsOrder,F as default};

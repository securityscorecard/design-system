import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{I as m,S as a}from"./Icon-DSPfH_8v.js";import{g as n}from"./storybook-ByffxkSu.js";import{G as c}from"./Surface-CvF-S7pg.js";import"./Padbox-CsIyVOa3.js";import"./Stack-vWwwEz_d.js";import{I as d}from"./Inline-CNottUT6.js";import"./Cluster-BOKWm1iB.js";import{T as l}from"./Text-CQej7zPl.js";import{p as g}from"./space-BY85GhUc.js";import{s as x}from"./sortBy-DcYbM6i8.js";import{h as f}from"./head-G8u9AJFU.js";import{t as I}from"./toPairs-D7rCSHJa.js";import"./index-CTjT7uj6.js";import"./index-DFvsTZbx.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./useLogger-CziYgifR.js";import"./DSProvider-eD554_K8.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-DztFT9GZ.js";import"./colors-DAn332pn.js";import"./zipObj-C9fmdzRH.js";import"./flex.types-BrkCVx66.js";import"./prop-Cw0eZkJ_.js";const J={title:"Iconography/List",component:m,argTypes:{name:{...n("select",a)}},tags:["autodocs","!dev"]},h=g(I,x(f))(a),o=()=>r.jsx(c,{cols:4,gap:"md",children:h.map(([t,p])=>r.jsxs(d,{align:"center",gap:"md",children:[r.jsx(m,{name:p,hasFixedWidth:!0}),r.jsx(l,{children:t})]},t))});o.__docgenInfo={description:"",methods:[],displayName:"List"};var s,e,i;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`() => <Grid cols={4} gap="md">
    {sortedIconsList.map(([key, value]) => <Inline key={key} align="center" gap="md">
        <Icon name={value} hasFixedWidth />
        <Text>{key}</Text>
      </Inline>)}
  </Grid>`,...(i=(e=o.parameters)==null?void 0:e.docs)==null?void 0:i.source}}};const K=["List"];export{o as List,K as __namedExportsOrder,J as default};

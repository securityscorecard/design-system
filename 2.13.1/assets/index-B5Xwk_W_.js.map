{"version":3,"file":"index-B5Xwk_W_.js","sources":["../../../src/components/Drawer/Drawer.enums.ts","../../../src/components/Drawer/Drawer.tsx","../../../src/components/Drawer/index.tsx"],"sourcesContent":["export const DrawerSizes = {\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n} as const;\n","import { forwardRef, useContext } from 'react';\nimport usePortal from 'react-cool-portal';\nimport styled, { css } from 'styled-components';\nimport { isNotUndefined } from 'ramda-adjunct';\nimport cls from 'classnames';\n\nimport { DrawerProps } from './Drawer.types';\nimport { DrawerSizes } from './Drawer.enums';\nimport { useLockBodyScroll } from '../../hooks/useLockBodyScroll';\nimport { useOuterClick } from '../../hooks/useOuterCallback';\nimport { Inline, Surface } from '../layout';\nimport { Overlay } from '../_internal/BaseOverlay';\nimport { pxToRem } from '../../utils';\nimport { mergeRefs } from '../../utils/mergeRefs';\nimport { SpaceSizes } from '../../theme';\nimport { DSContext } from '../../theme/DSProvider/DSProvider';\nimport { CloseButton } from '../CloseButton';\nimport { StretchEnum } from '../layout/Inline/Inline.enums';\nimport { CLX_COMPONENT } from '../../theme/constants';\nimport { FloatingProvider } from '../../contexts/FloatingContext';\nimport ElementLabel from '../ElementLabel/ElementLabel';\n\nconst widthVariants = {\n  [DrawerSizes.md]: 480,\n  [DrawerSizes.lg]: 720,\n  [DrawerSizes.xl]: 960,\n};\n\nconst Header = styled.div`\n  border-bottom: 1px solid var(--sscds-border-color);\n  padding-inline: var(--sscds-space-dialog-content-padding);\n  padding-block: calc(var(--sscds-space-dialog-content-padding) / 2);\n`;\n\nconst noBackdropStyle = css`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: var(--sscds-depth-modal);\n`;\n\nconst SurfaceContainer = styled.div<{\n  $maxWidth: number;\n  $hasBackdrop: boolean;\n}>`\n  height: calc(100% - var(--sscds-drawer-offset) * 2);\n  max-width: ${({ $maxWidth }) => pxToRem($maxWidth)};\n  margin: var(--sscds-drawer-offset);\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n\n  ${({ $hasBackdrop }) => !$hasBackdrop && noBackdropStyle};\n`;\n\nconst BaseDrawer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n`;\n\n/* stylelint-disable */\nconst Title = styled(ElementLabel)`\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n/* stylelint-enable */\n\nconst Content = styled.div`\n  overflow-y: auto;\n  flex-grow: 2;\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Footer = styled.div`\n  border-top: 1px solid var(--sscds-border-color);\n  padding: var(--sscds-space-dialog-content-padding);\n`;\n\nconst Adornment = styled.div`\n  max-width: ${pxToRem(36)};\n  max-height: ${pxToRem(36)};\n`;\n\nconst DrawerBox = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      size,\n      adornment,\n      children,\n      footer,\n      title,\n      onClose,\n      className,\n      hasBackdrop,\n      ...props\n    },\n    ref,\n  ) => {\n    const hasFooter = isNotUndefined(footer);\n    const hasAdornment = isNotUndefined(adornment);\n\n    return (\n      <SurfaceContainer\n        $hasBackdrop={hasBackdrop}\n        $maxWidth={widthVariants[size]}\n        role=\"dialog\"\n        style={{\n          '--sscds-drawer-offset': 'var(--sscds-space-6x)',\n        }}\n      >\n        <Surface\n          elevation={5}\n          radius=\"lg\"\n          style={{ display: 'flex', width: '100%' }}\n          hasBorder\n        >\n          <BaseDrawer\n            ref={ref}\n            aria-labelledby=\"ds-drawer-title\"\n            className={cls(CLX_COMPONENT, className)}\n            {...props}\n          >\n            <Header>\n              <Inline align=\"center\" stretch={StretchEnum.start}>\n                <Inline align=\"center\" gap={SpaceSizes.md}>\n                  {hasAdornment && <Adornment>{adornment}</Adornment>}\n                  <TitleWrapper>\n                    <Title id=\"ds-drawer-title\" size=\"md\">\n                      {title}\n                    </Title>\n                  </TitleWrapper>\n                </Inline>\n                <CloseButton\n                  marginCompensation={SpaceSizes.md}\n                  onClose={onClose}\n                />\n              </Inline>\n            </Header>\n            <Content>{children}</Content>\n            {hasFooter && <Footer>{footer}</Footer>}\n          </BaseDrawer>\n        </Surface>\n      </SurfaceContainer>\n    );\n  },\n);\n\nconst Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      title,\n      onClose,\n      footer,\n      size = DrawerSizes.md,\n      adornment,\n      hasBackdrop = true,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const { portalsContainerId } = useContext(DSContext);\n    const { Portal } = usePortal({\n      containerId: portalsContainerId,\n      internalShowHide: false,\n      autoRemoveContainer: false,\n      clickOutsideToHide: hasBackdrop,\n    });\n    const drawerRef = useOuterClick<HTMLDivElement>(onClose);\n\n    const drawerProps = {\n      size,\n      ref: hasBackdrop ? mergeRefs<HTMLDivElement>(drawerRef, ref) : ref,\n      adornment,\n      footer,\n      children,\n      title,\n      onClose,\n      hasBackdrop,\n      ...props,\n    };\n\n    useLockBodyScroll({ enabled: hasBackdrop });\n\n    return (\n      <FloatingProvider>\n        <Portal>\n          {hasBackdrop ? (\n            <Overlay data-testid=\"dialog-overlay\" placement=\"right\">\n              <DrawerBox {...drawerProps} />\n            </Overlay>\n          ) : (\n            <DrawerBox {...drawerProps} />\n          )}\n        </Portal>\n      </FloatingProvider>\n    );\n  },\n);\n\nexport default Drawer;\n","export * as DrawerEnums from './Drawer.enums';\nexport { default as Drawer } from './Drawer';\nexport * from './Drawer.types';\n"],"names":["cov_mlje7zhi5","actualCoverage","DrawerSizes","md","lg","xl","cov_b5nebovok","path","hash","global","gcv","coverageData","coverage","widthVariants","s","Header","styled","div","withConfig","displayName","componentId","noBackdropStyle","css","SurfaceContainer","$maxWidth","f","pxToRem","$hasBackdrop","b","BaseDrawer","TitleWrapper","children","Content","Footer","Adornment","DrawerBox","forwardRef","adornment","title","onClose","footer","props","ref","portalsContainerId","hasAdornment","isNotUndefined","Portal","hasBackdrop","jsx","Surface","elevation","radius","style","jsxs","Inline","align","stretch","StretchEnum","start","Drawer","Title","id","size","cov_1flzw6jyb2"],"mappings":"+mDAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,IAAME,MAAAA,GAAAA,EAAAA,EAAAA,EAAc,CAAA,IAAA,CACzBC,GAAI,KACJC,GAAI,KACJC,GAAI,IACN,GCaA,SAAAC,GAAA,CAAA,IAAAC,EAAA,iFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,iFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,gFAAA,EAAA,MAAA,CAAA,OAAA,YAAA,WAAA,SAAA,QAAA,UAAA,YAAA,cAAA,eAAA,YAAA,KAAA,qBAAA,SAAA,MAAA,QAAA,oBAAA,QAAA,EAAA,SAAA,suBAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAV,EAAAW,EAAAL,CAAA,EAAAD,OAAAA,YAAA,CAAA,OAAAL,CAAAA,EAAAA,EAAAK,IAMoB,MAAAO,GAAAP,EAAA,EAAAQ,EAAA,CAAA,IAAA,CAAA,CAAAZ,EAAAC,EAAA,EACA,IAAA,CAAAD,EAAAE,EAAA,EAEpB,IAAA,CAAAF,EAAAG,EAAA,KAEyB,GAAAU,GAAAT,EAAA,EAAAQ,EAAA,CAAA,IAAAE,EAAAC,IAAAC,WAAA,CAAAC,YAAA,iBAAAC,YAkBT,YAAA,CAAA,EAAA,CAAA,+KAAA,CAAA,GAAAC,GAAAf,IAAAQ,EAAA,CAAA,IAAAQ,EASa,CAAA,gEAAA,CAAA,GAAAC,GAAAjB,EAAA,EAAAQ,EAAA,CAAA,IAAAE,EAAAC,IAAAC,YAAAC,YAAA,2BAAAC,YAW7BI,YAAAA,CAAAA,EAAAA,CAAAA,gEAAAA,iFAAAA,GAAAA,EAAAA,CAAAA,CAAAA,UAAAA,CAAA,KAAAlB,EAAA,EAAAmB,EAAAnB,CAAAA,IAAAA,EAAA,EAAAQ,EAAA,CAAA,IAAAY,EAAAF,CAAA,KAQ0BG,aAAAA,CAAA,KAAArB,EAAA,EAAAmB,EAAAnB,CAAAA,IAAAA,IAAAQ,EAAA,CAAA,IAAAR,EAAA,EAAAsB,WAAAD,IAAArB,IAAAsB,UAAAP,GAAA,GAMDQ,GAAAvB,EAAA,EAAAQ,EAAAE,CAAAA,IAAAA,EAAAC,IAAAC,WAAAC,CAAAA,iCAAAC,YAAA,YAAA,CAAA,EAAA,CAAA,gDAAA,CAAA,GAKGU,GAAAxB,IAAAQ,OAAAE,EAAAC,IAAAC,WAAAC,CAAAA,mCAAAC,YAAA,YAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,GAUtBW,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,CAAAA,EAAAA,YAAAA,YAAAA,gBAAAA,YAAAA,YAAAA,CAAAA,EAAAA,CAAAA,gFAAAA,CAAAA,GAWFC,GAAA1B,EAAA,EAAAQ,OAAAE,EAAAC,IAAAC,YAAAC,YAAA,kBAAAC,YAcuC,YAAA,CAAA,EAAA,CAAA,gFAAA,CAAA,GAAAa,GAAA3B,EAAAQ,EAAAA,QAAAE,EAAAC,IAAAC,YAAAC,YAAA,iBAAAC,YAiBzB,YAAA,CAAA,EAAA,CAAA,mGAAA,CAAA,GAAAc,GAAA5B,EAAA,EAAAQ,EAAA,EAAA,IAAAE,EAAAC,IAAAC,YAAAC,YAAA,oBAAAC,YAAAM,YAAAA,CAAAA,EAAAA,CAAAA,aAAAA,eAAAA,GAAAA,EAAAA,MAAAA,EAAA,EAAA,CAAA,GASwBS,GAAA7B,EAAAQ,EAAAA,QAAAsB,EAAA,WAAA,CAAA,CAMxCD,KAAAA,EAEFE,UAAAA,EAEIN,SAAAA,EACEO,OAAAA,EACAC,MAAAA,EACAC,QAAAA,EACmBrC,UAAAA,EACnBkC,YAAAA,EACc,GAAAI,CAGhB,EAAAC,KAAApC,EAAA,EAAAmB,EAGQkB,CAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,QAAAA,EAAAA,CAAAA,GACRC,GAAAtC,EAAA,EAAAQ,EAAA,EAAA,IAAA+B,EAAAR,CAAA,GAAA/B,OAAAA,EAAA,EAAAQ,EAAA,EAAA,IAAQgC,EAAAA,IAAAA,EAAAA,CAAAA,aAAAA,EAAAA,UAAAA,EAAAA,CAAAA,EAAAA,KAAAA,SAAAA,OAIcC,wBAEtB,uBAAA,EAAAhB,SAAAiB,EAAAA,IAAAC,GAAAC,UAAA,EAAAC,OAAAC,KAAAA,OAMEZ,QAAAA,OAAAA,MAAAA,MAAAA,EAAAA,UAAAA,GAAAA,SAAAA,EAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,kBAAAA,kBAAAA,UAAAA,EAAAA,EAAAA,CAAAA,KAAAA,EAAAA,SAUF,CAAAQ,EAAA,IAAAjC,GAAAgB,SAAAsB,EAAA,KAAAC,EAAAC,CAAAA,eAAAC,QAAAC,EAAAC,MAAA3B,SAAA,CAcF4B,EAAAA,KAAAA,EAAAA,CAAAA,eAAAA,IAAAA,EAAAA,GAAAA,WAEFrD,IAAAsB,EAAA,CAAA,EAAA,CAAA,IAAAgB,IAAAtC,IAAAsB,EAAA,CAAA,EAAA,CAAA,IAAAoB,EAAAA,IAAAd,GAAAH,SAAAM,CAAA,CAAA,IAAAW,EAAAA,IAAAlB,EAAAC,CAAAA,SAAAiB,EAAAA,IAAAY,EAAAC,CAAAA,qBAAAC,KAAA,KAAA/B,SAAAO,CAAA,63DC7MAyB,EAAAjD,EAAAA"}
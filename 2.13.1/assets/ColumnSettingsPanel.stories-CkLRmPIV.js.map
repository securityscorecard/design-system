{"version":3,"file":"ColumnSettingsPanel.stories-CkLRmPIV.js","sources":["../../../src/components/DatatableV2/stories/ColumnSettingsPanel.stories.tsx"],"sourcesContent":["import React, { Meta } from '@storybook/react';\nimport { useState } from 'react';\n\nimport Datatable from '../Datatable';\nimport Template, { Story } from './Template';\nimport argTypes from './argTypes';\n\nexport default {\n  title: 'components/DatatableV2/ColumnSettingsPanel',\n  component: Datatable,\n  parameters: {\n    screenshot: { skip: true },\n  },\n  argTypes,\n} as Meta<typeof Datatable>;\n\nexport const ColumnSettingsPanelEnabled: Story = Template.bind({});\nColumnSettingsPanelEnabled.args = Template.args;\n\nexport const DisabledColumnSettingsPanel: Story = Template.bind({});\nDisabledColumnSettingsPanel.args = {\n  ...Template.args,\n  enableHiding: false,\n  enableColumnPinning: false,\n};\n\nexport const DisabledColumnHidingInSettingsPanel: Story = Template.bind({});\nDisabledColumnHidingInSettingsPanel.args = {\n  ...Template.args,\n  enableHiding: false,\n  initialState: {\n    showColumnSettings: true,\n  },\n};\nDisabledColumnHidingInSettingsPanel.parameters = {\n  screenshot: { skip: false },\n};\n\nexport const DisabledColumnPinningInSettingsPanel: Story = Template.bind({});\nDisabledColumnPinningInSettingsPanel.args = {\n  ...Template.args,\n  enableColumnPinning: false,\n  initialState: {\n    showColumnSettings: true,\n  },\n};\nDisabledColumnPinningInSettingsPanel.parameters = {\n  screenshot: { skip: false },\n};\n\nexport const InitialColumnSettingsPanel: Story = Template.bind({});\nInitialColumnSettingsPanel.args = {\n  ...Template.args,\n  initialState: {\n    showColumnSettings: true,\n  },\n};\nInitialColumnSettingsPanel.parameters = {\n  screenshot: { skip: false },\n};\n\nexport const ColumnSettingsPanelManagedState: Story = (args) => {\n  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);\n\n  return (\n    <>\n      <Datatable\n        state={{ showColumnSettings }}\n        onShowColumnSettings={setShowColumnSettings}\n        {...args}\n      />\n      <div>\n        <strong>Debug:</strong>\n        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>\n      </div>\n    </>\n  );\n};\nColumnSettingsPanelManagedState.args = Template.args;\n"],"names":["component","ColumnSettingsPanel_stories","parameters","screenshot","skip","argTypes","ColumnSettingsPanelEnabled","Template","bind","args","DisabledColumnSettingsPanel","enableHiding","enableColumnPinning","DisabledColumnHidingInSettingsPanel","initialState","showColumnSettings","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState","setShowColumnSettings","useState","jsxs","Fragment","jsx","Datatable","JSON"],"mappings":"60DASEA,MAAoBC,GAAA,CACpBC,MAAAA,6CACEC,UAAAA,EAAcC,WAAM,CAAKD,WAAA,CAAAC,KAAA,EAAA,CAC3B,EACAC,SAAAA,CACF,EAGAC,EAA+CC,EAAAC,KAAA,EAAA,EAE/CF,EAAwCG,KAAAF,EAAOE,KAElCC,MAAAA,EAAKH,EAAAC,KAAA,EAAA,EAChBG,EAAmBF,KAAA,CACnBG,GAAAA,EAAAA,KACDD,aAAA,GAEMC,oBAAyC,EAChDC,EAEEF,MAAAA,EAAmBJ,EAAAC,KAAA,EAAA,EACnBM,EAAcL,KAAA,CACZM,GAAAA,EAAAA,KACFJ,aAAA,GACDG,aAAA,CACkCC,mBAAA,EACjCZ,CAAcC,EAAYS,EAAAX,WAAA,CAC3BC,WAAA,CAAAC,KAAA,EAAA,CAED,EAEaY,MAAAA,EAAKT,EAAAC,KAAA,EAAA,EAChBI,EAA0BH,KAAA,CAC1BK,GAAAA,EAAYL,KACVM,oBAAoB,GACtBD,aAAA,CACDC,mBAAA,EACmC,CAClCZ,EAAcC,EAAMF,WAAA,CAAMC,WAAA,CAAAC,KAAA,EAAA,CAC5B,EAG0Ba,MAAAA,EAAQV,EAAAC,KAAA,EAAA,IAChBC,KAAA,CAChBK,GAAAA,EAAYL,KACVM,aAAAA,CACFA,mBAAA,EACD,CACDE,EACEd,EAAYD,WAAA,CAAEE,WAAM,CAAAA,KAAA,EAAA,CAAM,EAG5B,MAAac,EAAmDT,GAAA,CAC9D,KAAM,CAACM,EAAoBI,CAAqB,EAAIC,WAAkB,EAAI,EAI5E,OACsCC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,MAC9BC,GAGE,MAAA,CAAAT,mBAAAA,CACF,EAAA,qBAAsBI,EAClBV,GAAAA,EAAEgB,SAEP,MAEN,CAAA,SAAA,CAAAF,EAAAA,IAAA,UAAA,SAAA,QAAA,CAAA,QACDL,MAAAA,CAAAA,SAAAA,KAAAA,UAAAA,EAAoD,KAAA,CAAA,EAAA,CAAA;;;;;;;;;;;"}
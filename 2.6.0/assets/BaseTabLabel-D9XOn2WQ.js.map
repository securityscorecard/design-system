{"version":3,"file":"BaseTabLabel-D9XOn2WQ.js","sources":["../../../src/components/_internal/BaseTabs/BaseTabs.enums.ts","../../../src/components/_internal/BaseTabs/BaseTabsWrapper.tsx","../../../src/components/_internal/BaseTabs/BaseTabLabel.tsx"],"sourcesContent":["export const BaseTabVariants = {\n  text: 'text',\n  underline: 'underline',\n  segmented: 'segmented',\n} as const;\n","import styled, { css } from 'styled-components';\n\nimport { Padbox } from '../../layout';\nimport { getColor, getFormStyle, getRadii } from '../../../utils';\nimport { Variants } from './BaseTabLabel.types';\nimport { BaseTabVariants } from './BaseTabs.enums';\n\nexport const BaseTabsWrapper = styled(Padbox)<{\n  $variant: Variants;\n  $isExpanded: boolean;\n}>`\n  display: inline-block;\n\n  ${({ $variant, $isExpanded }) =>\n    $variant === BaseTabVariants.segmented &&\n    $isExpanded &&\n    css`\n      width: 100%;\n      flex-grow: 1;\n    `};\n\n  ${({ $variant }) =>\n    $variant === BaseTabVariants.segmented &&\n    css`\n      background: ${getColor('neutral.0')};\n      box-shadow: inset 0 0 0 1px ${getFormStyle('borderColor')};\n      border-radius: ${getRadii('default')};\n    `};\n`;\n","import styled, { css } from 'styled-components';\nimport { __, includes, pipe, subtract } from 'ramda';\n\nimport { getColor, getRadii, getToken, pxToRem } from '../../../utils';\nimport { BaseLabelProps } from './BaseTabLabel.types';\nimport { BaseTabVariants } from './BaseTabs.enums';\nimport { Padbox } from '../../layout/Padbox';\n\nconst underlineTab = css<BaseLabelProps>`\n  font-weight: ${({ $isSelected }) =>\n    $isSelected\n      ? 'var(--sscds-font-weight-body-strong)'\n      : 'var(--sscds-font-weight-body-default)'};\n  line-height: 1.5rem;\n  color: ${getColor('neutral.900')};\n  border-bottom: 2px solid\n    ${({ $isSelected }) =>\n      $isSelected ? getToken('color-action-primary') : getColor('neutral.300')};\n\n  &:hover {\n    color: ${getColor('neutral.900')};\n    border-bottom-color: ${getToken('color-action-primary-focus')};\n  }\n`;\n\nconst textTab = css<BaseLabelProps>`\n  line-height: var(--sscds-font-lineheight-elementlabel);\n  font-weight: var(--sscds-font-weight-elementlabel-default);\n  color: ${({ $isSelected }) =>\n    $isSelected\n      ? getColor('neutral.900')\n      : getToken('color-action-link-primary')};\n\n  &:hover {\n    color: ${getToken('color-action-link-primary-hover')};\n  }\n`;\n\nexport const segmentedTabSelected = css`\n  background: ${getColor('primary.50')};\n  border: 1px solid ${getColor('primary.200')};\n`;\n\nconst segmentedTab = css<BaseLabelProps>`\n  line-height: var(--sscds-font-lineheight-elementlabel);\n\n  height: ${({ theme }) =>\n    pipe(\n      getToken('size-action-size'),\n      subtract(__, 2 * theme.space.xs),\n      pxToRem,\n    )({ theme })};\n  border: 1px solid transparent;\n  ${({ $isSelected }) => $isSelected && segmentedTabSelected};\n\n  border-radius: ${getRadii('half')};\n  color: ${getColor('neutral.900')};\n\n  &:hover {\n    color: ${getToken('color-action-primary-hover')};\n  }\n\n  &:active {\n    color: ${getToken('color-action-primary-active')};\n  }\n`;\n\nconst tabVariants = {\n  [BaseTabVariants.text]: textTab,\n  [BaseTabVariants.underline]: underlineTab,\n  [BaseTabVariants.segmented]: segmentedTab,\n};\n\nconst BaseTabLabel = styled(Padbox).withConfig({\n  shouldForwardProp: (property) =>\n    !includes(property, ['paddingType', 'paddingSize', 'theme']),\n})<BaseLabelProps>`\n  display: flex;\n  align-items: center;\n  outline: none;\n  text-decoration: none;\n  cursor: pointer;\n\n  font-size: ${getToken('font-action-size')};\n\n  ${({ $isExpanded }) =>\n    $isExpanded &&\n    css`\n      justify-content: center;\n    `};\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  ${({ $variant }) => tabVariants[$variant]};\n`;\n\nexport default BaseTabLabel;\n"],"names":["cov_2n1qne2uh4","actualCoverage","BaseTabVariants","text","underline","segmented","BaseTabsWrapper","cov_fryg04auj","s","styled","Padbox","withConfig","displayName","componentId","underlineTab","cov_rw0rmg9km","css","$isSelected","f","b","getColor","getToken","textTab"],"mappings":"+qCAAO,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,IAAME,MAAAA,GAAAA,EAAAA,EAAAA,EAAkB,CAAA,IAAA,CAC7BC,KAAM,OACNC,UAAW,YACXC,UAAW,WACb,04DCG6CC,GAAAC,EAAA,EAAAC,EAAA,CAAA,IAAAC,EAAAC,CAAA,EAAAC,WAAA,CAAAC,YAAAC,kBAAAA,m4JCStC,MAAAC,GAAAC,EAAA,EAAAP,EAAA,CAAA,IAAAQ,EAAcC,CAAAA,eAAAA,6BAAAA,4BAAAA,kBAAAA,wBAAAA,IAAAA,EAAAA,CAAAA,CAAAA,YAAAA,CAAA,KAAAF,IAAAG,EAAA,CAAA,IAAAH,EAAA,EAAAP,EAAAS,CAAAA,IAAAA,GAAAF,IAAAI,EAAA,CAAA,EAAA,CAAA,IAAA,yCAAAJ,EAAA,EAAAI,EAAAC,CAAAA,EAAAA,CAAAA,IAAAA,0CAAAA,EA8BAH,aAAAA,EAAAA,CAAAA,CAAAA,YAAAA,CAAA,KAAAF,IAAAG,EAAAH,CAAAA,IAAAA,IAAAP,EAAA,CAAA,IAAAS,GAAAF,EAAAI,EAAAA,EAAAE,CAAAA,EAAAA,CAAAA,IAAAA,4BAAAN,EAAA,EAAAI,EAAA,CAAA,EAAA,CAAA,IAAAC,EAAAA,aAAAA,IAAAA,EAAAC,aAAAA,EAAAA,kCAyBrBC,GAAAP,EAAA,EAAAP,EAAA,CAAA,IAAAQ,EAAA,CAAA,yHAAA,kBAAA,IAAA,EAAA,CAAA,CAKAC,YAAAA,CAAA,KAAAF,IAAAG,OAAAH,EAAA,EAAAP,EAAA,CAAA,IAAAS,GAAAF,EAAA,EAAAI,UAAAC,EAAA,aAAA,IAAAL,EAAA,EAAAI,EAAAE,CAAAA,EAAAA,CAAAA,IAAAA,EAAAA,2BAAAA,IAAAA"}
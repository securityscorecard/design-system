{"version":3,"file":"Accordion.stories-C4UB9Cof.js","sources":["../../../src/components/Accordion/Accordion.stories.tsx"],"sourcesContent":["import { useState } from 'react';\nimport type { Meta, StoryObj } from '@storybook/react';\nimport { includes } from 'ramda';\n\nimport { Inline, Stack } from '../layout';\nimport { HexGrade } from '../HexGrade';\nimport Button from '../ButtonV2/Button';\nimport Accordion from './Accordion';\nimport { Text } from '../Text';\nimport { TextSizes } from '../Text/Text.enums';\nimport { Paragraph } from '../Paragraph';\nimport { AccordionItemId } from './Accordion.types';\n\nconst meta = {\n  title: 'components/Accordion',\n  component: Accordion,\n} satisfies Meta<typeof Accordion>;\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nconst items = [\n  { id: 1, title: 'Item 1', content: 'Content', isOpen: true },\n  { id: 2, title: 'Item 2', content: 'Content' },\n];\n\nexport const Playground: Story = {\n  args: {\n    items,\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const DefaultAccordion: Story = {\n  args: Playground.args,\n};\n\nexport const DoesNotCollapseOnOpen: Story = {\n  args: {\n    items: [items[0], { ...items[1], isOpen: true }],\n    isCollapsedOnOpen: false,\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nconst AccordionItemTitle = () => (\n  <Stack gap=\"sm\">\n    <Inline align=\"center\" gap=\"md\">\n      <HexGrade grade=\"A\" size={24} />\n      <Text size={TextSizes.lg}>Company Name</Text>\n    </Inline>\n    <Paragraph>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n      tempor.\n    </Paragraph>\n  </Stack>\n);\nexport const CustomTitleElement: Story = {\n  args: {\n    items: [\n      {\n        id: 0,\n        title: <AccordionItemTitle />,\n        content: 'Content',\n        isOpen: true,\n      },\n    ],\n  },\n};\n\nexport const AcordionWithExternalManagement: Story = {\n  args: {\n    items,\n    isCollapsedOnOpen: false,\n  },\n  render: (args) => {\n    const [openItems, setOpenItems] = useState<AccordionItemId[]>([]);\n    const handleOnClick = (id: AccordionItemId) => {\n      if (!openItems.includes(id)) {\n        const newItems = [id];\n        return setOpenItems(newItems);\n      }\n      return setOpenItems([...openItems]);\n    };\n\n    return (\n      <Inline gap=\"xl\" stretch=\"end\">\n        <Stack gap=\"sm\" justify=\"flex-start\">\n          {args.items.map((item) => (\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                handleOnClick(item.id);\n              }}\n            >\n              {includes(item.id, openItems) && '->'} {item.title.toString()}\n            </Button>\n          ))}\n        </Stack>\n        <Accordion\n          {...args}\n          openItems={openItems}\n          onChange={(ids) => {\n            setOpenItems(ids);\n          }}\n        />\n      </Inline>\n    );\n  },\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const DarkMode: Story = {\n  args: Playground.args,\n  parameters: {\n    themes: {\n      themeOverride: 'Dark',\n    },\n  },\n};\n"],"names":["component","Accordion","Meta","isOpen","id","title","content","Playground","args","items","parameters","skip","screenshot","DefaultAccordion","DoesNotCollapseOnOpen","isCollapsedOnOpen","AccordionItemTitle","jsxs","Inline","jsx","HexGrade","Text","TextSizes","lg","Paragraph","CustomTitleElement","AcordionWithExternalManagement","render","openItems","setOpenItems","useState","handleOnClick","includes","map","item","Button","toString","ids","DarkMode","Story","themes"],"mappings":"qsCAeEA,MAAAA,GAAWC,CACDC,MAAAA,uBACZF,UAAAC,CAEA,EAGgDE,EAAQ,CACtD,CAAAC,GAAA,EAAAC,MAAA,SAAAC,QAAA,UAAAH,OAAA,EAAA,EAAEC,CAAEA,GAAG,EAAAC,MAAA,SAAAC,QAAA,SAAA,CAAA,EACRC,EAAA,CAEDC,KAAaD,CACXC,MAAAA,CACEC,EACFC,WAAC,CACDA,WAAY,CAAAC,KAAA,EAAA,CACVC,CAAcD,EAChBE,EAAA,CACDL,KAAAD,EAAAC,IAED,EAECM,EAAA,CAEDN,KAAaM,CACXN,MAAM,CAAAC,EAAA,CAAA,EAAA,CAAA,GAAAA,EAAA,CAAA,EAAAN,OAAA,EAAA,CAAA,EACJM,kBAAkB,IAAeN,WAAQ,CAAKS,WAAE,CAAAD,KAAA,EAAA,CAChDI,GAGAH,EAAYI,IAAEL,EAAAA,KAAAA,EAAAA,CAAAA,IAAM,KAAK,SAAA,CAAAM,EAAA,KAAAC,EAAA,CAAA,MAAA,SAAA,IAAA,KAC3B,SAAA,CAAAC,EAAA,IAAAC,EAAA,CAAA,MAAA,IAAA,KAAA,GAAA,EACDD,EAAA,IAAAE,EAAA,CAAA,KAAAC,EAAAC,GAAA,SAAA,eAAA,CAAA,EAEKP,EAEFG,EAAAA,IAACK,GAAO,SAGR,iFAAA,CAAA,CAAA,CACJ,CAAA,EAEAC,EAAA,CACAjB,KAAe,CACXC,MACH,CACD,CACQL,GAAA,EACJK,YACEO,EAAA,EAAA,EACIV,QAAG,UACAH,OAAG,EAAA,CACRG,EAIN,EAGWoB,EAAwC,CACnDlB,KAAM,CACJC,MAAAA,EACAM,kBAAmB,EACrB,EACAY,OAAkBnB,GAAA,CAChB,KAAM,CAACoB,EAAWC,CAAY,EAAIC,EAAAA,SAA4B,CAAE,CAAA,EAC1DC,EAAiB3B,GAChBwB,EAAUI,SAAS5B,CAAE,EAInByB,EAAa,CAAC,GAAGD,CAAS,CAAC,EAFzBC,EADU,CAACzB,CAAE,CACQ,EAO5B,OACRa,EAAAA,KAAAC,EAAA,CAAe,SAAOe,QAAS,MAIfF,SAAAA,CAAAA,EAAAA,IAAAA,EAAAA,CAAAA,IAAAA,KAAcG,QAAQ,aACtB1B,SAAAC,EAAAA,MAAAwB,IAAAC,GAEFjB,OAAAkB,EAAA,CACA,QACF,QACG,QAAA,IAAA,CACGJ,EAERG,EAAA9B,EAAA,CAKK4B,EAAAA,SAAAA,CAAAE,EAAAA,EAAA9B,GAAAwB,CAAA,GAAA,KAAA,IAAAM,EAAA7B,MAAA+B,SAAA,CAAA,CAEZ,CAAA,CACD1B,CACEE,CAAAA,QAAcD,EAAWH,CAAAA,GAAAA,EAC3B,UAAAoB,EACD,SAAAS,GAAA,CAEYC,EAAUC,CAAK,CAAA,EACV,CAEdC,CAAAA,CAAAA,CAEA,EACF9B,WAAA,CACDE,WAAA,CAAAD,KAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"zipObj-Di5u6WK6.js","sources":["../../../node_modules/ramda/es/zipObj.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;"],"names":["zipObj","_curry2","keys","values","idx","len","out"],"mappings":"wCAmBG,IAACA,EAEJC,EAAQ,SAAgBC,EAAMC,EAAQ,CAKpC,QAJIC,EAAM,EACNC,EAAM,KAAK,IAAIH,EAAK,OAAQC,EAAO,MAAM,EACzCG,EAAM,CAAA,EAEHF,EAAMC,GACXC,EAAIJ,EAAKE,CAAG,CAAC,EAAID,EAAOC,CAAG,EAC3BA,GAAO,EAGT,OAAOE,CACT,CAAC","x_google_ignoreList":[0]}
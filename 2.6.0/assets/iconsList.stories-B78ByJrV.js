import{j as o}from"./jsx-runtime-Cw0GR0a5.js";import{S as m}from"./index-CMxDd3Da.js";import{g as n}from"./storybook-Crh9kOSz.js";import{G as c}from"./index-DozTNYRt.js";import{T as d}from"./index-uIya-cWM.js";import{I as a}from"./Icon-Cs9KcX0_.js";import{b as l}from"./index-CbknQUej.js";import{s as x}from"./sortBy-CnCs5eJf.js";import{h as f}from"./head-DifzoiNj.js";import{t as g}from"./toPairs-C-xFMvES.js";import{I}from"./Inline.enums-DlaUPeKw.js";import"./index-CTjT7uj6.js";import"./zipObj-Di5u6WK6.js";import"./styled-components.browser.esm-CkXiwQaI.js";import"./index-B0Us5nPq.js";import"./Padbox-Suafv-Ni.js";import"./index-C7IrpltL.js";import"./index-NWhnjyl5.js";import"./prop-CqBAad6K.js";import"./Cluster-CO02VLRh.js";import"./useLogger-XTihx-r2.js";import"./DSProvider-B7ofGRk-.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-DY1VOCqR.js";import"./colors-BJBAFLAc.js";import"./index-BRV0Se7Z.js";const K={title:"Iconography/List",component:a,argTypes:{name:{...n("select",m)}},tags:["autodocs","!dev"]},h=l(g,x(f))(m),r=()=>o.jsx(c,{cols:4,gap:"md",children:h.map(([t,p])=>o.jsxs(I,{align:"center",gap:"md",children:[o.jsx(a,{name:p,hasFixedWidth:!0}),o.jsx(d,{children:t})]},t))});var s,i,e;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:`() => <Grid cols={4} gap="md">
    {sortedIconsList.map(([key, value]) => <Inline key={key} align="center" gap="md">
        <Icon name={value} hasFixedWidth />
        <Text>{key}</Text>
      </Inline>)}
  </Grid>`,...(e=(i=r.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const M=["List"];export{r as List,M as __namedExportsOrder,K as default};
//# sourceMappingURL=iconsList.stories-B78ByJrV.js.map

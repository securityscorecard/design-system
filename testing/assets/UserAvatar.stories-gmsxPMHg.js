import{j as i}from"./jsx-runtime-Cw0GR0a5.js";import{a as C}from"./chunk-454WOBUV-DWuJqIWT.js";import{g as j}from"./storybook-ByffxkSu.js";import{U as m,a as p}from"./UserAvatar-CFD8hnZs.js";import"./Surface-CvF-S7pg.js";import"./Padbox-CsIyVOa3.js";import"./Stack-vWwwEz_d.js";import{I as y}from"./Inline-CNottUT6.js";import"./Cluster-BOKWm1iB.js";import{S as h}from"./space-BY85GhUc.js";import"./DSProvider-eD554_K8.js";import"./theme-DztFT9GZ.js";import"./index-DFvsTZbx.js";import"./index-CTjT7uj6.js";import"./v4-D8aEg3BZ.js";import"./zipObj-C9fmdzRH.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./Button.enums-P6KVfN9D.js";import"./BaseButton-Bl-0NeNF.js";import"./Icon-DSPfH_8v.js";import"./useLogger-CziYgifR.js";import"./require-router-link-EREg1Bbm.js";import"./react-router-dom-BO_MR9e_.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./extends-CF3RwP-h.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-C9Yu1wmA.js";import"./Spinner-b5BYo8Sk.js";import"./prop-Cw0eZkJ_.js";import"./isNotNull-D2Wrs3cn.js";import"./noop-CRTpovv1.js";import"./take-ZeMSspOg.js";import"./trim-6_CYq9V8.js";import"./flex.types-BrkCVx66.js";import"./index-DIVhMF2i.js";import"./colors-DAn332pn.js";const gr={title:"components/UserAvatar",component:m,argTypes:{size:{...j("select",p)}}},n=o=>i.jsx(m,{...o}),r=n.bind({});r.args={label:"AB",size:p.md};r.parameters={screenshot:{skip:!0}};const e=o=>i.jsxs(y,{align:"center",gap:h.lg,children:[i.jsx(m,{...o,size:p.sm}),i.jsx(m,{...o,size:p.md})]});e.args={label:r.args.label};const t=n.bind({});t.args={label:"cdab long text with spaces"};const a=n.bind({});a.args={...r.args,isInverted:!0,onClick:C("onClick")};a.parameters={backgrounds:{default:"primary",values:[{name:"primary",value:"#4d29d4"}]}};const s=n.bind({});s.args={...r.args,onClick:C("onClick")};s.parameters={screenshot:{skip:!0}};e.__docgenInfo={description:"",methods:[],displayName:"DifferentSizes"};var c,l,d;r.parameters={...r.parameters,docs:{...(c=r.parameters)==null?void 0:c.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(d=(l=r.parameters)==null?void 0:l.docs)==null?void 0:d.source}}};var g,u,v;e.parameters={...e.parameters,docs:{...(g=e.parameters)==null?void 0:g.docs,source:{originalSource:`args => <Inline align="center" gap={SpaceSizes.lg}>
    <UserAvatar {...args} size={UserAvatarSizes.sm} />
    <UserAvatar {...args} size={UserAvatarSizes.md} />
  </Inline>`,...(v=(u=e.parameters)==null?void 0:u.docs)==null?void 0:v.source}}};var z,A,S;t.parameters={...t.parameters,docs:{...(z=t.parameters)==null?void 0:z.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(S=(A=t.parameters)==null?void 0:A.docs)==null?void 0:S.source}}};var f,U,x;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(x=(U=a.parameters)==null?void 0:U.docs)==null?void 0:x.source}}};var b,I,k;s.parameters={...s.parameters,docs:{...(b=s.parameters)==null?void 0:b.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(k=(I=s.parameters)==null?void 0:I.docs)==null?void 0:k.source}}};const ur=["Playground","DifferentSizes","NormalizeText","InvertedColors","InteractiveAvatar"];export{e as DifferentSizes,s as InteractiveAvatar,a as InvertedColors,t as NormalizeText,r as Playground,ur as __namedExportsOrder,gr as default};

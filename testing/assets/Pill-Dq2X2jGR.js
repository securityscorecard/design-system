import{j as s}from"./jsx-runtime-Cw0GR0a5.js";import{P as a}from"./index-BRV0Se7Z.js";import{c as E}from"./index-C7IrpltL.js";import{P as k,a as x,b as m}from"./PillRemoveButton-D2CC_PxY.js";import{P as q}from"./PillLabel-yycd7XxX.js";import{i as o,j as C}from"./space-BY85GhUc.js";import{g as L}from"./gt-bFkVvxSK.js";const r=({title:u,label:t,maxLabelLength:i=16,isClickable:p=!1,adornment:f,onClick:l,onRemove:n,className:b,color:v=m.gray,...y})=>{const c=o(l)||p,h=o(n),d=e=>{o(l)&&l(e)},P=e=>{switch(e.key){case" ":case"Enter":d(e);break}},g=e=>{e.stopPropagation(),n(e)},R=e=>{switch(e.key){case" ":case"Enter":e.preventDefault(),n(e);break}},w=c?{onClick:d,onKeyDown:P,tabIndex:0}:{};return s.jsxs(k,{className:E(C,b),color:v,isClickable:c,...w,...y,children:[f,s.jsx(q,{$maxLength:i,title:L(i,0)?u||t:void 0,children:t}),h&&s.jsx(x,{pillLabel:t,onClick:g,onKeyDown:R})]})};r.propTypes={label:a.string.isRequired,color:a.oneOf(Object.values(m)),adornment:a.node,maxLabelLength:a.number,isClickable:a.bool,className:a.string,onClick:a.func,onRemove:a.func};const $=r;r.__docgenInfo={description:"",methods:[],displayName:"Pill",props:{label:{required:!0,tsType:{name:"string"},description:"Pill text",type:{name:"string"}},title:{required:!1,tsType:{name:"string"},description:"Pill title, if not provided it will be the same as the label."},onRemove:{required:!1,tsType:{name:"ReactEventHandler",raw:"React.EventHandler<React.MouseEvent | React.KeyboardEvent>",elements:[{name:"union",raw:"React.MouseEvent | React.KeyboardEvent",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent"},{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent"}]}]},description:`Callback called when remove button is clicked. Remove button is rendered
only when this property is defined.`,type:{name:"func"}},maxLabelLength:{required:!1,tsType:{name:"PillLabelProps['$maxLength']",raw:"PillLabelProps['$maxLength']"},description:"Maximal number of characters to display without truncation. If label is longer\nthat the limit it will be truncated with the ellipsis. Pass `0` to disable truncation.",defaultValue:{value:"16",computed:!1},type:{name:"number"}},adornment:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Element rendered before the label.",type:{name:"node"}},className:{required:!1,tsType:{name:"string"},description:"",type:{name:"string"}},isClickable:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},color:{defaultValue:{value:"'gray'",computed:!1},description:"",type:{name:"enum",value:[{value:'"gray"',computed:!1},{value:'"blue"',computed:!1},{value:'"turquoise"',computed:!1},{value:'"teal"',computed:!1},{value:'"green"',computed:!1},{value:'"yellow"',computed:!1},{value:'"orange"',computed:!1},{value:'"red"',computed:!1},{value:'"pink"',computed:!1},{value:'"purple"',computed:!1},{value:'"brown"',computed:!1}]},required:!1},onClick:{description:"",type:{name:"func"},required:!1}},composes:["Partial"]};export{$ as P};

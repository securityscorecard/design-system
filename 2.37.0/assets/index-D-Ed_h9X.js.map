{"version":3,"file":"index-D-Ed_h9X.js","sources":["../../../src/hooks/useLockBodyScroll.ts","../../../src/components/_internal/BaseOverlay/BaseOverlay.tsx","../../../src/components/_internal/BaseOverlay/index.ts","../../../src/components/FocusTrap/useFocusTrap.ts","../../../src/components/FocusTrap/index.tsx"],"sourcesContent":["import { useLayoutEffect } from 'react';\n\nconst DATA_ATTR = 'sscdsLocked';\n\nconst BodyLock = {\n  lock: () => {\n    document.body.dataset[DATA_ATTR] = 'true';\n  },\n  unlock: () => {\n    // eslint-disable-next-line\n    delete document.body.dataset[DATA_ATTR];\n  },\n  isLocked: () => document.body.dataset[DATA_ATTR] === 'true',\n};\n\n// Inspired by https://usehooks.com/useLockBodyScroll/\nexport const useLockBodyScroll = ({ enabled } = { enabled: true }): void => {\n  useLayoutEffect(() => {\n    const locked = BodyLock.isLocked();\n    if (!locked) {\n      BodyLock.lock();\n      // Check if radix disabled scrolling (e.g. DropdownMenu)\n      const isRadixBlockScroll = document.body.dataset.scrollLocked === '1';\n      // Check if there is overflow in inline style\n      const hasInlineOverflow = document.body.style.overflow !== '';\n      // Get original body overflow\n      const originalStyle = isRadixBlockScroll\n        ? 'hidden auto'\n        : window.getComputedStyle(document.body).overflow;\n      // Prevent scrolling on mount unless disabled (eg. modals or drawers without backdrop)\n      // document.body.style.overflow = enabled ? 'hidden' : 'auto';\n      document.body.style.overflow = 'hidden';\n      // Re-enable scrolling when component unmounts\n      return () => {\n        document.body.style.overflow = hasInlineOverflow ? originalStyle : '';\n        BodyLock.unlock();\n      };\n    }\n    return undefined;\n  }, [enabled]); // Empty array ensures effect is only run on mount and unmount\n};\n","import styled, { css } from 'styled-components';\n\nexport const Overlay = styled.div<{ placement: 'center' | 'right' }>`\n  ${({ placement }) =>\n    css`\n      position: fixed;\n      height: 100%;\n      width: 100%;\n      top: 0;\n      left: 0;\n      background: var(--sscds-color-background-overlay);\n      display: flex;\n      align-items: ${placement === 'center' ? 'center' : 'flex-start'};\n      justify-content: ${placement === 'center' ? 'center' : 'flex-end'};\n      z-index: var(--sscds-depth-modal);\n    `}\n`;\n","export { Overlay } from './BaseOverlay';\n","import { useCallback, useEffect, useRef } from 'react';\n\nexport interface UseFocusTrapOptions {\n  /**\n   * Whether the focus trap is active\n   */\n  isActive: boolean;\n  /**\n   * Whether to restore focus to the previously focused element when deactivating\n   */\n  restoreFocus?: boolean;\n}\n\nexport interface UseFocusTrapReturn {\n  /**\n   * Ref to attach to the focus trap container element\n   */\n  trapRef: React.RefObject<HTMLElement>;\n  /**\n   * Manually activate the focus trap\n   */\n  activate: () => void;\n  /**\n   * Manually deactivate the focus trap\n   */\n  deactivate: () => void;\n  /**\n   * Whether the focus trap is currently active\n   */\n  isActive: boolean;\n}\n\n// Standard selectors for focusable elements\nconst FOCUSABLE_SELECTORS = [\n  'a[href]',\n  'button:not([disabled])',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  '[tabindex]:not([tabindex=\"-1\"])',\n  '[contenteditable]',\n  'audio[controls]',\n  'video[controls]',\n  'summary',\n].join(', ');\n\n/**\n * Custom hook for managing focus trapping in modals, drawers, and other overlay components.\n * Provides an accessible way to constrain keyboard navigation within a specific element.\n *\n * @example\n * ```tsx\n * const MyModal = ({ isOpen, onClose }) => {\n *   const { trapRef, isActive } = useFocusTrap({\n *     isActive: isOpen,\n *     restoreFocus: true,\n *   });\n *\n *   if (!isOpen) return null;\n *\n *   return (\n *     <div ref={trapRef} role=\"dialog\" aria-modal=\"true\">\n *       <h2>Modal Title</h2>\n *       <button onClick={onClose}>Close</button>\n *     </div>\n *   );\n * };\n * ```\n */\nconst useFocusTrap = ({\n  isActive,\n  restoreFocus = true,\n}: UseFocusTrapOptions): UseFocusTrapReturn => {\n  const trapRef = useRef<HTMLElement>(null);\n  const previouslyFocusedElement = useRef<HTMLElement | null>(null);\n  const isActiveRef = useRef(false);\n\n  const getFocusableElements = useCallback((): HTMLElement[] => {\n    if (!trapRef.current) return [];\n\n    const elements = Array.from(\n      trapRef.current.querySelectorAll<HTMLElement>(FOCUSABLE_SELECTORS),\n    );\n\n    // Filter out elements that are not visible or have negative tabindex\n    return elements.filter((element) => {\n      const style = window.getComputedStyle(element);\n      return (\n        style.display !== 'none' &&\n        style.visibility !== 'hidden' &&\n        element.offsetParent !== null &&\n        !element.hasAttribute('disabled') &&\n        element.tabIndex !== -1\n      );\n    });\n  }, []);\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!isActiveRef.current || !trapRef.current) return;\n\n      if (event.key === 'Tab') {\n        const focusableElements = getFocusableElements();\n        if (focusableElements.length === 0) return;\n\n        const firstElement = focusableElements[0];\n        const lastElement = focusableElements[focusableElements.length - 1];\n        const activeElement = document.activeElement as HTMLElement;\n\n        if (event.shiftKey) {\n          // Shift + Tab: going backwards\n          if (activeElement === firstElement) {\n            event.preventDefault();\n            lastElement.focus();\n          }\n          return;\n        }\n\n        // Tab: going forwards\n        if (activeElement === lastElement) {\n          event.preventDefault();\n          firstElement.focus();\n        }\n      }\n    },\n    [getFocusableElements],\n  );\n\n  const handleClickOutside = useCallback((event: MouseEvent) => {\n    const target = event.target as Node;\n\n    // Allow clicks within the ssc-portals element\n    const sscPortalsElement = document.getElementById('ssc-portals');\n    if (sscPortalsElement && sscPortalsElement.contains(target)) {\n      return;\n    }\n\n    if (!trapRef.current.contains(target)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, []);\n\n  const activate = useCallback(() => {\n    if (!trapRef.current || isActiveRef.current) return;\n\n    if (restoreFocus) {\n      previouslyFocusedElement.current = document.activeElement as HTMLElement;\n    }\n\n    isActiveRef.current = true;\n\n    requestAnimationFrame(() => {\n      trapRef.current?.setAttribute('tabindex', '-1');\n      trapRef.current?.focus({ preventScroll: true });\n    });\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('click', handleClickOutside);\n  }, [restoreFocus, handleKeyDown, handleClickOutside]);\n\n  const deactivate = useCallback(() => {\n    if (!isActiveRef.current) return;\n\n    isActiveRef.current = false;\n\n    // Remove event listeners\n    document.removeEventListener('keydown', handleKeyDown);\n    document.removeEventListener('mousedown', handleClickOutside);\n    document.removeEventListener('click', handleClickOutside);\n\n    if (restoreFocus && previouslyFocusedElement.current) {\n      // Use setTimeout to ensure the element is visible/focusable\n      setTimeout(() => {\n        previouslyFocusedElement.current?.focus();\n        previouslyFocusedElement.current = null;\n      }, 0);\n    }\n  }, [restoreFocus, handleKeyDown, handleClickOutside]);\n\n  useEffect(() => {\n    if (isActive) {\n      activate();\n    } else {\n      deactivate();\n    }\n\n    return () => {\n      if (isActiveRef.current) {\n        deactivate();\n      }\n    };\n  }, [isActive, activate, deactivate]);\n\n  return {\n    trapRef,\n    activate,\n    deactivate,\n    isActive: isActiveRef.current,\n  };\n};\n\nexport default useFocusTrap;\n","import React from 'react';\n\nimport type { UseFocusTrapOptions } from './useFocusTrap';\nimport useFocusTrap from './useFocusTrap';\n\nexport interface FocusTrapProps extends Omit<UseFocusTrapOptions, 'isActive'> {\n  /**\n   * Children to render within the focus trap\n   */\n  children: React.ReactNode;\n  /**\n   * Whether the focus trap is active\n   */\n  isActive: boolean;\n  /**\n   * Additional CSS class name for the container\n   */\n  className?: string;\n  /**\n   * Additional props to pass to the container div\n   */\n  containerProps?: React.HTMLAttributes<HTMLDivElement>;\n  /**\n   * Custom element type for the container\n   */\n  as?: keyof JSX.IntrinsicElements;\n}\n\n/**\n * FocusTrap component for constraining keyboard navigation within modals, drawers, and overlays.\n *\n * This component automatically manages focus trapping when active and provides\n * accessible behavior following WCAG guidelines for modal dialogs.\n *\n * @example\n * ```tsx\n * const MyModal = ({ isOpen, onClose }) => {\n *   return (\n *     <FocusTrap\n *       isActive={isOpen}\n *       onDeactivate={onClose}\n *       allowEscapeKey={true}\n *       allowClickOutside={true}\n *       containerProps={{\n *         role: 'dialog',\n *         'aria-modal': 'true',\n *         'aria-labelledby': 'modal-title'\n *       }}\n *     >\n *       <div>\n *         <h2 id=\"modal-title\">Modal Title</h2>\n *         <p>Modal content goes here</p>\n *         <button onClick={onClose}>Close</button>\n *       </div>\n *     </FocusTrap>\n *   );\n * };\n * ```\n */\nconst FocusTrap: React.FunctionComponent<FocusTrapProps> = ({\n  children,\n  isActive,\n  restoreFocus = true,\n  className,\n  containerProps = {},\n  as: Component = 'div',\n}) => {\n  const { trapRef } = useFocusTrap({\n    isActive,\n    restoreFocus,\n  });\n  return React.createElement(\n    Component,\n    {\n      ref: trapRef,\n      className,\n      ...containerProps,\n    },\n    children,\n  );\n};\n\nexport default FocusTrap;\n"],"names":["cov_2nlt77w4xr","path","hash","global","gcv","coverageData","coverage","actualCoverage","BodyLock","body","lock","f","s","dataset","DATA_ATTR","document","unlock","enabled","useLayoutEffect","useLockBodyScroll","b","locked","isLocked","originalStyle","scrollLocked","getComputedStyle","hasInlineOverflow","style","overflow","isRadixBlockScroll","window","Overlay","cov_1bpmzuiimk","styled","div","withConfig","displayName","componentId","placement","css","cov_13219adpcx","event","firstElement","handleClickOutside","sscPortalsElement","join","trapRef","removeEventListener","restoreFocus","cov_ejfsvn48e","previouslyFocusedElement","focus","useRef","handleKeyDown","useEffect","current","elements","Array","from","querySelectorAll","FOCUSABLE_SELECTORS","element","display","activate","offsetParent","isActive","useFocusTrap","cov_1ftjw78lyy"],"mappings":"sHAiBwB,SAAAA,GAAA,CAAA,IAAAC,EAAA,+EAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,+EAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA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"}
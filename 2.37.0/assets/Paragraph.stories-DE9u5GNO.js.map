{"version":3,"file":"Paragraph.stories-DE9u5GNO.js","sources":["../../../src/components/Paragraph/Paragraph.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport { TextSizes, TextVariants } from '../Text/Text.enums';\nimport Paragraph from './Paragraph';\n\nconst lipsum = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pharetra\nmagna lectus, a congue ex blandit vel. Donec id mi commodo eros porta tempus. Vivamus et elit ut\nleo tincidunt vehicula non a dolor. Suspendisse placerat turpis nisl, quis gravida sem semper et.`;\n\nconst meta = {\n  title: 'typography/Paragraph',\n  component: Paragraph,\n  argTypes: {\n    children: {\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    size: {\n      control: { type: 'select' },\n      options: Object.values(TextSizes),\n      table: {\n        type: {\n          summary: Object.keys(TextSizes)\n            .map((size) => `\"${size}\"`)\n            .join('|'),\n        },\n        defaultValue: {\n          summary: `\"${TextSizes.lg}\"`,\n        },\n      },\n    },\n    variant: {\n      control: { type: 'select' },\n      options: Object.values(TextVariants),\n      table: {\n        type: {\n          summary: Object.keys(TextVariants)\n            .map((variant) => `\"${variant}\"`)\n            .join('|'),\n        },\n        defaultValue: {\n          summary: `\"${TextVariants.default}\"`,\n        },\n      },\n    },\n  },\n  args: {\n    children: lipsum,\n  },\n} satisfies Meta<typeof Paragraph>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Playground: Story = {\n  parameters: {\n    screenshot: { skip: true },\n  },\n};\n\nexport const SmallParagraph = { args: { size: 'sm' } };\nexport const MediumParagraph = { args: { size: 'md' } };\nexport const LargeParagraph = { args: { size: 'lg' } };\n\nexport const DefaultParagraph = { args: { variant: 'default' } };\nexport const MonospaceParagraph = { args: { variant: 'monospace' } };\nexport const SubtleParagraph = { args: { variant: 'subtle' } };\nexport const DangerParagraph = { args: { variant: 'danger' } };\n"],"names":["lipsum","argTypes","children","control","Paragraph","type","table","summary","size","Object","values","TextSizes","options","keys","map","join","defaultValue","lg","variant","TextVariants","default","args","Playground","screenshot","skip","SmallParagraph","MediumParagraph","LargeParagraph","DefaultParagraph","SubtleParagraph","DangerParagraph","parameters","docs","source","originalSource","MonospaceParagraph"],"mappings":"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"}
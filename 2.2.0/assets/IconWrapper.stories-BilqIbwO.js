import{j as s}from"./jsx-runtime-Cw0GR0a5.js";import{I as e}from"./IconWrapper-Dc6LNhzf.js";import"./Surface-DpLLkhSd.js";import"./Padbox-DKEfmyAv.js";import"./Stack-D3Wl5zWT.js";import{I as n}from"./Inline-BUcOfxrg.js";import"./Cluster-DAeUfwZi.js";import{S as v}from"./Icon-4JNizDXH.js";import{g as z}from"./storybook-BpZQCxPY.js";import"./index-CTjT7uj6.js";import"./space-1LtLrmuu.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./flex.types-BrkCVx66.js";import"./useLogger-Cd66DVRc.js";import"./DSProvider-IYcK3cWD.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-Cr_I21Pv.js";import"./colors-CyEChGtp.js";import"./prop-DG2n0FAQ.js";import"./index-DFvsTZbx.js";import"./zipObj-DVsQulIT.js";const J={title:"components/IconWrapper",component:e,argTypes:{name:{...z("select",v)}}},a=r=>s.jsx(e,{...r});a.args={name:"cog"};a.parameters={screenshot:{skip:!0}};const p=r=>s.jsxs(n,{gap:"md",children:[s.jsx(e,{...r,size:"xs",type:"ssc"}),s.jsx(e,{...r,size:"sm",type:"ssc"}),s.jsx(e,{...r,size:"md",type:"ssc"}),s.jsx(e,{...r,size:"lg",type:"ssc"}),s.jsx(e,{...r,size:"xl",type:"ssc"})]});p.args=a.args;const t=r=>s.jsxs(n,{gap:"md",children:[s.jsx(e,{...r,variant:"default"}),s.jsx(e,{...r,variant:"subtle"}),s.jsx(e,{...r,variant:"strong"})]});t.args={...a.args,size:"xl",type:"ssc"};const o=r=>s.jsxs(n,{gap:"md",children:[s.jsx(e,{...r,variant:"default"}),s.jsx(e,{...r,variant:"subtle"}),s.jsx(e,{...r,variant:"strong"})]});o.args=t.args;o.parameters={themes:{themeOverride:"Dark"}};var i,c,m;a.parameters={...a.parameters,docs:{...(i=a.parameters)==null?void 0:i.docs,source:{originalSource:"args => <IconWrapper {...args} />",...(m=(c=a.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};var g,d,l;p.parameters={...p.parameters,docs:{...(g=p.parameters)==null?void 0:g.docs,source:{originalSource:`args => <Inline gap="md">
    <IconWrapper {...args} size="xs" type="ssc" />
    <IconWrapper {...args} size="sm" type="ssc" />
    <IconWrapper {...args} size="md" type="ssc" />
    <IconWrapper {...args} size="lg" type="ssc" />
    <IconWrapper {...args} size="xl" type="ssc" />
  </Inline>`,...(l=(d=p.parameters)==null?void 0:d.docs)==null?void 0:l.source}}};var u,I,x;t.parameters={...t.parameters,docs:{...(u=t.parameters)==null?void 0:u.docs,source:{originalSource:`args => <Inline gap="md">
    <IconWrapper {...args} variant="default" />
    <IconWrapper {...args} variant="subtle" />
    <IconWrapper {...args} variant="strong" />
  </Inline>`,...(x=(I=t.parameters)==null?void 0:I.docs)==null?void 0:x.source}}};var j,W,y;o.parameters={...o.parameters,docs:{...(j=o.parameters)==null?void 0:j.docs,source:{originalSource:`args => <Inline gap="md">
    <IconWrapper {...args} variant="default" />
    <IconWrapper {...args} variant="subtle" />
    <IconWrapper {...args} variant="strong" />
  </Inline>`,...(y=(W=o.parameters)==null?void 0:W.docs)==null?void 0:y.source}}};const K=["Playground","Sizes","Variants","DarkMode"];export{o as DarkMode,a as Playground,p as Sizes,t as Variants,K as __namedExportsOrder,J as default};

import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{r as c,R as A}from"./index-CTjT7uj6.js";import{i as u,s as p,k as B,g,S as d,p as j,B as E,h as k,j as G}from"./space-1LtLrmuu.js";import{P as e}from"./index-BRV0Se7Z.js";import{c as J}from"./index-C7IrpltL.js";import{I as Q}from"./Input-CflEDIf9.js";import{I as V,S as x,a as N}from"./Icon-4JNizDXH.js";import"./DSProvider-IYcK3cWD.js";import"./DSThemeOverride-BduN1ykm.js";import"./index-DFvsTZbx.js";import"./theme-Cr_I21Pv.js";import{S as Y}from"./Spinner-CJrCb2wC.js";import{i as Z}from"./isNonEmptyString-zJHoJ8N4.js";import{i as ee}from"./isNotNilOrEmpty-cGK6as13.js";const ae=(t,o,h)=>{const i=u(t),s=u(o),[a,m]=c.useState(s?o:"");return{value:i?t:a,onChange:f=>{h&&h(f),i||m(f.target.value)},isControlled:i,clearValue:()=>m("")}},te=p.div.withConfig({displayName:"SearchBar__SearchBarRoot",componentId:"sc-cl9trn-0"})(["position:relative;"]),q=p.div.withConfig({displayName:"SearchBar__IconWrapper",componentId:"sc-cl9trn-1"})(["position:absolute;top:0;display:flex;align-items:center;color:",";"],B("neutral.800")),ne=p(q).withConfig({displayName:"SearchBar__SearchIconWrapper",componentId:"sc-cl9trn-2"})(["left:0;padding:",";height:",";"],g(d.md),j(E("fieldHeight"),k)),re=p(q).withConfig({displayName:"SearchBar__ClearButton",componentId:"sc-cl9trn-3"})(["right:",";height:",";background:none;border:none;border-radius:0;cursor:pointer;&:hover,&:focus{::after{content:'';position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:24px;height:24px;border-radius:100%;background-color:",";z-index:-1;}}"],g(d.md),j(E("fieldHeight"),k),B("error.500")),oe=p(Q).withConfig({displayName:"SearchBar__SearchInput",componentId:"sc-cl9trn-4"})(["padding-left:",";padding-right:",";"],g(d.lgPlus),({$isClearable:t,theme:o})=>g(t?d.lgPlus:d.md,{theme:o})),y=A.forwardRef(({value:t,defaultValue:o,onChange:h,onKeyUp:i,onClear:s,onSearch:a,hasDebouncedSearch:m=!1,debounceTime:C=500,placeholder:I="Search",isDisabled:f=!1,isInvalid:b=!1,isSearching:D=!1,shouldTriggerSearchOnMount:O=!1,className:R,...W},M)=>{const{value:l,onChange:P,isControlled:S,clearValue:U}=ae(t,o,h),[z,w]=c.useState(!1),F=a===void 0?D:z,[T,H]=c.useState(0),_=Z(l)&&(!S||S&&u(s)),K=()=>{s&&s(),S||U()},v=c.useCallback(async n=>{b||(w(!0),await(a==null?void 0:a(n)),w(!1))},[b,a]);c.useEffect(()=>{O&&ee(l)&&v(l)},[]);const $=n=>{const X=n.target.value;m&&(T&&window.clearTimeout(T),H(window.setTimeout(()=>{v(X)},C))),P(n)},L=n=>{u(i)&&i(n),n.key==="Enter"&&u(a)&&v(l)};return r.jsxs(te,{className:J(G,R),children:[r.jsx(oe,{...W,ref:M,$isClearable:_,isDisabled:f,isInvalid:b,placeholder:I,type:"search",value:l,onChange:$,onKeyUp:L}),r.jsx(ne,{children:F?r.jsx(Y,{borderWidth:2,height:16,verticalMargin:0,width:16,dark:!0}):r.jsx(V,{name:x.search,type:N.ssc})}),_&&r.jsx(re,{"aria-label":"Clear search value",as:"button",onClick:K,children:r.jsx(V,{name:x.times,type:N.ssc})})]})});y.propTypes={value:e.string,defaultValue:e.string,hasDebouncedSearch:e.bool,debounceTime:e.number,isDisabled:e.bool,isInvalid:e.bool,isSearching:e.bool,shouldTriggerSearchOnMount:e.bool,placeholder:e.string,className:e.string,onChange:e.func,onClear:e.func,onSearch:e.func,onKeyUp:e.func};const Ce=y;try{y.displayName="SearchBar",y.__docgenInfo={description:"",displayName:"SearchBar",props:{onSearch:{defaultValue:null,description:"Event triggered by `Enter` key that calls function with current input\nvalue as first argument. If `hasDebouncedSearch` is set to `true` this\nfunction is called automatically when debounce time is reached.\n\nThis function is not cancellable, if you need to cancel your search\nrequest you should implement search outside this component and not\nuse `onSearch` property.",name:"onSearch",required:!1,type:{name:"(value: string) => void | Promise<void>"}},onClear:{defaultValue:null,description:"Event triggered by clicking clear button. For controlled component\nshould reset the `value` property. For uncontrolled component\nclear is handled automatically but `onClear` is also triggered.",name:"onClear",required:!1,type:{name:"() => void"}},isDisabled:{defaultValue:{value:"false"},description:"Disable the search field",name:"isDisabled",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:{value:"false"},description:"The search value is invalid",name:"isInvalid",required:!1,type:{name:"boolean"}},hasDebouncedSearch:{defaultValue:{value:"false"},description:"If true search is triggered automatically by onChange event.",name:"hasDebouncedSearch",required:!1,type:{name:"boolean"}},debounceTime:{defaultValue:{value:"500"},description:"Time used to debounce search, in milliseconds",name:"debounceTime",required:!1,type:{name:"number"}},isSearching:{defaultValue:null,description:"Show loader when `true`. If `onSearch` is defined, this property is used\ninternally. If you implement search outside this component you may want\nto use this property to indicate that search is in progress.",name:"isSearching",required:!1,type:{name:"boolean"}},shouldTriggerSearchOnMount:{defaultValue:{value:"false"},description:"When true search will be triggered on mount when defaultValue is provided",name:"shouldTriggerSearchOnMount",required:!1,type:{name:"boolean"}}}}}catch{}export{Ce as S};

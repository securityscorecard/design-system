import{j as n}from"./jsx-runtime-Cw0GR0a5.js";import{r as S}from"./index-CTjT7uj6.js";import{D as a}from"./Datatable-Rvbe6Dwv.js";import{T as t}from"./Template-CP6s3hoX.js";import"./useLogger-Cd66DVRc.js";import"./space-1LtLrmuu.js";import"./DSProvider-IYcK3cWD.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-Cr_I21Pv.js";import"./colors-CyEChGtp.js";import"./menuElements-CDUISt4p.js";import"./Icon-4JNizDXH.js";import"./index-DFvsTZbx.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./tslib.es6-BLYux4pC.js";import"./Surface-DpLLkhSd.js";import"./flex.types-BrkCVx66.js";import"./prop-DG2n0FAQ.js";import"./Padbox-DKEfmyAv.js";import"./Stack-D3Wl5zWT.js";import"./Inline-BUcOfxrg.js";import"./Cluster-DAeUfwZi.js";import"./Text-DTP2ysh1.js";import"./DSThemeOverride-BduN1ykm.js";import"./useLocalStorageState-CgPcEN2x.js";import"./useContainerQuery-DwI_GXhF.js";import"./Button-vDRI25at.js";import"./BaseButton-D1TUSAxp.js";import"./require-router-link-DHB4GfDh.js";import"./react-router-dom-Dge5SpE2.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-C9Yu1wmA.js";import"./Spinner-CJrCb2wC.js";import"./isNotNull-B1xFkUZ3.js";import"./noop-CLoMDX4X.js";import"./Paragraph-4LRW5eCl.js";import"./Skeleton-Mij27U1S.js";import"./Tooltip-D-FMcIGF.js";import"./FloatingContext-C7r7lnEb.js";import"./CloseButton-Ddazfl7Y.js";import"./sortable.esm-CWiKwvcN.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./Pill-3kaa-68-.js";import"./PillRemoveButton-CS7bxu8m.js";import"./PillLabel-CLRUhFaA.js";import"./gt-mgGmHlKl.js";const St={title:"components/DatatableV2/ColumnSettingsPanel",component:a,parameters:{screenshot:{skip:!0}}},d=t.bind({});d.args=t.args;const C=t.bind({});C.args={...t.args,enableHiding:!1,enableColumnPinning:!1};const m=t.bind({});m.args={...t.args,enableHiding:!1,initialState:{showColumnSettings:!0}};m.parameters={screenshot:{skip:!1}};const l=t.bind({});l.args={...t.args,enableColumnPinning:!1,initialState:{showColumnSettings:!0}};l.parameters={screenshot:{skip:!1}};const p=t.bind({});p.args={...t.args,initialState:{showColumnSettings:!0}};p.parameters={screenshot:{skip:!1}};const e=g=>{const[i,u]=S.useState(!0);return n.jsxs(n.Fragment,{children:[n.jsx(a,{state:{showColumnSettings:i},onShowColumnSettings:u,...g}),n.jsxs("div",{children:[n.jsx("strong",{children:"Debug:"}),n.jsx("pre",{children:JSON.stringify(i,null,2)})]})]})};e.args=t.args;var o,s,r;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`args => {
  const [showColumnSettings, setShowColumnSettings] = useState<boolean>(true);
  return <>
      <Datatable state={{
      showColumnSettings
    }} onShowColumnSettings={setShowColumnSettings} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(showColumnSettings, null, 2)}</pre>
      </div>
    </>;
}`,...(r=(s=e.parameters)==null?void 0:s.docs)==null?void 0:r.source}}};const dt=["ColumnSettingsPanelEnabled","DisabledColumnSettingsPanel","DisabledColumnHidingInSettingsPanel","DisabledColumnPinningInSettingsPanel","InitialColumnSettingsPanel","ColumnSettingsPanelManagedState"];export{d as ColumnSettingsPanelEnabled,e as ColumnSettingsPanelManagedState,m as DisabledColumnHidingInSettingsPanel,l as DisabledColumnPinningInSettingsPanel,C as DisabledColumnSettingsPanel,p as InitialColumnSettingsPanel,dt as __namedExportsOrder,St as default};

import{s,C as u,g as r,i as o,S as i}from"./space-1LtLrmuu.js";import{P as l}from"./index-BRV0Se7Z.js";import{c as d}from"./index-C7IrpltL.js";import{A as m}from"./flex.types-BrkCVx66.js";import{p as t}from"./prop-DG2n0FAQ.js";const a=s.div.attrs(e=>({...e,className:d(u,e==null?void 0:e.className)})).withConfig({displayName:"Stack",componentId:"sc-1m2fhx8-0"})(["display:flex;flex-direction:column;flex-wrap:nowrap;align-items:",";justify-content:",";"," *{margin-top:0;margin-bottom:0;}"," * + *{margin-top:",";}",""],t("justify"),t("align"),({isRecursive:e})=>e?"&&":"&& >",({isRecursive:e})=>e?"&&":"&& >",({gap:e,theme:n})=>r(e,{theme:n}),({splitAt:e})=>o(e)&&`
    :only-child {
      height: 100%;
    }

    > :nth-child(${e}) {
      margin-bottom: auto;
    }
  `);a.propTypes={gap:l.oneOf(Object.values(i)),justify:m,splitAt:l.number,isRecursive:l.bool,className:l.string};a.defaultProps={gap:i.none,justify:"stretch",isRecursive:!1};const g=a;try{a.displayName="Stack",a.__docgenInfo={description:"",displayName:"Stack",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},align:{defaultValue:null,description:"Vertical alignment of elements inside Stack",name:"align",required:!1,type:{name:"JustifyContent"}},justify:{defaultValue:{value:"stretch"},description:"Horizontal alignment of elements inside Stack",name:"justify",required:!1,type:{name:"AlignItems"}},gap:{defaultValue:{value:"none"},description:"Whitespace between each child of the Stack",name:"gap",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"xxs"'},{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"mdPlus"'},{value:'"lg"'},{value:'"lgPlus"'},{value:'"xl"'},{value:'"xlPlus"'},{value:'"xxl"'},{value:'"half-x"'},{value:'"1x"'},{value:'"2x"'},{value:'"3x"'},{value:'"4x"'},{value:'"6x"'},{value:'"8x"'},{value:'"12x"'},{value:'"16x"'},{value:'"24x"'},{value:'"32x"'}]}},isRecursive:{defaultValue:{value:"false"},description:"Should apply gap recursively (on nested levels)",name:"isRecursive",required:!1,type:{name:"boolean"}},splitAt:{defaultValue:null,description:"Index of element after which the Stack is splitted. Leave 'undefined' for no splitting.",name:"splitAt",required:!1,type:{name:"number"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}}}catch{}export{g as S};

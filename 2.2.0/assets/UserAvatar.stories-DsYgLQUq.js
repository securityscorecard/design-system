import{j as i}from"./jsx-runtime-Cw0GR0a5.js";import{a as C}from"./chunk-454WOBUV-DWuJqIWT.js";import{g as j}from"./storybook-BpZQCxPY.js";import{U as m,a as p}from"./UserAvatar-sX45q4B0.js";import"./Surface-DpLLkhSd.js";import"./Padbox-DKEfmyAv.js";import"./Stack-D3Wl5zWT.js";import{I as y}from"./Inline-BUcOfxrg.js";import"./Cluster-DAeUfwZi.js";import{S as h}from"./space-1LtLrmuu.js";import"./DSProvider-IYcK3cWD.js";import"./DSThemeOverride-BduN1ykm.js";import"./index-DFvsTZbx.js";import"./theme-Cr_I21Pv.js";import"./index-CTjT7uj6.js";import"./v4-D8aEg3BZ.js";import"./zipObj-DVsQulIT.js";import"./index-BRV0Se7Z.js";import"./index-C7IrpltL.js";import"./Button.enums-DxFt5drl.js";import"./BaseButton-D1TUSAxp.js";import"./Icon-4JNizDXH.js";import"./useLogger-Cd66DVRc.js";import"./require-router-link-DHB4GfDh.js";import"./react-router-dom-Dge5SpE2.js";import"./inheritsLoose-B6jfs0L0.js";import"./setPrototypeOf-DgZC2w_0.js";import"./extends-CF3RwP-h.js";import"./tiny-invariant-CopsF_GD.js";import"./spacing.types-C9Yu1wmA.js";import"./Spinner-CJrCb2wC.js";import"./prop-DG2n0FAQ.js";import"./isNotNull-B1xFkUZ3.js";import"./noop-CLoMDX4X.js";import"./Text-DTP2ysh1.js";import"./take-Kg9EtPoO.js";import"./trim-C2DDSsAv.js";import"./flex.types-BrkCVx66.js";import"./index-DIVhMF2i.js";import"./colors-CyEChGtp.js";const vr={title:"components/UserAvatar",component:m,argTypes:{size:{...j("select",p)}}},c=o=>i.jsx(m,{...o}),r=c.bind({});r.args={label:"AB",size:p.md};r.parameters={screenshot:{skip:!0}};const s=o=>i.jsxs(y,{align:"center",gap:h.lg,children:[i.jsx(m,{...o,size:p.sm}),i.jsx(m,{...o,size:p.md})]});s.args={label:r.args.label};const t=c.bind({});t.args={label:"cdab long text with spaces"};const e=c.bind({});e.args={...r.args,isInverted:!0,onClick:C("onClick")};e.parameters={backgrounds:{default:"primary",values:[{name:"primary",value:"#4d29d4"}]}};const a=c.bind({});a.args={...r.args,onClick:C("onClick")};a.parameters={screenshot:{skip:!0}};var n,l,d;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(d=(l=r.parameters)==null?void 0:l.docs)==null?void 0:d.source}}};var g,u,v;s.parameters={...s.parameters,docs:{...(g=s.parameters)==null?void 0:g.docs,source:{originalSource:`args => <Inline align="center" gap={SpaceSizes.lg}>
    <UserAvatar {...args} size={UserAvatarSizes.sm} />
    <UserAvatar {...args} size={UserAvatarSizes.md} />
  </Inline>`,...(v=(u=s.parameters)==null?void 0:u.docs)==null?void 0:v.source}}};var A,z,S;t.parameters={...t.parameters,docs:{...(A=t.parameters)==null?void 0:A.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(S=(z=t.parameters)==null?void 0:z.docs)==null?void 0:S.source}}};var U,f,x;e.parameters={...e.parameters,docs:{...(U=e.parameters)==null?void 0:U.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(x=(f=e.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};var b,I,k;a.parameters={...a.parameters,docs:{...(b=a.parameters)==null?void 0:b.docs,source:{originalSource:"args => <UserAvatar {...args} />",...(k=(I=a.parameters)==null?void 0:I.docs)==null?void 0:k.source}}};const Ar=["Playground","DifferentSizes","NormalizeText","InvertedColors","InteractiveAvatar"];export{s as DifferentSizes,a as InteractiveAvatar,e as InvertedColors,t as NormalizeText,r as Playground,Ar as __namedExportsOrder,vr as default};

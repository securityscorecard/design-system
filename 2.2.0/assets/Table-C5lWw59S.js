import{j as a}from"./jsx-runtime-Cw0GR0a5.js";import{r as n}from"./index-CTjT7uj6.js";import{P as e}from"./index-BRV0Se7Z.js";import{s as x,k as d,q as E,i as z,f as L,j as A,S as M}from"./space-1LtLrmuu.js";import{r as i,L as O}from"./index-BEgBEHMz.js";import{g as F,H,B as W,N as G,R as K}from"./BaseTable.types-Bwas8yEY.js";import{B as U,a as X,S as J,C as Q}from"./BaseTable.styles-vsfZhh3j.js";import{F as Y}from"./Footer-BBoJAj4g.js";import"./DSProvider-IYcK3cWD.js";import"./DSThemeOverride-BduN1ykm.js";import"./index-DFvsTZbx.js";import"./theme-Cr_I21Pv.js";import"./Surface-DpLLkhSd.js";import{P as Z}from"./Padbox-DKEfmyAv.js";import"./Stack-D3Wl5zWT.js";import"./Inline-BUcOfxrg.js";import"./Cluster-DAeUfwZi.js";import{s as $}from"./F-DymNqVSm.js";import{p as ee}from"./prop-DG2n0FAQ.js";import{i as ae}from"./isNonEmptyArray-CGykYah7.js";import{n as C}from"./noop-CLoMDX4X.js";const te=()=>{const t=n.useRef(!0);return n.useEffect(()=>{t.current=!1},[]),t.current},oe=x(Z).withConfig({displayName:"Table__NoDataContainer",componentId:"sc-1pe98fy-0"})(["background:",";"],d("neutral.0")),ne=x.div.withConfig({displayName:"Table__TableWrapper",componentId:"sc-1pe98fy-1"})(["border:1px solid ",";border-top-width:0;background:",";border-radius:",";"],d("neutral.300"),d("neutral.0"),E("default")),re=t=>a.jsx(Q,{...t});function s({columns:t,data:P,dataSize:l,NoDataComponent:T=G,hasPagination:S=!0,defaultPageSize:u=20,hasSorting:w=!0,defaultSortBy:N=[],defaultPageIndex:R=0,isDataLoading:p=!1,onPageChange:m=C,onSortChange:c=C,rowActions:f=[],dataPrimaryKey:r}){const v=n.useMemo(()=>({minWidth:40,width:150,maxWidth:400,nullCondition:$,Cell:o=>re(o),cellType:"text"}),[]),{getTableProps:q,getTableBodyProps:B,gotoPage:g,headerGroups:D,page:j,prepareRow:V,pageCount:b,state:{pageIndex:I,sortBy:y}}=i.useTable({columns:t,data:P,defaultColumn:v,initialState:{pageSize:u,pageIndex:R,sortBy:N},pageCount:Math.ceil(l/u),autoResetPage:!1,disableSortBy:!w,autoResetSortBy:!1,manualPagination:!1,...z(r)&&{getRowId:L(r)?ee(r):r},rowActions:f},i.useSortBy,i.usePagination,i.useFlexLayout,o=>{o.visibleColumns.push(k=>[...k,...ae(f)?[F()]:[]])}),h=te();n.useEffect(()=>{h||c(y)},[y,h,c]);const _=n.useCallback(o=>{m(o+1),g(o)},[m,g]);return a.jsxs(ne,{className:A,children:[a.jsx(U,{children:a.jsx(X,{tabIndex:0,children:a.jsxs(J,{...q(),children:[a.jsx(H,{headerGroups:D}),a.jsx(W,{prepareRow:V,rows:j,...B()})]})})}),l===0?a.jsx(oe,{paddingSize:M.xl,children:p?a.jsx(O,{}):a.jsx(T,{})}):b!==1?a.jsx(Y,{hasPagination:S&&l>0,isDataLoading:p,pageCount:b,pageIndex:I,onGotoPage:_}):null]})}s.propTypes={NoDataComponent:e.elementType,hasPagination:e.bool,defaultPageSize:e.number,hasSorting:e.bool,defaultPageIndex:e.number,defaultSortBy:e.arrayOf(e.shape({id:e.string.isRequired,desc:e.bool})),rowActions:e.arrayOf(K),dataPrimaryKey:e.oneOfType([e.string,e.func]),onPageChange:e.func,onSortChange:e.func};s.displayName="Table";try{s.displayName="Table",s.__docgenInfo={description:"",displayName:"Table",props:{isDataLoading:{defaultValue:{value:"false"},description:"Flag to determine wheter data is currently loading",name:"isDataLoading",required:!1,type:{name:"boolean"}},hasPagination:{defaultValue:{value:"true"},description:"Enables pagination for the table",name:"hasPagination",required:!1,type:{name:"boolean"}},defaultPageSize:{defaultValue:{value:"20"},description:"Number of row displayed per page",name:"defaultPageSize",required:!1,type:{name:"number"}},defaultPageIndex:{defaultValue:{value:"0"},description:"Initial page index (zero-based)",name:"defaultPageIndex",required:!1,type:{name:"number"}},hasSorting:{defaultValue:{value:"true"},description:"Enables columns sorting",name:"hasSorting",required:!1,type:{name:"boolean"}},defaultSortBy:{defaultValue:{value:"[]"},description:"Initial sorting state",name:"defaultSortBy",required:!1,type:{name:"SortingRule<D>[]"}},NoDataComponent:{defaultValue:{value:`() => (
  <>
    <H4 margin={{ top: 0, bottom: 0.8 }}>No data available</H4>
    <Paragraph margin={{ bottom: 0.8 }} size={TextSizes.md}>
      There are no records in this database.
    </Paragraph>
  </>
)`},description:"Component rendered when table have no data",name:"NoDataComponent",required:!1,type:{name:"ReactComponentLike"}},onPageChange:{defaultValue:null,description:"Callback called when pagination is clicked",name:"onPageChange",required:!1,type:{name:"(page: number) => void"}},onSortChange:{defaultValue:null,description:"Callback called when sorting is clicked",name:"onSortChange",required:!1,type:{name:"(sort: SortingRule<D>[]) => void"}},dataPrimaryKey:{defaultValue:null,description:`Name of column used as table primary key or function to retrieve the key

Return value is used as id for selected rows`,name:"dataPrimaryKey",required:!1,type:{name:"PrimaryKey<D>"}},rowActions:{defaultValue:{value:"[]"},description:"List of actions available on single table row, shows last column with actions dropdown",name:"rowActions",required:!1,type:{name:"RowAction<D>[]"}},data:{defaultValue:null,description:"Table data you want to display",name:"data",required:!0,type:{name:"D[]"}},columns:{defaultValue:null,description:`Settings for each table column.

Extends: https://react-table.tanstack.com/docs/api/useTable#column-options`,name:"columns",required:!0,type:{name:"Column<D>[]"}},dataSize:{defaultValue:null,description:"Total size of data",name:"dataSize",required:!0,type:{name:"number"}}}}}catch{}export{s as T};

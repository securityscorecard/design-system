import{j as s}from"./jsx-runtime-Cw0GR0a5.js";import{P as l}from"./index-BRV0Se7Z.js";import{c as E}from"./index-C7IrpltL.js";import{P as C,a as x,b as m}from"./PillRemoveButton-CS7bxu8m.js";import{P as q}from"./PillLabel-CLRUhFaA.js";import{i as o,j as N}from"./space-1LtLrmuu.js";import{g as V}from"./gt-mgGmHlKl.js";const t=({title:r,label:n,maxLabelLength:c=16,isClickable:p=!1,adornment:f,onClick:a,onRemove:i,className:h,color:b=m.gray,...y})=>{const d=o(a)||p,v=o(i),u=e=>{o(a)&&a(e)},g=e=>{switch(e.key){case" ":case"Enter":u(e);break}},k=e=>{e.stopPropagation(),i(e)},P=e=>{switch(e.key){case" ":case"Enter":e.preventDefault(),i(e);break}},w=d?{onClick:u,onKeyDown:g,tabIndex:0}:{};return s.jsxs(C,{className:E(N,h),color:b,isClickable:d,...w,...y,children:[f,s.jsx(q,{$maxLength:c,title:V(c,0)?r||n:void 0,children:n}),v&&s.jsx(x,{pillLabel:n,onClick:k,onKeyDown:P})]})};t.propTypes={label:l.string.isRequired,color:l.oneOf(Object.values(m)),adornment:l.node,maxLabelLength:l.number,isClickable:l.bool,className:l.string,onClick:l.func,onRemove:l.func};const D=t;try{t.displayName="Pill",t.__docgenInfo={description:"",displayName:"Pill",props:{label:{defaultValue:null,description:"Pill text",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"Pill title, if not provided it will be the same as the label.",name:"title",required:!1,type:{name:"string"}},onRemove:{defaultValue:null,description:`Callback called when remove button is clicked. Remove button is rendered
only when this property is defined.`,name:"onRemove",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},maxLabelLength:{defaultValue:{value:"16"},description:"Maximal number of characters to display without truncation. If label is longer\nthat the limit it will be truncated with the ellipsis. Pass `0` to disable truncation.",name:"maxLabelLength",required:!1,type:{name:"number"}},adornment:{defaultValue:null,description:"Element rendered before the label.",name:"adornment",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isClickable:{defaultValue:{value:"false"},description:"Flag that enabled hover functionality on the pill. This should be used only when\npassing custom element (e.g. `a` tag) throught the `as` property without passing\n`onClick` property.",name:"isClickable",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Callback called when the pill is clicked. Hover functionality is enabled when this\nproperty is passed in, this can be overriden by `isClickable` property when using\ncustom element such as `a` tag without `onClick` property.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},color:{defaultValue:{value:"gray"},description:"",name:"color",required:!1,type:{name:"string"}}}}}catch{}export{D as P};

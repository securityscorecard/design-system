{"version":3,"file":"TrendIcon-Dvfe0A3K.js","sources":["../../../src/components/_internal/BaseTrends/common.ts","../../../src/components/TrendIcon/TrendIcon.tsx"],"sourcesContent":["import { Color } from '../../../theme';\n\nexport type Trend = 'positive' | 'negative' | 'stable';\n\nexport const IconBackgroundColor: Record<Trend, Color> = {\n  positive: 'success.100',\n  negative: 'error.100',\n  stable: 'neutral.200',\n};\n\nexport const FontColor: Record<Trend, Color> = {\n  positive: 'success.900',\n  negative: 'error.900',\n  stable: 'neutral.800',\n};\n","import { forwardRef } from 'react';\nimport styled from 'styled-components';\n\nimport { Icon } from '../Icon';\nimport { Padbox } from '../layout';\nimport { getColor, getRadii, pxToRem } from '../../utils';\nimport { RequireAtLeastOne } from '../../types/utils.types';\nimport {\n  FontColor,\n  IconBackgroundColor,\n  Trend,\n} from '../_internal/BaseTrends/common';\n\ntype TrendIconProps = {\n  /**\n   * @deprecated use \"trend\" property instead\n   */\n  type?: Trend;\n  trend?: Trend;\n};\n\nconst IconRotation: Record<Trend, number> = {\n  positive: 45,\n  negative: 135,\n  stable: 0,\n};\n\nconst IconWrapper = styled(Padbox)<{ $trend: Trend }>`\n  background: ${({ $trend, theme }) =>\n    getColor(IconBackgroundColor[$trend], { theme })};\n  width: ${pxToRem(20)};\n  height: ${pxToRem(20)};\n  border-radius: ${getRadii('default')};\n  display: grid;\n  place-items: center;\n`;\n\nconst TrendIcon = forwardRef<\n  HTMLDivElement,\n  RequireAtLeastOne<TrendIconProps, 'type' | 'trend'>\n>(({ type, trend }: TrendIconProps, ref) => {\n  const trendValue = type || trend;\n\n  return (\n    <IconWrapper ref={ref} $trend={trendValue} paddingSize=\"xxs\">\n      <Icon\n        color={FontColor[trendValue]}\n        name={trendValue === 'stable' ? 'minus' : 'arrow-up'}\n        size=\"sm\"\n        transform={{ rotate: IconRotation[trendValue] }}\n      />\n    </IconWrapper>\n  );\n});\n\nexport default TrendIcon;\n"],"names":["cov_1k9bn3y99u","actualCoverage","IconBackgroundColor","s","positive","negative","cov_2jhe8g1bgp","path","hash","global","gcv","coverageData","coverage","IconRotation","type","IconWrapper","styled","Padbox","withConfig","displayName","componentId","$trend","theme","f","getColor","pxToRem","getRadii"],"mappings":"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"}
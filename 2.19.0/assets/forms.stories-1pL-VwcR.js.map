{"version":3,"file":"forms.stories-1pL-VwcR.js","sources":["../../../src/components/forms/forms.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport {\n  Checkbox,\n  Error,\n  Input,\n  Label,\n  Note,\n  Radio,\n  Select,\n  Switch,\n  TextArea,\n} from './index';\nimport { Inline, Stack } from '../layout';\nimport { HintTooltip } from '../HintTooltip';\n\nconst meta = {\n  title: 'components/forms/Example',\n  tags: ['!dev'],\n  parameters: {\n    a11y: { disable: true },\n  },\n} satisfies Meta<typeof Label>;\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nconst options = [\n  { value: 'HR', label: 'Croatia' },\n  { value: 'CU', label: 'Cuba' },\n  { value: 'CW', label: 'Cura\\u00e7ao' },\n  { value: 'CY', label: 'Cyprus' },\n  { value: 'CZ', label: 'Czech Republic' },\n  { value: 'DK', label: 'Denmark' },\n];\n\nexport const Default: Story = {\n  render: () => (\n    <form>\n      <Stack gap=\"md\">\n        <Stack>\n          <Label>Your Name</Label>\n\n          <Input type=\"text\" isInvalid />\n\n          <Error>This field is required</Error>\n        </Stack>\n\n        <Stack>\n          <Label>Your Country</Label>\n\n          <Select options={options} />\n\n          <Note>Where you currently live</Note>\n        </Stack>\n\n        <Stack>\n          <Label>I am</Label>\n\n          <Stack gap=\"xs\">\n            <Radio label=\"Human\" name=\"species\" radioId=\"human\" value=\"human\" />\n\n            <Radio\n              label=\"Animal\"\n              name=\"species\"\n              radioId=\"animal\"\n              value=\"animal\"\n            />\n          </Stack>\n        </Stack>\n\n        <Stack>\n          <Label>My hobbies</Label>\n\n          <Stack gap=\"xs\">\n            <Checkbox\n              checkboxId=\"reading\"\n              label=\"Reading\"\n              name=\"hobbies\"\n              value=\"reading\"\n            />\n\n            <Checkbox\n              checkboxId=\"sleeping\"\n              label=\"Sleeping\"\n              name=\"hobbies\"\n              value=\"sleeping\"\n            />\n\n            <Checkbox\n              checkboxId=\"programming\"\n              label=\"Programming\"\n              name=\"hobbies\"\n              value=\"programming\"\n            />\n\n            <Checkbox\n              checkboxId=\"testing\"\n              label=\"Testing\"\n              name=\"hobbies\"\n              value=\"testing\"\n            />\n          </Stack>\n        </Stack>\n\n        <Stack justify=\"flex-start\">\n          <Label>Do you want to make your profile public?</Label>\n\n          <Switch switchId=\"public\" />\n        </Stack>\n\n        <Stack>\n          <Label>Your message to us</Label>\n\n          <TextArea maxLength={140} />\n        </Stack>\n      </Stack>\n    </form>\n  ),\n  parameters: {\n    screenshot: {\n      skip: true,\n    },\n  },\n};\n\nexport const StackedFormField: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithHint: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">\n        Input field label{' '}\n        <HintTooltip placement=\"top\">Hint tooltip content</HintTooltip>\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithNote: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" />\n      <Note>Short description for additional information</Note>\n    </div>\n  ),\n};\n\nexport const StackedFormFieldWithError: Story = {\n  render: () => (\n    <div>\n      <Label htmlFor=\"input-id\">Input field label</Label>\n      <Input id=\"input-id\" type=\"text\" isInvalid />\n      <Error>Description of error</Error>\n    </div>\n  ),\n};\n\nexport const InlinedFormField: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithHint: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label{' '}\n        <HintTooltip placement=\"top\">Hint tooltip content</HintTooltip>\n      </Label>\n      <Input id=\"input-id\" type=\"text\" />\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithNote: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <div>\n        <Input id=\"input-id\" type=\"text\" />\n        <Note>Short description for additional information</Note>\n      </div>\n    </Inline>\n  ),\n};\n\nexport const InlinedFormFieldWithError: Story = {\n  render: () => (\n    <Inline gap=\"4x\" stretch=\"end\">\n      <Label htmlFor=\"input-id\" isInline>\n        Input field label\n      </Label>\n      <div>\n        <Input id=\"input-id\" type=\"text\" isInvalid />\n        <Error>Description of error</Error>\n      </div>\n    </Inline>\n  ),\n};\n"],"names":["value","label","tags","disable","Default","Story","render","jsx","jsxs","Stack","Label","Input","Error","Select","options","Note","Radio","Checkbox","Switch","TextArea","parameters","screenshot","skip","StackedFormField","StackedFormFieldWithHint","HintTooltip","InlinedFormFieldWithError","StackedFormFieldWithError"],"mappings":"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"}
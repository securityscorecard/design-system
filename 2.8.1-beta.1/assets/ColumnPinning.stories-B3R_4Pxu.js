import{j as i}from"./jsx-runtime-Cw0GR0a5.js";import{r as g}from"./index-CTjT7uj6.js";import{D as s}from"./Datatable-ATDnWHNO.js";import{T as n,c as u}from"./Template-DrOofwRc.js";import"./useLogger-DkXBJUOu.js";import"./index-DxUWnzkt.js";import"./styled-components.browser.esm-CkXiwQaI.js";import"./DSProvider-CZqUabl8.js";import"./extends-CF3RwP-h.js";import"./index-DIVhMF2i.js";import"./theme-C_MxYcvQ.js";import"./colors-BJBAFLAc.js";import"./IconButton-BN0A83L5.js";import"./index-C7IrpltL.js";import"./components-CYX7eQ8t.js";import"./index-CmRxaJ3P.js";import"./Icon-Nxma5B5F.js";import"./index-DBr7mztH.js";import"./index-BRV0Se7Z.js";import"./index-DxT0DBGr.js";import"./Spinner-W0TUPOI9.js";import"./prop-DvyrXmKl.js";import"./useSafeTranslation-DgH_B3Fu.js";import"./en-US-CaArnYpN.js";import"./menuElements-DoK581II.js";import"./tslib.es6-BLYux4pC.js";import"./index-BKmXk_rQ.js";import"./index-DHcn_niD.js";import"./Padbox-BddxODtE.js";import"./index-Bdemn2ub.js";import"./Inline.enums-ylSCK-eY.js";import"./Cluster-Ca0XQ4y2.js";import"./index-CGsDvru0.js";import"./isFunction-CFc181nM.js";import"./useLocalStorageState-UxkHlwiN.js";import"./useContainerQuery-DqIcbuCK.js";import"./Skeleton-B0UUdlXt.js";import"./Button-D36O3cyQ.js";import"./index-Dum28YZO.js";import"./index-B9dTXKMz.js";import"./Tooltip-BUCNYsMe.js";import"./FloatingContext-Bsi7uTe6.js";import"./index-DtKicFZi.js";import"./CloseButton-E870eJyc.js";import"./index-BkSsiqLF.js";import"./checkCircleSolid-CXNAtMl8.js";import"./sortable.esm-Bi71s_q_.js";import"./modifiers.esm-D9Gd6yO_.js";import"./index-xJp9Kd2E.js";import"./index-CFj4K2pu.js";import"./Pill-DyYZ_fkc.js";import"./PillRemoveButton-DcLVDju2.js";const Pn={title:"components/DatatableV2/ColumnPinning",component:s,parameters:{screenshot:{skip:!0}}},c=n.bind({});c.args=n.args;const d=n.bind({});d.args={...n.args,enableColumnPinning:!1};const P=n.bind({});P.args={...n.args,columns:[...u,{accessorKey:"country",header:"Country",enablePinning:!1}]};const a=n.bind({});a.args={...n.args,initialState:{columnPinning:{left:["score"],right:["detectionMethod"]}},enableRowSelection:!0};a.parameters={screenshot:{skip:!1,viewport:{width:600,height:1600}}};const t=p=>{const[o,l]=g.useState({left:["score"]});return i.jsxs(i.Fragment,{children:[i.jsx(s,{state:{columnPinning:o},enableRowSelection:!0,onColumnPinningChange:l,...p}),i.jsxs("div",{children:[i.jsx("strong",{children:"Debug:"}),i.jsx("pre",{children:JSON.stringify(o,null,2)})]})]})};t.args=n.args;var r,e,m;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [columnPinning, setColumnPinning] = useState<ColumnPinningState>({
    left: ['score']
  });
  return <>
      <Datatable state={{
      columnPinning
    }} enableRowSelection onColumnPinningChange={setColumnPinning} {...args} />
      <div>
        <strong>Debug:</strong>
        <pre>{JSON.stringify(columnPinning, null, 2)}</pre>
      </div>
    </>;
}`,...(m=(e=t.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const Cn=["ColumnPinningEnabled","DisabledColumnPinning","DisabledColumnPinningForColumn","InitialColumnPinning","ColumnPinningManagedState"];export{c as ColumnPinningEnabled,t as ColumnPinningManagedState,d as DisabledColumnPinning,P as DisabledColumnPinningForColumn,a as InitialColumnPinning,Cn as __namedExportsOrder,Pn as default};
//# sourceMappingURL=ColumnPinning.stories-B3R_4Pxu.js.map
